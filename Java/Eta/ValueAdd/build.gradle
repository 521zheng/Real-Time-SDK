apply plugin: 'net.saliman.cobertura'
apply plugin: 'maven'
apply plugin: 'signing'

def jenkinsBuild = System.getenv("BUILD_NUMBER") ?: "0"

group = "com.refinitiv.eta.valueadd"
archivesBaseName = "etaValueAdd"
version "$SpecificationVersion"

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            pom.project {
                name "$archivesBaseName"
                    packaging 'jar'
                    url 'https://github.com/Refinitiv/Real-Time-SDK'
                    description 'Enterprise Transport API (ETA) Java Edition ValueAdd Classes'

                    scm {
                        connection 'scm:git:git://github.com/Refinitiv/Real-Time-SDK.git'
                            developerConnection 'scm:git:ssh://github.com:Refinitiv/Real-Time-SDK.git'
                            url 'http://github.com/Refinitiv/Real-Time-SDK/tree/master'
                    }

                developers {
                    developer {
                        organization 'Refinitiv'
                    }
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        } 
    } 
}

signing {
    sign configurations.archives
}

cobertura {
     coverageFormats = ['html', 'xml']
}

eclipse {
    project {
        name = 'RTSDK-Eta-ValueAdd'
    }
}

dependencies {
        compile group: 'org.json', name: 'json', version: '20180130'
        compile group: 'org.apache.httpcomponents', name: 'httpcore-nio', version: '4.4.12'
        compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.12'
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
	
	// Since eclipse does not distinguish between the testCompile and compile 
	// we need to have this check for publishing to maven central to list the mockito
	// as only the compile test depenency. When publishing to maven central the task
	// needs to be executed with the -Pmavencentral
	if (project.hasProperty("mavencentral"))
	{
        testCompile('org.mockito:mockito-all:1.9.0'){
            exclude group: 'org.hamcrest'
        }
	}
	else
	{
        compile('org.mockito:mockito-all:1.9.0'){
            exclude group: 'org.hamcrest'
        }
	}

	compile project(':Eta:Core')

	testCompile project(':Eta:Core').sourceSets.test.output

	// for unit test use the classes instead of the jar file, since the jar is sealed
	testRuntime project(':Eta:Core').sourceSets.main.output

	// needed for cobertura
        testRuntime group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'

}

ext.sharedManifest = manifest {
        attributes( 'Sealed': 'true',
                'Build-Date': BuildDate,
                'Specification-Version': SpecificationVersion,
                'Specification-Vendor': vendor,
                'Implementation-Title': group,
                'Implementation-Version': etaImplementationVersion,
                'Implementation-Vendor': vendor )
}

jar {

	doFirst { println 'Creating ValueAdd jar file' }

	manifest { 
		attributes 'Specification-Title': 'Enterprise Transport API (ETA) Java Edition ValueAdd Classes'
		from sharedManifest 
	}

        destinationDir = file("../Libs/")
        baseName = 'etaValueAdd'
}

javadoc {
        doFirst {
                println "Generating javadoc for ValueAdd"
        }

        exclude '**/*Impl.java'
        exclude '**/JUnit*.java'

        destinationDir = file('../Docs/refman/etajvalueadd/')
        title = "ETA ValueAdd JAVA " +  "${SpecificationVersion}"

        options.footer ("${javadoc_footer}")
        options.header ("${javadoc_header}")
        options.bottom ("${javadoc_bottom}")

        options.setWindowTitle ('ETA ValueAdd')
}

task cleanJar (type: Delete) {
        delete "${jar.archivePath}"
}
clean.dependsOn cleanJar

task javadocJar (type: Jar) {
        classifier = 'javadoc'
        from javadoc.destinationDir
        destinationDir = jar.destinationDir

        manifest {
		attributes 'Specification-Title': 'Enterprise Transport API (ETA) Java Edition ValueAdd Classes'
                from sharedManifest
        }
}

task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
}

artifacts {
        archives javadocJar, sourcesJar
}

test {
        // set to true to see the junit stdoutput
        testLogging.showStandardStreams = false
        maxParallelForks = 1
//        maxParallelForks = Runtime.runtime.availableProcessors()
}

