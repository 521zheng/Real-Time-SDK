apply plugin: 'maven'
apply plugin: 'signing'


def jenkinsBuild = System.getenv("BUILD_NUMBER") ?: "0"

group = "com.rtsdk.eta.valueadd.cache"
archivesBaseName = "etaValueAddCache"
version "$SpecificationVersion"

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            pom.project {
                name "$archivesBaseName"
                    packaging 'jar'
                    url 'https://github.com/Refinitiv/Real-Time-SDK'
                    description 'Enterprise Transport API (ETA) Java Edition ValueAddCache Classes'

                    scm {
                        connection 'scm:git:git://github.com/Refinitiv/Real-Time-SDK.git'
                            developerConnection 'scm:git:ssh://github.com:Refinitiv/Real-Time-SDK.git'
                            url 'http://github.com/Refinitiv/Real-Time-SDK/tree/master'
                    }

                developers {
                    developer {
                        organization 'Refinitiv'
                    }
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}

signing {
    sign configurations.archives
}

eclipse {
    project {
        name = 'RTSDK-Eta-ValueAddCache'
    }
}

dependencies {
	testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.0'

	compile project(':Eta:ValueAdd')
}

ext.sharedManifest = manifest {
        attributes( 'Sealed': 'true',
                'Build-Date': BuildDate,
                'Specification-Version': SpecificationVersion,
                'Specification-Vendor': vendor,
                'Implementation-Title': group,
                'Implementation-Version': etaImplementationVersion,
                'Implementation-Vendor': vendor )
}

jar {
	doFirst { println 'Creating ValueAddCache jar file' }

	manifest { 
		attributes 'Specification-Title': 'Enterprise Transport API (ETA) Java Edition ValueAddCache Classes'
		from sharedManifest 
	}

        destinationDir = file("../Libs/")
        baseName = 'etaValueAddCache'
}

javadoc {
        doFirst {
                println "Generating javadoc for ValueAddCache"
        }

        destinationDir = file('../Docs/refman/upajvalueaddcache/')
        title = "ETA ValueAddCache JAVA " +  "${SpecificationVersion}"

        options.footer ("${javadoc_footer}")
        options.header ("${javadoc_header}")
        options.bottom ("${javadoc_bottom}")

        options.group ('Cache', 'com.rtsdk.eta.valueadd.cache')

        options.setWindowTitle ('ETA ValueAddCache')
}

task cleanJar (type: Delete) {
        delete "${jar.archivePath}"
}
clean.dependsOn cleanJar

task javadocJar (type: Jar) {
        classifier = 'javadoc'
        from javadoc.destinationDir
        destinationDir = jar.destinationDir

        manifest {
		attributes 'Specification-Title': 'Enterprise Transport API (ETA) Java Edition ValueAddCache Classes'
                from sharedManifest
        }
}

task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
}

artifacts {
        archives javadocJar, sourcesJar
}

