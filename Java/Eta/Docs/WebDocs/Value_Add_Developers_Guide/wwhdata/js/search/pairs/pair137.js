function FileData_Pairs(x)
{
x.t("example","shows");
x.t("example","writing");
x.t("example","function");
x.t("example","reactorchannel.getbuffer");
x.t("example","following");
x.t("m.parentnode.insertbefore","window");
x.t("msgbuffer","errorinfo");
x.t("msgbuffer","reactorchannel.majorversion");
x.t("msgbuffer","submitopts.clear");
x.t("msgbuffer","null");
x.t("msgbuffer","submitopts");
x.t("msgbuffer","reactorchannel.getbuffer");
x.t("encodeiter.setbufferandrwfversion","msgbuffer");
x.t("nothing","left");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("codecfactory.createencodeiterator","reactorsubmitoptions");
x.t("6.6.2.10","example");
x.t("reactorreturncodes.success","successful");
x.t("reactorreturncodes.success","break");
x.t("shows","typical");
x.t("transportbuffer","example");
x.t("transportbuffer","msgbuffer");
x.t("transportbuffer","6.6.2.10");
x.t("transportbuffer","transportbuffer");
x.t("left","return");
x.t("a=s.createelement","(o)");
x.t("new","date");
x.t("errorinfo","check");
x.t("errorinfo","break");
x.t("errorinfo","encodeiter.clear");
x.t("document","script");
x.t("pageview","transport");
x.t("encodeiterator","encodeiter");
x.t("need","release");
x.t("again","ret");
x.t("reactorreturncodes.write_call_again","large");
x.t("api","java");
x.t("check","return");
x.t("false","errorinfo");
x.t("large","message");
x.t("writing","data");
x.t("couldn\u2019t","fully");
x.t("window","document");
x.t("reactorchannel.releasebuffer","msgbuffer");
x.t("reactorchannel.releasebuffer","chapter");
x.t("write","nothing");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("(ret)","case");
x.t("auto","send");
x.t("error","occurred");
x.t("written","call");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("encodeiter","msgbuffer");
x.t("encodeiter","codecfactory.createencodeiterator");
x.t("reactorchannel.majorversion","reactorchannel.minorversion");
x.t("6.6","writing");
x.t("chapter","reactor");
x.t("reactor","detailed");
x.t("detailed","view");
x.t("transport","api");
x.t("release","buffer");
x.t("switch","(ret)");
x.t("submitopts.clear","ret");
x.t("code","example");
x.t("code","switch");
x.t("return","reactorreturncodes.success");
x.t("return","code");
x.t("fully","written");
x.t("message","couldn\u2019t");
x.t("java","edition");
x.t("6.6.2","writing");
x.t("null","encodeiterator");
x.t("1024","false");
x.t("occurred","need");
x.t("encodemsgintobuffer","encodeiter");
x.t("send","pageview");
x.t("submitopts","errorinfo");
x.t("submitopts","reactorfactory.createreactorsubmitoptions");
x.t("(arguments)","[r]");
x.t("ret","reactorchannel.submit");
x.t("view","6.6");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("typical","reactorchannel.getbuffer");
x.t("data","6.6.2");
x.t("data","using");
x.t("case","reactorreturncodes.success");
x.t("case","reactorreturncodes.write_call_again");
x.t("case","reactorreturncodes.failure");
x.t("successful","write");
x.t("reactorreturncodes.failure","error");
x.t("submit","again");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("edition","example");
x.t("reactorsubmitoptions","submitopts");
x.t("call","pass");
x.t("reactorchannel.getbuffer","reactorchannel.releasebuffer");
x.t("reactorchannel.getbuffer","1024");
x.t("reactorchannel.getbuffer","reactorchannel.submit");
x.t(".q=i","[r]");
x.t("following","example");
x.t("break","code");
x.t("break","case");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("reactorfactory.createreactorsubmitoptions","msgbuffer");
x.t("using","reactorchannel.submit");
x.t("a.async=1","a.src=g");
x.t("encodeiter.clear","encodeiter.setbufferandrwfversion");
x.t("pass","submit");
x.t("googleanalyticsobject","[r]");
x.t("reactorchannel.minorversion","encodemsgintobuffer");
x.t("buffer","reactorchannel.releasebuffer");
x.t("reactorchannel.submit","msgbuffer");
x.t("reactorchannel.submit","transportbuffer");
x.t("reactorchannel.submit","reactorchannel.getbuffer");
x.t("a.src=g","m.parentnode.insertbefore");
}
