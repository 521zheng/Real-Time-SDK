function FileData_Pairs(x)
{
x.t("supports","information");
x.t("m.parentnode.insertbefore","window");
x.t("indicated","members");
x.t("receives","warnings");
x.t("receives","tunnelstreamrequestevent");
x.t("reactorerrorinfo","event");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("refer","section");
x.t("omm","provider");
x.t("events","regarding");
x.t("events","received");
x.t("persistent_queue","supported");
x.t("6.7.6.1","accept");
x.t("6.7.6","accepting");
x.t("enabled","specifying");
x.t("provided","specified");
x.t("provided","reactorchannel");
x.t("type","reactorchanneleventtypes");
x.t("calls","reactorchannel.accepttunnelstream");
x.t("calls","reactorchannel.rejecttunnelstream");
x.t("a=s.createelement","(o)");
x.t("queue","messaging");
x.t("automatically","rejected");
x.t("automatically","rejects");
x.t("text","describing");
x.t("new","date");
x.t("document","script");
x.t("pageview","transport");
x.t("reject","tunnel");
x.t("api","automatically");
x.t("api","java");
x.t("requested","tunnel");
x.t("check","tunnelstreamrequestevent.classofservicefilter");
x.t("filter","refer");
x.t("classofservice.guarantee.type","setting");
x.t("specified","tunnelstreamacceptoptions.statuseventcallback");
x.t("via","reactorchannelevent");
x.t("warnings","via");
x.t("creating","using");
x.t("returning","tunnelstreamlistenercallback");
x.t("provider","calls");
x.t("provider","check");
x.t("provider","allows");
x.t("provider","application");
x.t("provider","applications");
x.t("provider","call");
x.t("window","document");
x.t("classofservice","requested");
x.t("parameters","indicated");
x.t("further","events");
x.t("determine","behaviors");
x.t("allows","provider");
x.t("regarding","accepted");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("stream","provided");
x.t("stream","queue");
x.t("stream","automatically");
x.t("stream","provider");
x.t("stream","tunnelstreamlistenercallback");
x.t("stream","ensure");
x.t("contain","text");
x.t("contain","invalid");
x.t("auto","send");
x.t("tunnelstreamlistenercallback","receives");
x.t("tunnelstreamlistenercallback","provider");
x.t("tunnelstreamlistenercallback","providerrole");
x.t("accepted","stream");
x.t("point","provider");
x.t("supported","provider");
x.t("members","class");
x.t("behaviors","consumer");
x.t("reactorchannelevent","type");
x.t("reactorchannelevent","similar");
x.t("accept","tunnel");
x.t("reason","rejection");
x.t("reactorchannel","enabled");
x.t("tunnel","stream");
x.t("tunnel","streams");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("retrieve","classofservice");
x.t("receive","warning");
x.t("chapter","reactor");
x.t("6.7","creating");
x.t("reactor","detailed");
x.t("detailed","view");
x.t("transport","api");
x.t("opens","tunnel");
x.t("match","provider");
x.t("tunnelstreamrequestevent.classofservicefilter","determine");
x.t("section","6.7.6.1");
x.t("describing","reason");
x.t("rejected","chapter");
x.t("invalid","information");
x.t("rejection","warning");
x.t("consumer","supports");
x.t("consumer","opens");
x.t("rejects","tunnel");
x.t("providerrole","consumer");
x.t("reactorchannel.accepttunnelstream","given");
x.t("reactorchannel.accepttunnelstream","reactorchannel.rejecttunnelstream");
x.t("given","tunnelstreamrequestevent");
x.t("java","edition");
x.t("ensure","provider");
x.t("ensure","parameters");
x.t("reactorchannel.rejecttunnelstream","returning");
x.t("reactorchannel.rejecttunnelstream","given");
x.t("event","contain");
x.t("similar","above");
x.t("accepting","tunnel");
x.t("send","pageview");
x.t("(arguments)","[r]");
x.t("view","6.7");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("reactorchanneleventtypes","warning");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("specifying","tunnelstreamlistenercallback");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","filter");
x.t("information","happens");
x.t("messaging","classofservice.guarantee.type");
x.t("received","tunnel");
x.t("happens","provider");
x.t("application","receives");
x.t("application","calls");
x.t("application","receive");
x.t("above","stream");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("applications","api");
x.t("applications","accept");
x.t("edition","accepting");
x.t("call","reactorchannel.accepttunnelstream");
x.t("call","tunnelstreamrequestevent.classofservice");
x.t(".q=i","[r]");
x.t("tunnelstreamrequestevent","further");
x.t("tunnelstreamrequestevent","point");
x.t("service","match");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("class","service");
x.t("setting","persistent_queue");
x.t("warning","reactorerrorinfo");
x.t("warning","via");
x.t("warning","ensure");
x.t("using","tunnel");
x.t("a.async=1","a.src=g");
x.t("tunnelstreamrequestevent.classofservice","retrieve");
x.t("tunnelstreamacceptoptions.statuseventcallback","reject");
x.t("googleanalyticsobject","[r]");
x.t("streams","omm");
x.t("streams","6.7.6");
x.t("streams","provided");
x.t("streams","contain");
x.t("streams","function");
x.t("a.src=g","m.parentnode.insertbefore");
}
