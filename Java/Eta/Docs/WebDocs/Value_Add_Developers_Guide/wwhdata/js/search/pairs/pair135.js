function FileData_Pairs(x)
{
x.t("m.parentnode.insertbefore","window");
x.t("method","succeeded");
x.t("available","again");
x.t("available","pool");
x.t("defines","return");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","defines");
x.t("table","reactorchannel.submit");
x.t("description","reactorreturncodes.success");
x.t("reactorreturncodes.success","indicates");
x.t("user","free");
x.t("transportbuffer","method");
x.t("transportbuffer","table");
x.t("transportbuffer","calling");
x.t("transportbuffer","return");
x.t("transportbuffer","additional");
x.t("transportbuffer","application");
x.t("transportbuffer","call");
x.t("transportbuffer","6.6.2.8");
x.t("transportbuffer","released");
x.t("time","using");
x.t("fragmentation","process");
x.t("left","application");
x.t("a=s.createelement","(o)");
x.t("new","date");
x.t("document","script");
x.t("pageview","transport");
x.t("indicates","large");
x.t("indicates","general");
x.t("indicates","reactorchannel.submit");
x.t("again","buffer");
x.t("proper","ordering");
x.t("reactorreturncodes.write_call_again","indicates");
x.t("api","reactor");
x.t("api","java");
x.t("due","pool");
x.t("increase","number");
x.t("large","buffer");
x.t("become","available");
x.t("writing","data");
x.t("codes","function");
x.t("codes","return");
x.t("codes","following");
x.t("codes","occur");
x.t("closed","application");
x.t("window","document");
x.t("subsequently","pass");
x.t("continue","fragmentation");
x.t("reactorchannel.releasebuffer","chapter");
x.t("reactorchannel.releasebuffer","reactorreturncodes.failure");
x.t("write","failure");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("auto","send");
x.t("written","reactorchannel.submit");
x.t("number","available");
x.t("reactorchannel","closed");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("6.6","writing");
x.t("chapter","reactor");
x.t("reactor","reactorreturncodes.write_call_again");
x.t("reactor","detailed");
x.t("reactor","flush");
x.t("detailed","view");
x.t("transport","api");
x.t("succeeded","transportbuffer");
x.t("release","transportbuffer");
x.t("release","calling");
x.t("ordering","fragment");
x.t("calling","reactorchannel.releasebuffer");
x.t("code","description");
x.t("return","codes");
x.t("return","code");
x.t("fully","written");
x.t("level","proper");
x.t("buffers","become");
x.t("buffers","unavailable");
x.t("buffers","application");
x.t("buffers","pool");
x.t("java","edition");
x.t("6.6.2","writing");
x.t("occurred","reactorchannel");
x.t("fragment","continue");
x.t("failure","occurred");
x.t("additional","time");
x.t("send","pageview");
x.t("free","buffers");
x.t("(arguments)","[r]");
x.t("process","left");
x.t("view","6.6");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("data","6.6.2");
x.t("data","using");
x.t("data","reactorchannel.submit");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("unavailable","reactor");
x.t("application","subsequently");
x.t("application","release");
x.t("application","optionally");
x.t("reactorreturncodes.failure","indicates");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("flush","user");
x.t("reactorchannel.ioctl","increase");
x.t("priority","level");
x.t("typically","due");
x.t("optionally","reactorchannel.ioctl");
x.t("6.6.2.8","writing");
x.t("edition","writing");
x.t("call","typically");
x.t("call","reactorchannel.submit");
x.t(".q=i","[r]");
x.t("following","table");
x.t("used","call");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("using","priority");
x.t("using","reactorchannel.submit");
x.t("general","write");
x.t("a.async=1","a.src=g");
x.t("pass","buffer");
x.t("googleanalyticsobject","[r]");
x.t("occur","using");
x.t("released","transport");
x.t("buffer","fully");
x.t("buffer","used");
x.t("buffer","reactorchannel.submit");
x.t("pool","buffers");
x.t("reactorchannel.submit","transportbuffer");
x.t("a.src=g","m.parentnode.insertbefore");
}
