buildscript {
        repositories {
                mavenCentral()
                maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        }

        dependencies {
                classpath "net.saliman:gradle-cobertura-plugin:2.5.0"
        }
}

plugins {
        id 'net.saliman.cobertura' version '2.5.0'
}

apply plugin: 'net.saliman.cobertura'

subprojects {

	apply plugin: 'java'
	apply plugin: 'eclipse'

	repositories {
	    mavenCentral()
	}

}

allprojects {
	dependencies {

		compile group: 'commons-codec', name: 'commons-codec', version: '1.4'
		compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'

		compile group: 'junit', name: 'junit', version: '4.12'

		testCompile group: 'junit', name: 'junit', version: '4.12'

		// this was needed for cobertura
		testRuntime "org.slf4j:slf4j-log4j12:1.7.5"
		testRuntime "log4j:log4j:1.2.7"
	}
}

task wrapper( type: Wrapper ) {
	gradleVersion = '4.2.1'
}

// this method creates a command line arguments
def setCommandLineArguments(commandLineArgs) {
	// remove spaces 
	def arguments = commandLineArgs.tokenize()

		// create a string that can be used by Eval 
		def cla = "["
		// go through the list to get each argument
		arguments.each {
			cla += "'" + "${it}" + "',"
		}

	// remove last "," add "]" and set the args 
	return cla.substring(0, cla.lastIndexOf(',')) + "]"
}

// disable creating empty Java.jar file 
jar.enabled = false
