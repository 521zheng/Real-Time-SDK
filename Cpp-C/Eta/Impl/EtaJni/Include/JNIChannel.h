/*|-----------------------------------------------------------------------------
 *|            This source code is provided under the Apache 2.0 license      --
 *|  and is provided AS IS with no warranty or guarantee of fit for purpose.  --
 *|                See the project's LICENSE.md for details.                  --
 *|           Copyright (C) 2019 Refinitiv. All rights reserved.            --
 *|-----------------------------------------------------------------------------
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_refinitiv_eta_transport_JNIChannel */

#ifndef _Included_com_refinitiv_eta_transport_JNIChannel
#define _Included_com_refinitiv_eta_transport_JNIChannel
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslGetChannelInfo
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/ChannelInfoImpl;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslGetChannelInfo
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslIoctl
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;ILjava/lang/Object;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslIoctl
  (JNIEnv *, jobject, jobject, jint, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslBufferUsage
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslBufferUsage
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslInitChannel
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/InProgInfoImpl;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslInitChannel
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslCloseChannel
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslCloseChannel
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslRead
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/ReadArgsImpl;Lcom/refinitiv/eta/transport/ErrorImpl;)Lcom/refinitiv/eta/transport/JNIBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslRead
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslGetBuffer
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;IZLcom/refinitiv/eta/transport/ErrorImpl;)Lcom/refinitiv/eta/transport/JNIBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslGetBuffer
  (JNIEnv *, jobject, jobject, jint, jboolean, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslReleaseBuffer
 * Signature: (Lcom/refinitiv/eta/transport/JNIBuffer;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslReleaseBuffer
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslPackBuffer
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/JNIBuffer;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslPackBuffer
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslWrite
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/JNIBuffer;Lcom/refinitiv/eta/transport/WriteArgsImpl;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslWrite
  (JNIEnv *, jobject, jobject, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslFlush
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslFlush
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslPing
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslPing
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_JNIChannel
 * Method:    rsslReconnectClient
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;Lcom/refinitiv/eta/transport/ErrorImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_JNIChannel_rsslReconnectClient
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_ShMemChannel
 * Method:    rsslShMemServerSeqNum
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;)J
 */
JNIEXPORT jlong JNICALL Java_com_refinitiv_eta_transport_ShMemChannel_rsslShMemServerSeqNum
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_refinitiv_eta_transport_ShMemChannel
 * Method:    rsslShMemFlags
 * Signature: (Lcom/refinitiv/eta/transport/JNIChannel;)I
 */
JNIEXPORT jint JNICALL Java_com_refinitiv_eta_transport_ShMemChannel_rsslShMemFlags
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
