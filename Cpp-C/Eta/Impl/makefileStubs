#Sets the root directory for this package
ROOTPLAT=..
#If User wants to build with Optimized_Assert builds, change LIBTYPE=Optimized_Assert
ifeq ($(LIBTYPE),)
	LIBTYPE=Optimized
endif


ARCHTYPE=$(shell uname -m)
ifeq ($(ARCHTYPE),i86pc)
	LIB_DIR=Libs/SOL10_X64_64_SS12/$(LIBTYPE)
	RSSL_LIB_DIR=$(ROOTPLAT)/Libs/SOL10_X64_64_SS12/$(LIBTYPE)
	OUTPUT_DIR=$(ROOTPLAT)/Libs/SOL10_X64_64_SS12/$(LIBTYPE)
	CFLAGS = -m64 -xtarget=opteron -xarch=sse2 -nofstore -xregs=frameptr -Di86pc -Di86pc_SunOS_510_64 -KPIC
else
	#
	# assume this is some type of Linux
	#
	OS_VER=$(shell lsb_release -r | sed 's/\.[0-9]//')
	DIST=$(shell lsb_release -i)
	CFLAGS = -m64

	# check for RedHat Linux first
	ifeq ($(findstring RedHat,$(DIST)),RedHat)
		ifeq ($(findstring 5, $(OS_VER)), 5)
       		#AS5
		   	LIB_DIR=Libs/RHEL5_64_GCC412/$(LIBTYPE)
		   	RSSL_LIB_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
		   	OUTPUT_DIR=./RHEL5_64_GCC412/$(LIBTYPE)
		else
			# assume AS6 (or greater)
			LIB_DIR=$(ROOTPLAT)/Libs/RHEL6_64_GCC444/$(LIBTYPE)
			RSSL_LIB_DIR=$(ROOTPLAT)/Libs/RHEL6_64_GCC444/$(LIBTYPE)
			OUTPUT_DIR=$(ROOTPLAT)/Libs/RHEL6_64_GCC444/$(LIBTYPE)
		endif
	else
		ifeq ($(findstring SUSE,$(DIST)),SUSE)	 # check for SUSE Linux
			ifeq ($(findstring 11, $(OS_VER)), 11)
				# use AS5 for SUSE 11 (or greater)
				LIB_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
				RSSL_LIB_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
				OUTPUT_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
			else
				# if we dont know what it is, assume AS5
				LIB_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
				RSSL_LIB_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
				OUTPUT_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
			endif
		else
			ifeq ($(findstring CentOS,$(DIST)),CentOS)
				# assume Oracle 7 (or greater)
				LIB_DIR=$(ROOTPLAT)/Libs/OL7_64_GCC482/$(LIBTYPE)
				RSSL_LIB_DIR=$(ROOTPLAT)/Libs/OL7_64_GCC482/$(LIBTYPE)
				OUTPUT_DIR=$(ROOTPLAT)/Libs/OL7_64_GCC482/$(LIBTYPE)
			else
				DIST=$(shell cat /etc/oracle-release)
				ifeq ($(findstring Oracle,$(DIST)),Oracle)  # check for Oracle Linux
					ifeq ($(findstring 5, $(OS_VER)), 5)
						#AS5
						LIB_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
						RSSL_LIB_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
						OUTPUT_DIR=$(ROOTPLAT)/Libs/RHEL5_64_GCC412/$(LIBTYPE)
					else
						ifeq ($(findstring 6, $(OS_VER)), 6)
							# AS6
							LIB_DIR=$(ROOTPLAT)/Libs/RHEL6_64_GCC444/$(LIBTYPE)
							RSSL_LIB_DIR=$(ROOTPLAT)/Libs/RHEL6_64_GCC444/$(LIBTYPE)
							OUTPUT_DIR=$(ROOTPLAT)/Libs/RHEL6_64_GCC444/$(LIBTYPE)
						else
							# assume AS7 (or greater)
							LIB_DIR=$(ROOTPLAT)/Libs/OL7_64_GCC482/$(LIBTYPE)
							RSSL_LIB_DIR=$(ROOTPLAT)/Libs/OL7_64_GCC482/$(LIBTYPE)
							OUTPUT_DIR=$(ROOTPLAT)/Libs/OL7_64_GCC482/$(LIBTYPE)
						endif
					endif
				endif
			endif
		endif
	endif
endif

CFLAGS += -D_SVID_SOURCE=1 -DCOMPILE_64BITS
HEADER_INC = -I$(ROOTPLAT)/Include/Codec/ -I$(ROOTPLAT)/Include/Transport/ -I$(ROOTPLAT)/Include/Cache/ -I$(ROOTPLAT)/Include/Util/

EXE_DIR=$(OUTPUT_DIR)
LN_HOMEPATH=../..

OS_NAME= $(shell uname -s)
ifeq ($(OS_NAME), SunOS)
	export CC=/tools/SunStudio12/SUNWspro/bin/cc
	CFLAGS +=  -Dsun4_SunOS_5X -DSYSENT_H -DSOLARIS2 -xlibmil -xlibmopt -xbuiltin=%all -mt -R $(EXE_DIR)/Shared
	LNCMD = ln -s
	SONAME_OPT=-G -h
endif

ifeq ($(OS_NAME), Linux)
    export COMPILER=gnu
    export CC=/usr/bin/gcc -fPIC -ggdb3
	CFLAGS += -DLinux -Dx86_Linux_4X -Dx86_Linux_5X -DLinuxVersion=5 -D_iso_stdcpp_ -D_BSD_SOURCE=1 -D_POSIX_SOURCE=1 -D_POSIX_C_SOURCE=199506L -D_XOPEN_SOURCE=500  -D_POSIX_PTHREAD_SEMANTICS -D_GNU_SOURCE
	LNCMD = ln -is
	SONAME_OPT=-shared -Wl,-soname,
endif

$(OUTPUT_DIR)/obj/Dummy/%.o : %.c
	rm -f $@
	mkdir -p $(dir $@)
	$(CC)  -c $(CFLAGS) $(HEADER_INC) -o $@ $<

$(OUTPUT_DIR)/obj/%.o : %.c
	rm -f $@
	mkdir -p $(dir $@)
	$(CC)  -c $(CFLAGS) $(HEADER_INC) -o $@ $<


$(OUTPUT_DIR)/%.o : %.c
	rm -f $@
	mkdir -p $(dir $@)
	$(CC)  -c $(CFLAGS) $(HEADER_INC) -o $@ $<

$(OUTPUT_DIR)/obj/%.o : %.C
	rm -f $@
	mkdir -p $(dir $@)
	$(CC)  -c $(CFLAGS) $(HEADER_INC) -o $@ $<

$(OUTPUT_DIR)/%.o : %.C
	rm -f $@
	mkdir -p $(dir $@)
	$(CC)  -c $(CFLAGS) $(HEADER_INC) -o $@ $<


main: librssl.a librssl.so librsslVACache.a librsslVACache.so

librssl_src = \
	CodecStubs/data_stubs.c \
	CodecStubs/message_stubs.c \
	TransportStubs/transport_stubs.c

librsslVACache_src = \
	CacheStubs/cache_stubs.c


librssl_objs = $(addprefix $(OUTPUT_DIR)/obj/,$(librssl_src:%.c=%.o))
librsslVACache_objs = $(addprefix $(OUTPUT_DIR)/obj/,$(librsslVACache_src:%.c=%.o))


librssl.a : $(librssl_objs)
	mkdir -p $(EXE_DIR)
	ar -ruv $(EXE_DIR)/librssl.a $(librssl_objs)

librsslVACache.a : $(librsslVACache_objs)
	mkdir -p $(EXE_DIR)
	ar -ruv $(EXE_DIR)/librsslVACache.a $(librsslVACache_objs)


librssl.so : librssl.so.6
	( cd $(EXE_DIR)/Shared; rm -f librssl.so; ln -s librssl.so.6 librssl.so; )

librssl.so.6 : $(librssl_objs)
	mkdir -p $(EXE_DIR)/Shared
	$(CC) $(CFLAGS) -o $(EXE_DIR)/Shared/$@ $(librssl_objs) $(SONAME_OPT)$@ $(SYSTEM_LIBS)


librsslVACache.so : librsslVACache.so.2
	( cd $(EXE_DIR)/Shared; rm -f librsslVACache.so; ln -s librsslVACache.so.2 librsslVACache.so; )

librsslVACache.so.2 : $(librsslVACache_objs)
	mkdir -p $(EXE_DIR)/Shared
	$(CC) $(CFLAGS) -o $(EXE_DIR)/Shared/$@ $(librsslVACache_objs) $(SONAME_OPT)$@ $(SYSTEM_LIBS)

clean:
	rm -rf $(OUTPUT_DIR)

