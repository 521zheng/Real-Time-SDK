cmake_minimum_required (VERSION 3.8)

if ( ${CMAKE_SYSTEM_NAME} STREQUAL "Windows" )
  set( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /D WIN32_LEAN_AND_MEAN /D _CONSOLE /D _CRT_SECURE_NO_WARNINGS /Zc:wchar_t- /Gm- /O2 /Ob2 /Ot /wd\"4290\" /Gy /WX- /Gd /Oi /EHsc /nologo" )
  set( "CMAKE_C_FLAGS_RELEASE_MD" "/MD  /D NDEBUG" )
  set( "CMAKE_C_FLAGS_DEBUG_MDD" "/MDd " )
  set( EXAMPLE_LIBRARIES wininet.lib ws2_32.lib )
  set( STATIC_EXT "_static" )

elseif ( ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" )
  set( CMAKE_C_FLAGS "-m64 -D_SVID_SOURCE=1 -DCOMPILE_64BITS -DLinux -Dx86_Linux_4X -Dx86_Linux_5X -DLinuxVersion=5 -D_iso_stdcpp_ -D_BSD_SOURCE=1 -D_POSIX_SOURCE=1 -D_POSIX_C_SOURCE=199506L -D_XOPEN_SOURCE=500 -D_REENTRANT -DDEV_POS_THR -D_POSIX_PTHREAD_SEMANTICS -D_GNU_SOURCE" )
  set( "CMAKE_C_FLAGS_OPTIMIZEDSTATIC" "-O3 -DNDEBUG" )
  set( "CMAKE_C_FLAGS_OPTIMIZEDASSERTSTATIC" "-O3 -DNDEBUG" )
  set( "CMAKE_C_FLAGS_OPTIMIZEDSHARED" "-O3 -DNDEBUG" )
  set( "CMAKE_C_FLAGS_OPTIMIZEDASSERTSHARED" "-O3 -DNDEBUG" )
  set( "CMAKE_C_FLAGS_DEBUGSTATIC" "-ggdb3" )
  set( "CMAKE_C_FLAGS_DEBUGSHARED" "-ggdb3" )

  set( SYSTEM_LIBRARIES rt dl pthread m )
  set( EXAMPLE_LIBRARIES ${RSSL} ${RSSL_VACACHE} )
  message( STATUS "EXAMPLE_LIBRARIES ${EXAMPLE_LIBRARIES}" )

endif()

add_subdirectory( Examples/AuthLock )
add_subdirectory( Examples/Consumer )
add_subdirectory( Examples/EncDecExample )
add_subdirectory( Examples/NIProvider )
add_subdirectory( Examples/Provider )
add_subdirectory( Examples/VAConsumer )
add_subdirectory( Examples/VANIProvider )
add_subdirectory( Examples/VAProvider )
add_subdirectory( Examples/WatchlistConsumer )
#if( ${CMAKE_SYSTEM_NAME} STREQUAL "Windows" )
#  add_subdirectory( Examples/RmtesNewsDisplay )
#endif()
