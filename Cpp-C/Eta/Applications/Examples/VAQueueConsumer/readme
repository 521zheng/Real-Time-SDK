rsslVAQueueConsumer Application Description

--------
Summary:
--------

The purpose of this application is to demonstrate sending and 
receiving content with a Queue Provider.

The Queue Consumer implements the basic Reactor functionality required
to establish a connection.  Once a connection is established, it will 
create a tunnel stream with Guaranteed Delivery behavior between itself
and the Queue Provider.  

If both a source and destination queue name are provided, it will send 
a message containing the text "Hello World!" to the destination, and 
will process any content it receives.  

This application is intended as a basic usage example.  Some of the design choices
were made to favor simplicity and readability over performance.  This application 
is not intended to be used for measuring performance.
 
-----------------
Application Name:
-----------------

VAQueueConsumer

------------------
Setup Environment:
------------------

This application does not depend on any external configuration or dictionary files.

-------------------
Command line usage:
-------------------  

VAQueueConsumer -c [<hostname>:<port> -qServiceName <Queue Service> -qSourceName <Source Queue> -qDestName <Destination Queue> -tsAuth -tsDomain <domain>] [-uname <LoginUsername>] [-x] [-runtime <seconds>]


-c specifies creating a channel on the given host and port

-qServiceName indicates the service name of the Queue Provider to communicate with

-qSourceName indicates the name of the local/source Queue to open. 

-qDestName indicates a destination queue to send to.  If not specified, this application will 
only receive content. This option may be specified multiple times.

The -tsAuth option causes the consumer to use authentication when opening the tunnel stream
used for queue messaging.

The -tsDomain option specifies the domainType to use when opening the tunnel stream used for
queue messaging.

The -uname option changes the username used when logging into the provider.

The -x option enables tracing of messages sent to and received from the channel, the screen and to a file.

Specifying the -runtime option controls the time the application will run
before exiting, in seconds.


- VAQueueConsumer -? displays command line options.  

- Pressing the CTRL+C buttons terminates the program.  

-----------------
Compiling Source:
-----------------

The included makefile is set up to run from the file
locations as presented through the distribution package.
It is set up for building on the UPA supported 
Solaris or Linux platforms using the supported compilers.

The VA_CUSTOM_BUILT_LIBS value in the makefile is used to 
link in UPA ValueAdd components compiled from the provided
source code.  If a custom library is used, VA_CUSTOM_BUILT_LIBS 
should be set to Yes.  In addition, the user should point the 
VA_INCLUDE locations to the location where the directory of 
the current platform's library is built.

The LINKTYPE value in the makefile is used to control
whether the application is built using UPA static or
shared libraries. The default build uses UPA static
libraries. To use UPA shared libraries,
set LINKTYPE=Shared.

To compile, run the gmake command.

Gmake can be obtained at http://www.gnu.org/software/make/
For windows platform, using Visual Studio, open one of the included vcxproj project
files and build.

----------------
Example Content:
----------------

Included for this application are:

- Source files.

- This document.

--------------------
Detailed Description
--------------------

rsslVAQueueCons.c - The main file for the rsslVAQueueConsumer application. Provides the default message callback and reactor bootstrapping.

QConsSimpleDirectoryHandler.c - Handles basic source directory functionality

rsslLoginConsumer.c - Provides the login message callback.

QConsSimpleQueueMsgHandler.c - Establishes tunnel streams and exchanges content with Queue Provider

