function FileData_Pairs(x)
{
x.t("example","create");
x.t("example","reserves");
x.t("example","chapter");
x.t("example","memory");
x.t("complex","user-defined");
x.t("m.parentnode.insertbefore","window");
x.t("five","user-defined");
x.t("just","array");
x.t(".l=1","new");
x.t("create","array");
x.t("create","first");
x.t("create","ua-55718642-4");
x.t("aligned","block");
x.t("aligned","offset");
x.t("aligned","subsequent");
x.t("[index]","represents");
x.t("structs","typedef");
x.t("once","completed");
x.t("mystruct","rsslreservealignedbuffermemory");
x.t("mystruct","initialized");
x.t("mystruct","int");
x.t("mystruct","rsslreservebuffermemory");
x.t("mystruct","structures");
x.t("mystruct","mystructarray");
x.t("mystruct","position");
x.t("boundary","initialize");
x.t("change","letter");
x.t("a=s.createelement","(o)");
x.t("new","date");
x.t("loop","wherein");
x.t("element","word");
x.t("access","just");
x.t("document","script");
x.t("block","memory");
x.t("[128]","rsslbuffer");
x.t("rsslreservealignedbuffermemory","&memorybuffer");
x.t("pageview","transport");
x.t("utilities","8.3");
x.t("8.3","using");
x.t("api","edition");
x.t("initialized","once");
x.t("mystructarray-","number");
x.t("mystructarray-","letter");
x.t("reserve","space");
x.t("char","memoryblock");
x.t("char","letter");
x.t("initialize","mystructelem");
x.t("initialize","mystructarray");
x.t("reserves","aligned");
x.t("window","document");
x.t("completed","mystructarray");
x.t("mystructelem","mystruct");
x.t("mystructelem","memorybuffer.data");
x.t("array","five");
x.t("array","structs");
x.t("array","mystruct");
x.t("array","loop");
x.t("array","char");
x.t("array","mystructarray");
x.t("accessed","array");
x.t("int","block");
x.t("int","number");
x.t("memorybuffer.data","memoryblock");
x.t("rsslreservebuffermemory","&memorybuffer");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("structures","memory");
x.t("auto","send");
x.t("first","element");
x.t("first","structure");
x.t("space","subsequent");
x.t("number","mystructarray-");
x.t("number","char");
x.t("number","mystructelem-");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("user-defined","mystruct");
x.t("user-defined","struct");
x.t("represents","complex");
x.t("memorybuffer.length","128");
x.t("chapter","value");
x.t("transport","api");
x.t("typedef","struct");
x.t("initial","aligned");
x.t("added","utilities");
x.t("code","example");
x.t("sizeof","(mystruct)");
x.t("memory","first");
x.t("memory","represent");
x.t("memory","based");
x.t("memory","storage");
x.t("memory","associated");
x.t("memory","buffer");
x.t("memoryblock","[128]");
x.t("memoryblock","memorybuffer.length");
x.t("value","added");
x.t("send","pageview");
x.t("wherein","memory");
x.t("mystructarray","[index]");
x.t("mystructarray","mystruct");
x.t("mystructarray","mystructelem");
x.t("mystructarray","accessed");
x.t("mystructarray","[2]");
x.t("rsslbuffer","memorybuffer");
x.t("(arguments)","[r]");
x.t("memorybuffer","mystruct");
x.t("mystructelem-","number");
x.t("mystructelem-","letter");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("represent","array");
x.t("word","boundary");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("letter","mystruct");
x.t("letter","change");
x.t("letter","reserve");
x.t("letter","code");
x.t("(mystruct)","mystructarray-");
x.t("(mystruct)","mystructelem-");
x.t("structure","aligned");
x.t("&memorybuffer","sizeof");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("based","initial");
x.t("offset","memory");
x.t("edition","using");
x.t(".q=i","[r]");
x.t("following","example");
x.t("storage","array");
x.t("elements","initialize");
x.t("using","memory");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("[2]","letter");
x.t("a.async=1","a.src=g");
x.t("subsequent","elements");
x.t("subsequent","member");
x.t("128","create");
x.t("googleanalyticsobject","[r]");
x.t("member","array");
x.t("associated","mystruct");
x.t("struct","example");
x.t("struct","int");
x.t("position","access");
x.t("buffer","example");
x.t("buffer","function");
x.t("buffer","following");
x.t("a.src=g","m.parentnode.insertbefore");
}
