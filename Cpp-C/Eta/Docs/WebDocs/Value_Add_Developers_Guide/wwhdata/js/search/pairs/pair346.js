function FileData_Pairs(x)
{
x.t("example","creating");
x.t("example","function");
x.t("example","two");
x.t("example","following");
x.t("cleanup","returning");
x.t("cleanup","rsslpayloadcachedestroy");
x.t("m.parentnode.insertbefore","window");
x.t("256","&errordataarray");
x.t("(cachehandle1)","destroys");
x.t("managing","rdm");
x.t("dictionarykey","sharedkey1");
x.t("dictionarykey","&cacheerror");
x.t("rdm","field");
x.t("retrieving","data");
x.t(".l=1","new");
x.t("create","cache");
x.t("create","ua-55718642-4");
x.t("cacheconfig.maxitems","unlimited");
x.t("instance","rsslpayloadcachedestroy");
x.t("cacheerror","rsslpayloadcacheconfigoptions");
x.t("destroyed","cache");
x.t("destroyed","setting");
x.t("cache","instance");
x.t("cache","interface");
x.t("cache","api");
x.t("cache","component");
x.t("cache","9.2.4");
x.t("cache","rsslpayloadcacheuninitialize");
x.t("cache","rsslcleardatadictionary");
x.t("cache","detailed");
x.t("cache","instances");
x.t("cache","ret");
x.t("cache","setting");
x.t("cache","9.2.4.2");
x.t("field","dictionary");
x.t("field","dictionaries");
x.t("(cacheerror.rsslerrorid)","load");
x.t("(cacheerror.rsslerrorid)","cachehandle2");
x.t("interface","rssldeletedatadictionary");
x.t("payload","cache");
x.t("errordataarray","[256]");
x.t("errorbuffer","256");
x.t("retained","application");
x.t("bound","dictionary");
x.t("a=s.createelement","(o)");
x.t("new","date");
x.t("single","shared");
x.t("&datadictionary","dictionarykey");
x.t("&datadictionary","&errorbuffer");
x.t("&datadictionary","code");
x.t("&datadictionary","ret");
x.t("document","script");
x.t("printf","rsslpayloadcachecreate");
x.t("pageview","transport");
x.t("rsslpayloadcacheinitialize","chk");
x.t("file","cache");
x.t("api","edition");
x.t("api","clean");
x.t("rsslpayloadcachesetshareddictionarykey","cachehandle2");
x.t("creating","cache");
x.t("dictionary","destroyed");
x.t("dictionary","second");
x.t("dictionary","rsslret");
x.t("dictionary","first");
x.t("dictionary","chapter");
x.t("dictionary","database");
x.t("dictionary","structure");
x.t("char","dictionarykey");
x.t("char","errordataarray");
x.t("returning","function");
x.t("initialize","cache");
x.t("const","char");
x.t("component","create");
x.t("window","document");
x.t("cacheerror.text","chk");
x.t("rsslloadfielddictionary","rdmfielddictionary");
x.t("&errorbuffer","chk");
x.t("final","call");
x.t("9.2.4","managing");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("(ret)","cacheconfig.maxitems");
x.t("(ret)","initial");
x.t("(ret)","shared");
x.t("(ret)","datadictionary");
x.t("second","cache");
x.t("rsslpayloadcachedestroy","(cachehandle1)");
x.t("rsslpayloadcachedestroy","(cachehandle2)");
x.t("auto","send");
x.t("chk","(cacheerror.rsslerrorid)");
x.t("chk","(ret)");
x.t("chk","assumed");
x.t("error","handling");
x.t("rsslpayloadcachecreate","failure");
x.t("rsslpayloadcachecreate","&cacheconfig");
x.t("rsslret","ret");
x.t("rsslpayloadcacheuninitialize","final");
x.t("first","cache");
x.t("&errordataarray","[0]");
x.t("decoding","two");
x.t("function","initialize");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("dictionaries","payload");
x.t("rsslcleardatadictionary","&datadictionary");
x.t("chapter","payload");
x.t("detailed","view");
x.t("transport","api");
x.t("handling","performing");
x.t("rdmfielddictionary","&datadictionary");
x.t("internal","field");
x.t("cacheconfig","const");
x.t("initial","setting");
x.t("code","example");
x.t("code","fragment");
x.t("unlimited","cachehandle1");
x.t("(cachehandle2)","cache");
x.t("rssldatadictionary","datadictionary");
x.t("performing","cleanup");
x.t("ready","applying");
x.t("database","used");
x.t("9.2","payload");
x.t("simplicity","code");
x.t("rssldeletedatadictionary","&datadictionary");
x.t("instances","bound");
x.t("instances","ready");
x.t("instances","ret");
x.t("instances","created");
x.t("fragment","chk");
x.t("failure","s\\n");
x.t("sharedkey1","char");
x.t("[256]","rsslbuffer");
x.t("send","pageview");
x.t("rsslbuffer","errorbuffer");
x.t("rsslpayloadcachehandle","cachehandle1");
x.t("rsslpayloadcachehandle","cachehandle2");
x.t("macro","error");
x.t("(arguments)","[r]");
x.t("ret","rsslpayloadcacheinitialize");
x.t("ret","rsslpayloadcachesetshareddictionarykey");
x.t("ret","rsslloadfielddictionary");
x.t("ret","rsslpayloadcachesetdictionary");
x.t("ret","rsslcacheerror");
x.t("view","9.2");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","rsslpayloadcachehandle");
x.t("[0]","a.async=1");
x.t("rsslpayloadcachesetdictionary","cachehandle1");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","cleanup");
x.t("shared","field");
x.t("shared","setting");
x.t("&cacheconfig","&cacheerror");
x.t("application","encoding");
x.t("s\\n","cacheerror.text");
x.t("structure","file");
x.t("destroys","entries");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("two","cache");
x.t("rsslcacheerror","cacheerror");
x.t("typically","retained");
x.t("edition","setting");
x.t("created","single");
x.t("rsslpayloadcacheconfigoptions","cacheconfig");
x.t("datadictionary","destroyed");
x.t("datadictionary","simplicity");
x.t("call","cache");
x.t(".q=i","[r]");
x.t("following","example");
x.t("used","cache");
x.t("setting","example");
x.t("setting","dictionary");
x.t("setting","typically");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("9.2.4.2","setting");
x.t("a.async=1","a.src=g");
x.t("googleanalyticsobject","[r]");
x.t("&cacheerror","chk");
x.t("&cacheerror","cachehandle1");
x.t("&cacheerror","cachehandle2");
x.t("load","rdm");
x.t("applying","retrieving");
x.t("cachehandle1","&datadictionary");
x.t("cachehandle1","printf");
x.t("cachehandle1","rsslpayloadcachecreate");
x.t("cachehandle1","rsslpayloadcachehandle");
x.t("cachehandle2","dictionarykey");
x.t("cachehandle2","printf");
x.t("cachehandle2","rsslpayloadcachecreate");
x.t("cachehandle2","rssldatadictionary");
x.t("assumed","macro");
x.t("entries","cache");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("encoding","decoding");
x.t("clean","internal");
}
