function FileData_Pairs(x)
{
x.t("rsslencodeiterator","encodeiter");
x.t("directoryrefresh","list");
x.t("example","chapter");
x.t("example","directory");
x.t("example","show");
x.t(".data","rwfenum");
x.t(".data","rwffld");
x.t(".length","dictionarieslist");
x.t(".length","dictionaries");
x.t("7.4.17.4","encoding");
x.t("m.parentnode.insertbefore","window");
x.t("method","shown");
x.t("below","rsslrdmservice");
x.t("version","buffer");
x.t("shown","below");
x.t("lists","used");
x.t("clear","directory");
x.t("clear","encode");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("build","qos");
x.t("build","info");
x.t("build","dictionary");
x.t("build","capabilities");
x.t("build","service");
x.t("rdm_svc_stf_has_accepting_reqs","servicelist");
x.t("source","directory");
x.t("my_service","rssluint");
x.t("my_service","flags");
x.t("my_service","servicelist");
x.t("my_service","rsslclearrdmservice");
x.t("action","indicate");
x.t(".info.vendor.length","build");
x.t("rsslsetencodeiteratorbuffer","&encodeiter");
x.t("&servicelist","[0]");
x.t("rdm_svc_iff_has_qos","service");
x.t("qos","list");
x.t("rdm_dr_rff_solicited","state");
x.t("directoryrefresh.servicecount","clear");
x.t("state","my_service");
x.t("state","directoryrefresh.state.streamstate");
x.t("state","group");
x.t("state","filter");
x.t("provided","servicelist");
x.t("rsslsetencodeiteratorrwfversion","&encodeiter");
x.t("rsslclearrdmdirectoryrefresh","&directoryrefresh");
x.t("directoryrefresh.state.streamstate","rssl_stream_open");
x.t(".info.servicename.length","vendor");
x.t("rssl_qos_rate_jit_conflated","qos");
x.t("dictionariesprovidedlist","dictionariesusedlist");
x.t("rssluint","capabilitieslist");
x.t("a=s.createelement","(o)");
x.t("filters","supported");
x.t("new","date");
x.t("new","service");
x.t("rdm_svcf_has_info","rdm_svcf_has_state");
x.t("document","script");
x.t(".info.dictionariesprovidedlist","dictionarieslist");
x.t("pageview","transport");
x.t("list","dictionariesprovidedlist");
x.t("list","capabilitieslist");
x.t("list","qoslist");
x.t("list","services");
x.t("list","servicelist");
x.t("rsslrdmservice","servicelist");
x.t("info","my_service");
x.t("info","state");
x.t("rwfenum","dictionarieslist");
x.t("flags","directoryrefresh.flags");
x.t("flags","indicate");
x.t("group","filters");
x.t("rssl_dmt_market_price","capabilitieslist");
x.t("api","edition");
x.t("dictionarieslist","[1]");
x.t("dictionarieslist","[0]");
x.t("dictionarieslist","servicelist");
x.t("dictionarieslist","[2]");
x.t("filter","present");
x.t("filter","say");
x.t("iterator","rwf");
x.t("[1]",".data");
x.t("[1]",".length");
x.t("[1]","lists");
x.t("[1]","rssl_dmt_market_price");
x.t("[1]",".rate");
x.t("[1]",".timeliness");
x.t("name","servicelist");
x.t("dictionary","list");
x.t("directoryrefresh.flags","rdm_dr_rff_solicited");
x.t(".flags","rdm_svcf_has_info");
x.t("window","document");
x.t("rssl_stream_open","directoryrefresh.state.datastate");
x.t("rdm_directory_service_group_filter","build");
x.t("&encodeiter","channelmajorversion");
x.t("&encodeiter","ret");
x.t("&encodeiter","rsslrdmmsg");
x.t("&encodeiter","&msgbuffer");
x.t("indicate","info");
x.t("indicate","optional");
x.t("indicate","adding");
x.t(".info.servicename.data","my_service");
x.t(".rate","rssl_qos_rate_jit_conflated");
x.t(".rate","rssl_qos_rate_tick_by_tick");
x.t("dictionariesusedlist","dictionarieslist");
x.t(".info.qoslist","qoslist");
x.t("array","services");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("channelmajorversion","channelminorversion");
x.t("&rsslerrorinfo","code");
x.t("auto","send");
x.t("present","servicelist");
x.t("supported","directoryrefresh.filter");
x.t("reuters","servicelist");
x.t(".state.flags","rdm_svc_stf_has_accepting_reqs");
x.t("refresh","rsslencodeiterator");
x.t("refresh","function");
x.t("refresh","information");
x.t("refresh","structure");
x.t("refresh","encoding");
x.t("[3]","rsslbuffer");
x.t("members","servicelist");
x.t("rdm_svc_iff_has_dicts_provided","rdm_svc_iff_has_dicts_used");
x.t(".info.dictionariesusedlist","dictionarieslist");
x.t(".state.servicestate","servicelist");
x.t("directoryrefresh.state.datastate","rssl_data_ok");
x.t("rsslencoderdmmsg","&encodeiter");
x.t("domain","models");
x.t("domain","7.4.17");
x.t("decoding","7.4.17.4");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("encodeiter","rsslrdmdirectoryrefresh");
x.t("capabilitieslist","[1]");
x.t("capabilitieslist","[3]");
x.t("capabilitieslist","[0]");
x.t("capabilitieslist","servicelist");
x.t("capabilitieslist","[2]");
x.t("dictionaries","provided");
x.t("dictionaries","used");
x.t("rdm_directory_service_info_filter","rdm_directory_service_state_filter");
x.t("rssl_mpea_add_entry","build");
x.t("chapter","administration");
x.t(".info.qoscount","build");
x.t("detailed","view");
x.t("directory","refresh");
x.t("directory","domain");
x.t("directory","encoding");
x.t("transport","api");
x.t(".info.flags","rdm_svc_iff_has_vendor");
x.t("rwffld","dictionarieslist");
x.t("&directoryrefresh","flags");
x.t("&directoryrefresh","&msgbuffer.length");
x.t(".info.capabilitieslist","capabilitieslist");
x.t("qoslist","[1]");
x.t("qoslist","[0]");
x.t("qoslist","servicelist");
x.t("qoslist","[2]");
x.t("code","example");
x.t("thomson","reuters");
x.t(".info.dictionariesprovidedcount","dictionaries");
x.t("message","refresh");
x.t("message","ret");
x.t("rssl_data_ok","directoryrefresh.state.code");
x.t(".info.action","rssl_mpea_add_entry");
x.t("additional","services");
x.t("send","pageview");
x.t("rsslbuffer","dictionarieslist");
x.t("rssl_qos_time_realtime","qoslist");
x.t("(arguments)","[r]");
x.t("rdm_svc_iff_has_dicts_used","rdm_svc_iff_has_qos");
x.t("rssl_qos_rate_tick_by_tick","qoslist");
x.t(".state.acceptingrequests","finish");
x.t("directoryrefresh.servicelist","servicelist");
x.t("ret","rsslsetencodeiteratorbuffer");
x.t("ret","rsslsetencodeiteratorrwfversion");
x.t("ret","rsslencoderdmmsg");
x.t("view","7.4");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]",".data");
x.t("[0]",".length");
x.t("[0]",".info.vendor.length");
x.t("[0]",".info.servicename.length");
x.t("[0]",".info.dictionariesprovidedlist");
x.t("[0]","flags");
x.t("[0]",".flags");
x.t("[0]",".info.servicename.data");
x.t("[0]",".rate");
x.t("[0]",".info.qoslist");
x.t("[0]",".state.flags");
x.t("[0]",".info.dictionariesusedlist");
x.t("[0]",".state.servicestate");
x.t("[0]",".info.qoscount");
x.t("[0]",".info.flags");
x.t("[0]",".info.capabilitieslist");
x.t("[0]",".info.dictionariesprovidedcount");
x.t("[0]",".info.action");
x.t("[0]",".state.acceptingrequests");
x.t("[0]",".info.vendor.data");
x.t("[0]",".info.dictionariesusedcount");
x.t("[0]","rssl_dmt_dictionary");
x.t("[0]","a.async=1");
x.t("[0]",".info.capabilitiescount");
x.t("[0]",".timeliness");
x.t("services","message");
x.t("services","directoryrefresh.servicelist");
x.t("services","used");
x.t("services","using");
x.t("directoryrefresh.state.code","rssl_sc_none");
x.t("directoryrefresh.filter","rdm_directory_service_info_filter");
x.t("rdm_directory_service_state_filter","rdm_directory_service_group_filter");
x.t("models","detailed");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("show","encoding");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("optional","members");
x.t("capabilities","list");
x.t("information","services");
x.t("rsslrdmmsg","&directoryrefresh");
x.t("rsslrdmdirectoryrefresh","directoryrefresh");
x.t("&msgbuffer.length","&rsslerrorinfo");
x.t("rssl_sc_none","filter");
x.t("structure","rsslclearrdmdirectoryrefresh");
x.t("finish","encode");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t(".info.vendor.data","thomson");
x.t("administration","domain");
x.t("rsslqos","qoslist");
x.t("edition","encoding");
x.t("rssl_dmt_market_by_order","capabilities");
x.t(".info.dictionariesusedcount","build");
x.t("channelminorversion","ret");
x.t(".q=i","[r]");
x.t("used","example");
x.t("used","my_service");
x.t("used","servicelist");
x.t("service","my_service");
x.t("service","state");
x.t("service","name");
x.t("service","additional");
x.t("service","servicelist");
x.t("servicelist","directoryrefresh.servicecount");
x.t("servicelist","[1]");
x.t("servicelist","[0]");
x.t("say","info");
x.t("rssl_dmt_dictionary","capabilitieslist");
x.t("7.4","source");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("using","method");
x.t("[2]","clear");
x.t("[2]","rsslqos");
x.t("[2]","rssl_dmt_market_by_order");
x.t("rdm_svc_iff_has_vendor","rdm_svc_iff_has_dicts_provided");
x.t("vendor","name");
x.t("a.async=1","a.src=g");
x.t("rsslclearrdmservice","&servicelist");
x.t("adding","new");
x.t(".info.capabilitiescount","build");
x.t(".timeliness","rssl_qos_time_realtime");
x.t("rwf","version");
x.t("rsslclearencodeiterator","&encodeiter");
x.t("googleanalyticsobject","[r]");
x.t("encode","iterator");
x.t("encode","array");
x.t("encode","message");
x.t("buffer","encoding");
x.t("encoding","example");
x.t("encoding","source");
x.t("encoding","decoding");
x.t("encoding","service");
x.t("encoding","rsslclearencodeiterator");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("rdm_svcf_has_state","action");
x.t("&msgbuffer","encode");
x.t("7.4.17","source");
}
