function FileData_Pairs(x)
{
x.t("example","demonstrates");
x.t("example","non-rwf");
x.t("example","function");
x.t("example","chapter");
x.t("example","note");
x.t("m.parentnode.insertbefore","window");
x.t("rsslencodenonrwfdatatypecomplete","&enciter");
x.t("rsslencodenonrwfdatatypecomplete","following");
x.t("else","series");
x.t("parameter","false");
x.t("parameter","true");
x.t("version","information");
x.t("ansi","datatype");
x.t("ansi","encoder");
x.t("ansi","page");
x.t("ansi","encode");
x.t("ansi","content");
x.t("shown","expected");
x.t("encansibuffer.length","retval");
x.t("encansibuffer.length","nonrwfbuffer.length");
x.t(".l=1","new");
x.t("create","empty");
x.t("create","ua-55718642-4");
x.t("init","encoding");
x.t("enum","rsslseries.containertype");
x.t("rsslbuffer.data","calls");
x.t("rsslretcodeinfo","(retval)");
x.t("container","types");
x.t("container","using");
x.t("roll","back");
x.t("change","value");
x.t("sample","demonstrates");
x.t("type","ansi");
x.t("type","enum");
x.t("type","using");
x.t("type","encoding");
x.t("populate","containertype");
x.t("rsslseries.containertype","rssl_dt_ansi_page");
x.t("enciter","already");
x.t("retval","rsslencodenonrwfdatatypecomplete");
x.t("retval","rsslretcodeinfo");
x.t("retval","rsslencodeseriescomplete");
x.t("retval","rsslencodeseriesinit");
x.t("retval","rsslencodeseriesentrycomplete");
x.t("retval","rsslencodeseriesentryinit");
x.t("retval","rsslencodenonrwfdatatypeinit");
x.t("rsslencodeseriescomplete","&enciter");
x.t("calls","rsslencodenonrwfdatatypeinit");
x.t("external","ansi");
x.t("inside","using");
x.t("a=s.createelement","(o)");
x.t("assumes","enciter");
x.t("rsslencodeseriesinit","retval");
x.t("rsslencodeseriesinit","error");
x.t("rsslencodeseriesinit","&enciter");
x.t("back","success");
x.t("back","encoding");
x.t("text","printf");
x.t("text","s\\n");
x.t("new","date");
x.t("rssl_false","print");
x.t("document","script");
x.t("printf","error");
x.t("encansibuffer","shown");
x.t("pageview","transport");
x.t("rsslencodeseriesentrycomplete","&enciter");
x.t("complete","nonrwfbuffer.length");
x.t("complete","series");
x.t("api","edition");
x.t("entry","nest");
x.t("exceed","nonrwfbuffer.length");
x.t("pre-encoded","ansi");
x.t("false","roll");
x.t("nonrwfbuffer.length","encansibuffer.length");
x.t("nonrwfbuffer.length","amount");
x.t("nonrwfbuffer.length","memcpy");
x.t("directly","encode");
x.t("true","finalize");
x.t("demonstrates","error");
x.t("demonstrates","encode");
x.t("enumerated","value");
x.t("populated","rsslbuffer");
x.t("populated","data");
x.t("populated","buffer");
x.t("window","document");
x.t("prior","rsslencodeseriesinit");
x.t("determine","success");
x.t("rsslseriesentry","seriesentry");
x.t("rsslseries.flags","rssl_srf_none");
x.t("encoded","buffer");
x.t("non-rwf","container");
x.t("non-rwf","type");
x.t("non-rwf","encode");
x.t("non-rwf","encoding");
x.t("string","value");
x.t("empty","buffer");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("datatype","enumerated");
x.t("rssl_init_buffer","retval");
x.t("auto","send");
x.t("begin","series");
x.t("begin","encoding");
x.t("store","return");
x.t("functions","retval");
x.t("functions","encansibuffer");
x.t("functions","rsslseriesentry");
x.t("functions","ensure");
x.t("functions","called");
x.t("error","text");
x.t("error","handling");
x.t("error","condition");
x.t("error","encountered");
x.t("containertype","ansi");
x.t("rssl_dt_ansi_page","begin");
x.t("&rsslseries","rssl_ret_success");
x.t("function","[r]");
x.t("function","omitting");
x.t("function","googleanalyticsobject");
x.t("(retval)","else");
x.t("(retval)","retval");
x.t("chapter","data");
x.t("nonrwfbuffer","rssl_init_buffer");
x.t("nonrwfbuffer","memcpy");
x.t("instead","memcpy");
x.t("detailed","view");
x.t("transport","api");
x.t("handling","initial");
x.t("handling","performed");
x.t("types","11.3.7.2");
x.t("types","11.3.7");
x.t("initial","encode");
x.t("switch","success");
x.t("nest","ansi");
x.t("expected","populated");
x.t("code","example");
x.t("return","value");
x.t("encoder","native");
x.t("message","return");
x.t("seriesentry","rssl_init_series_entry");
x.t("&nonrwfbuffer","success");
x.t("&nonrwfbuffer","encode");
x.t("ensure","exceed");
x.t("rsslseries","containing");
x.t("11.3.7.2","non-rwf");
x.t("failure","retval");
x.t("amount","data");
x.t("value","rsslbuffer.data");
x.t("value","text");
x.t("value","false");
x.t("value","determine");
x.t("value","non-rwf");
x.t("value","string");
x.t("additional","error");
x.t("rssl_srf_none","populate");
x.t("send","pageview");
x.t("already","populated");
x.t("rsslbuffer","nonrwfbuffer");
x.t("specific","encode");
x.t("(arguments)","[r]");
x.t("condition","switch");
x.t("native","ansi");
x.t("view","11.3");
x.t("11.3","container");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("encountered","rsslencodeseriesinit");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("page","example");
x.t("page","inside");
x.t("&encansibuffer.data","encansibuffer.length");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","populated");
x.t("information","store");
x.t("rssl_ret_success","error");
x.t("data","external");
x.t("data","encoded");
x.t("data","package");
x.t("&nonrwfbuffer.data","&encansibuffer.data");
x.t("rsslencodeseriesentryinit","&enciter");
x.t("nested","container");
x.t("memcpy","pre-encoded");
x.t("memcpy","&nonrwfbuffer.data");
x.t("memcpy","nonrwfbuffer.data");
x.t("rsslencodenonrwfdatatypeinit","rsslencodenonrwfdatatypecomplete");
x.t("rsslencodenonrwfdatatypeinit","&enciter");
x.t("successful","begin");
x.t("nonrwfbuffer.data","encode");
x.t("11.3.7","non-rwf");
x.t("print","message");
x.t("s\\n","rsslretcodetostring");
x.t("called","instead");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("note","change");
x.t("&seriesentry","encode");
x.t("edition","non-rwf");
x.t("&enciter","&rsslseries");
x.t("&enciter","&nonrwfbuffer");
x.t("&enciter","&seriesentry");
x.t("&enciter","success");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","sample");
x.t("contained","non-rwf");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("containing","non-rwf");
x.t("using","non-rwf");
x.t("using","specific");
x.t("finalize","encoding");
x.t("a.async=1","a.src=g");
x.t("omitting","additional");
x.t("series","init");
x.t("series","assumes");
x.t("series","entry");
x.t("series","encoding");
x.t("googleanalyticsobject","[r]");
x.t("performed","rsslseries.flags");
x.t("rsslretcodetostring","(retval)");
x.t("success","parameter");
x.t("success","retval");
x.t("success","rssl_false");
x.t("success","complete");
x.t("success","code");
x.t("success","failure");
x.t("success","value");
x.t("encode","functions");
x.t("encode","function");
x.t("encode","nonrwfbuffer");
x.t("encode","rsslseries");
x.t("encode","nested");
x.t("encode","contained");
x.t("buffer","version");
x.t("buffer","complete");
x.t("buffer","information");
x.t("rssl_init_series_entry","create");
x.t("encoding","example");
x.t("encoding","prior");
x.t("encoding","successful");
x.t("encoding","series");
x.t("encoding","success");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("content","directly");
}
