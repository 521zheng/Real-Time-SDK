function FileData_Pairs(x)
{
x.t("m.parentnode.insertbefore","window");
x.t("available","again");
x.t("available","socket");
x.t("available","pool");
x.t("lists","return");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","lists");
x.t("table","rsslwrite");
x.t("description","rssl_ret_");
x.t("sufficient","space");
x.t("refer","rsslerror");
x.t("refer","section");
x.t("queued","sufficient");
x.t("queued","transport");
x.t("queued","rsslflush");
x.t("queued","information");
x.t("mechanism","used");
x.t("rssl_ret_","buffer_too_small");
x.t("rssl_ret_","write_flush_failed");
x.t("rssl_ret_","write_call_again");
x.t("rssl_ret_","failure");
x.t("rssl_ret_","init_not_initialized");
x.t("rssl_ret_","success");
x.t("state","inspected");
x.t("fragmented","rsslwrite");
x.t("obtained","rsslgetbuffer");
x.t("rsslwrite","function");
x.t("rsslwrite","return");
x.t("rsslwrite","additional");
x.t("rsslwrite","call");
x.t("rsslwrite","buffer");
x.t("time","priority");
x.t("fragmentation","process");
x.t("left","application");
x.t("connection","closes");
x.t("connection","rsslflush");
x.t("however","internal");
x.t("a=s.createelement","(o)");
x.t("unrecoverable","rsslchannel.state");
x.t("new","date");
x.t("rsslerror","information");
x.t("rsslerror","content");
x.t("details","refer");
x.t("document","script");
x.t("fragments","ordered");
x.t("buffer_too_small","indicates");
x.t("pageview","transport");
x.t("indicates","rsslwrite");
x.t("indicates","large");
x.t("indicates","rssl");
x.t("indicates","either");
x.t("indicates","general");
x.t("need","called");
x.t("again","buffer");
x.t("api","release");
x.t("api","edition");
x.t("due","pool");
x.t("increase","number");
x.t("initialized","details");
x.t("availability","application");
x.t("large","buffer");
x.t("become","available");
x.t("writing","data");
x.t("channel\u2019s","state");
x.t("possibly","exceeding");
x.t("10.2","application\u2019s");
x.t("codes","function");
x.t("codes","return");
x.t("codes","following");
x.t("codes","occur");
x.t("populated","application");
x.t("closed","refer");
x.t("bytes","internally");
x.t("10.13","details");
x.t("initializing","refer");
x.t("10.9.6","rsslwrite");
x.t("window","document");
x.t("write_flush_failed","indicates");
x.t("subsequently","pass");
x.t("exceeding","allowable");
x.t("indicate","socketid");
x.t("continue","fragmentation");
x.t("write","availability");
x.t("write","failure");
x.t("attempt","flush");
x.t("attempt","call");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("10.9","writing");
x.t("auto","send");
x.t("failed","channel\u2019s");
x.t("failed","reason");
x.t("present","chapter");
x.t("space","connections");
x.t("space","flush");
x.t("reason","rsslbuffer");
x.t("number","available");
x.t("function","table");
x.t("function","need");
x.t("function","succeeded");
x.t("function","successful");
x.t("function","called");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("length","valid");
x.t("chapter","transport");
x.t("application\u2019s","attempt");
x.t("detailed","view");
x.t("transport","api");
x.t("transport","initialized");
x.t("transport","package");
x.t("transport","pass");
x.t("release","rssl_ret_");
x.t("release","calling");
x.t("release","rsslbuffer");
x.t("release","positive");
x.t("succeeded","however");
x.t("succeeded","information");
x.t("internal","attempt");
x.t("socket","failed");
x.t("socket","output");
x.t("closes","rsslerror");
x.t("properly","continue");
x.t("section","10.2");
x.t("section","10.13");
x.t("rsslflush","function");
x.t("rsslflush","free");
x.t("calling","rsslreleasebuffer");
x.t("code","description");
x.t("notification","mechanism");
x.t("transition","rssl_ch_state_closed");
x.t("return","codes");
x.t("return","code");
x.t("fully","fragmented");
x.t("level","used");
x.t("corrupted","possibly");
x.t("write_call_again","indicates");
x.t("buffers","become");
x.t("buffers","unavailable");
x.t("buffers","rsslioctl");
x.t("buffers","pool");
x.t("ensure","fragments");
x.t("rsslgetbuffer","failed");
x.t("rsslgetbuffer","application");
x.t("occurred","rsslchannel");
x.t("failure","unrecoverable");
x.t("failure","indicates");
x.t("failure","occurred");
x.t("failure","condition");
x.t("additional","time");
x.t("additional","bytes");
x.t("value","indicates");
x.t("send","pageview");
x.t("rsslbuffer","obtained");
x.t("rsslbuffer","rsslwrite");
x.t("rsslbuffer","present");
x.t("rsslbuffer","transport");
x.t("rsslbuffer","calling");
x.t("socketid","write");
x.t("free","pool");
x.t("(arguments)","[r]");
x.t("connections","output");
x.t("condition","occur");
x.t("process","left");
x.t("view","10.9");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("valid","pool");
x.t("rssl","transport");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("output","buffer");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("internally","queued");
x.t("information","queued");
x.t("information","connection");
x.t("information","populated");
x.t("information","initializing");
x.t("information","internally");
x.t("data","socket");
x.t("data","buffer");
x.t("successful","additional");
x.t("application","subsequently");
x.t("application","release");
x.t("application","rsslflush");
x.t("rsslchannel.state","transition");
x.t("unavailable","application");
x.t("called","information");
x.t("called","application");
x.t("ordered","properly");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("flush","failure");
x.t("flush","data");
x.t("priority","level");
x.t("positive","value");
x.t("inspected","failure");
x.t("rssl_ch_state_closed","connection");
x.t("typically","due");
x.t("rsslioctl","increase");
x.t("edition","rsslwrite");
x.t("call","rsslwrite");
x.t("call","rsslgetbuffer");
x.t("call","typically");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","table");
x.t("used","indicate");
x.t("used","ensure");
x.t("used","call");
x.t("either","buffer");
x.t("init_not_initialized","indicates");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("using","rsslwrite");
x.t("general","write");
x.t("a.async=1","a.src=g");
x.t("pass","rsslbuffer");
x.t("pass","internally");
x.t("i/o","notification");
x.t("rsslreleasebuffer","rssl_ret_");
x.t("allowable","length");
x.t("googleanalyticsobject","[r]");
x.t("occur","available");
x.t("occur","using");
x.t("success","indicates");
x.t("released","calling");
x.t("rsslchannel","closed");
x.t("buffer","details");
x.t("buffer","10.9.6");
x.t("buffer","space");
x.t("buffer","fully");
x.t("buffer","corrupted");
x.t("buffer","used");
x.t("buffer","i/o");
x.t("buffer","released");
x.t("pool","buffers");
x.t("pool","buffer");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("content","rsslbuffer");
x.t("content","information");
x.t("content","application");
}
