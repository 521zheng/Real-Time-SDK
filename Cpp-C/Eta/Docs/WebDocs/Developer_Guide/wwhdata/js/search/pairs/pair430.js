function FileData_Pairs(x)
{
x.t("debugging","logging");
x.t("passed","certain");
x.t("passed","function");
x.t("passed","transport");
x.t("passed","null");
x.t("overflow","condition");
x.t("overflow","buffer");
x.t("appendix","error");
x.t("m.parentnode.insertbefore","window");
x.t("0001","transport");
x.t("indicated","error");
x.t("possible","change");
x.t("0002","arguments");
x.t("formatted","corrupt");
x.t("allocation","error");
x.t("0003","codec");
x.t("mutex","locking");
x.t("needs","larger");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","describes");
x.t("table","193");
x.t("describes","various");
x.t("refer","section");
x.t("description","recommended");
x.t("0004","cannot");
x.t("contact","support");
x.t("various","error");
x.t("0005","memory");
x.t("required","0006");
x.t("required","1002");
x.t("rsslinitialize","called");
x.t("arguments","passed");
x.t("codec","error");
x.t("0006","connection");
x.t("user","rely");
x.t("locking","type");
x.t("locking","strategy");
x.t("0007","channel");
x.t("ioctl","code");
x.t("ioctl","configuration");
x.t("0008","buffer");
x.t("provided","transport");
x.t("provided","additional");
x.t("errors","table");
x.t("state","listed");
x.t("state","incorrect");
x.t("state","matches");
x.t("state","noted");
x.t("copying","data");
x.t("0009","buffer");
x.t("modified","except");
x.t("fragmented","buffer");
x.t("necessary","0017");
x.t("support","error");
x.t("change","mutex");
x.t("change","transport\u2019s");
x.t("type","rsslinitialize");
x.t("type","supported");
x.t("missing","configuration");
x.t("populate","missing");
x.t("0020","buffer");
x.t("calls","calling");
x.t("calls","ensure");
x.t("rsslwrite","buffer");
x.t("fragmentation","error");
x.t("connection","type");
x.t("connection","cannot");
x.t("connection","rejected");
x.t("connection","misconfiguration");
x.t("copied","data");
x.t("incomplete","data");
x.t("down","indicate");
x.t("a=s.createelement","(o)");
x.t("channel","state");
x.t("channel","channel\u2019s");
x.t("channel","attempting");
x.t("channel","used");
x.t("channel","associated");
x.t("channel","buffer");
x.t("channel","shutting");
x.t("listed","error");
x.t("text","0008");
x.t("text","channel");
x.t("text","corresponds");
x.t("text","1005");
x.t("text","information");
x.t("new","memory");
x.t("new","date");
x.t("rsslerror","refer");
x.t("rsslerror","structure");
x.t("10.1.4","note");
x.t("certain","state");
x.t("element","making");
x.t("document","script");
x.t("size","connection");
x.t("size","requested");
x.t("size","specified");
x.t("size","0016");
x.t("size","larger");
x.t("pageview","transport");
x.t("proper","code");
x.t("proper","configuration");
x.t("indicates","requested");
x.t("indicates","issue");
x.t("again","appendix");
x.t("issue\u2019s","recommended");
x.t("incorrect","operation");
x.t("complete","operation");
x.t("complete","ensure");
x.t("udp","multicast");
x.t("api","initialized");
x.t("api","edition");
x.t("initialized","ensure");
x.t("check","argument");
x.t("check","documentation");
x.t("check","encoding");
x.t("requested","operation");
x.t("requested","buffer");
x.t("due","integrity");
x.t("network","issues");
x.t("according","error");
x.t("recommended","resolution");
x.t("recommended","solution");
x.t("tcp","connection");
x.t("specified","ensure");
x.t("potential","race");
x.t("circumstances","behind");
x.t("rsslbind","rsslconnect");
x.t("operation","needs");
x.t("operation","1000");
x.t("operation","function");
x.t("operation","cannot");
x.t("channel\u2019s","state");
x.t("obtain","packed");
x.t("codes","provided");
x.t("codes","error");
x.t("codes","function");
x.t("codes","returned");
x.t("codes","following");
x.t("allocating","obtaining");
x.t("corresponds","errno");
x.t("populated","system");
x.t("closed","case");
x.t("logging","user");
x.t("argument","indicated");
x.t("requesting","packed");
x.t("race","condition");
x.t("avoid","error");
x.t("window","document");
x.t("zero","cannot");
x.t("zero","0011");
x.t("peer","1008");
x.t("indicate","network");
x.t("indicate","potential");
x.t("indicate","either");
x.t("completed","data");
x.t("string","properly");
x.t("attempt","failed");
x.t("attempt","flush");
x.t("integrity","issues");
x.t("regarding","circumstances");
x.t("write","again");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("resolution","general");
x.t("rely","return");
x.t("auto","send");
x.t("functions","respond");
x.t("solution","0001");
x.t("attempting","write");
x.t("attempting","allocate");
x.t("failed","channel");
x.t("failed","ensure");
x.t("quality","issues");
x.t("small","requested");
x.t("1000","arguments");
x.t("error","text");
x.t("error","indicates");
x.t("error","codes");
x.t("error","closed");
x.t("error","string");
x.t("error","error");
x.t("error","function");
x.t("error","may");
x.t("error","receive");
x.t("error","transport");
x.t("error","code");
x.t("error","follow");
x.t("error","message");
x.t("error","multicast");
x.t("error","ensure");
x.t("error","depending");
x.t("error","result");
x.t("error","called");
x.t("error","system");
x.t("supported","ensure");
x.t("buffer\u2019s","length");
x.t("1001","memory");
x.t("respond","programmatically");
x.t("1002","system");
x.t("issues","0020");
x.t("issues","corrupt");
x.t("issues","data");
x.t("smaller","maximum");
x.t("1003","function");
x.t("decoding","calls");
x.t("written","transport");
x.t("underlying","check");
x.t("1004","ioctl");
x.t("function","attempting");
x.t("function","failed");
x.t("function","transport");
x.t("function","0018");
x.t("function","failing");
x.t("function","call");
x.t("function","[r]");
x.t("function","returns");
x.t("function","googleanalyticsobject");
x.t("function","incorrectly");
x.t("length","0009");
x.t("length","copied");
x.t("length","zero");
x.t("length","0010");
x.t("length","0012");
x.t("maximum","fragment");
x.t("enough","data");
x.t("1005","internal");
x.t("corrupt","incomplete");
x.t("corrupt","check");
x.t("corrupt","message");
x.t("corrupt","ensure");
x.t("corrupt","data");
x.t("cannot","change");
x.t("cannot","obtain");
x.t("cannot","completed");
x.t("cannot","written");
x.t("cannot","packed");
x.t("cannot","released");
x.t("may","indicate");
x.t("may","error");
x.t("different","depending");
x.t("1006","incoming");
x.t("receive","error");
x.t("programmatically","errors");
x.t("1007","issue");
x.t("transport","api");
x.t("transport","indicate");
x.t("transport","functions");
x.t("transport","buffer\u2019s");
x.t("transport","header");
x.t("transport","data");
x.t("transport","package");
x.t("transport","call");
x.t("transport","buffer");
x.t("returned","rsslerror");
x.t("returned","error");
x.t("section","10.1.4");
x.t("verify","argument");
x.t("properly","allocated");
x.t("allocated","0003");
x.t("allocated","1001");
x.t("allocated","buffer");
x.t("0010","invalid");
x.t("internal","error");
x.t("1008","internal");
x.t("0011","buffer");
x.t("calling","rsslclosechannel");
x.t("rejected","may");
x.t("1009","output");
x.t("code","description");
x.t("code","contact");
x.t("code","issue\u2019s");
x.t("code","1003");
x.t("code","ensure");
x.t("code","value");
x.t("code","received");
x.t("invalid","ioctl");
x.t("invalid","buffer");
x.t("0012","configuration");
x.t("follow","recommendation");
x.t("client","server");
x.t("return","codes");
x.t("return","code");
x.t("fully","overwritten");
x.t("0013","missing");
x.t("packed","fragmented");
x.t("packed","requesting");
x.t("packed","buffer");
x.t("message","passed");
x.t("message","0013");
x.t("memory","allocation");
x.t("memory","required");
x.t("memory","necessary");
x.t("memory","attempt");
x.t("memory","ensure");
x.t("matches","state");
x.t("0014","fragmentation");
x.t("buffers","complete");
x.t("buffers","attempt");
x.t("buffers","larger");
x.t("issue","allocating");
x.t("issue","transport");
x.t("header","resulted");
x.t("ensure","rsslinitialize");
x.t("ensure","channel");
x.t("ensure","size");
x.t("ensure","proper");
x.t("ensure","requested");
x.t("ensure","length");
x.t("ensure","enough");
x.t("ensure","configuration");
x.t("ensure","rsslinitchannel");
x.t("ensure","application");
x.t("ensure","buffer");
x.t("multicast","peer");
x.t("multicast","transport");
x.t("rsslconnect","0007");
x.t("rsslgetbuffer","modified");
x.t("rsslgetbuffer","correctly");
x.t("rsslgetbuffer","buffer");
x.t("0015","cannot");
x.t("documentation","information");
x.t("null","check");
x.t("null","verify");
x.t("less","transport");
x.t("0016","indicates");
x.t("configuration","populate");
x.t("configuration","element");
x.t("configuration","error");
x.t("configuration","used");
x.t("configuration","passing");
x.t("fragment","size");
x.t("0017","invalid");
x.t("additional","buffers");
x.t("additional","information");
x.t("transport\u2019s","locking");
x.t("allocate","new");
x.t("allocate","memory");
x.t("recommendation","error");
x.t("value","passed");
x.t("value","populated");
x.t("0018","channel");
x.t("send","pageview");
x.t("0019","corrupt");
x.t("failing","allocate");
x.t("depending","text");
x.t("depending","underlying");
x.t("specific","return");
x.t("(arguments)","[r]");
x.t("condition","copying");
x.t("condition","multithreaded");
x.t("making","function");
x.t("obtaining","buffer");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("(s)","complete");
x.t("multithreaded","application");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("purposes","debugging");
x.t("corruption","reading");
x.t("rsslinitchannel","called");
x.t("larger","zero");
x.t("larger","maximum");
x.t("larger","buffer");
x.t("output","buffers");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","rsslerror");
x.t("information","regarding");
x.t("information","specific");
x.t("information","purposes");
x.t("data","quality");
x.t("data","error");
x.t("data","corrupt");
x.t("data","transport");
x.t("data","allocated");
x.t("data","0015");
x.t("data","less");
x.t("data","corruption");
x.t("noted","error");
x.t("correct","according");
x.t("behind","1006");
x.t("behind","1009");
x.t("meaning","code");
x.t("strategy","0005");
x.t("received","contact");
x.t("received","rsslgetbuffer");
x.t("result","client");
x.t("application","avoid");
x.t("application","attempting");
x.t("application","using");
x.t("case","1007");
x.t("structure","transport");
x.t("called","possible");
x.t("called","channel");
x.t("called","function");
x.t("called","rsslchannel");
x.t("overwritten","data");
x.t("misconfiguration","udp");
x.t("misconfiguration","tcp");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("note","return");
x.t("errno","error");
x.t("errno","different");
x.t("errno","value");
x.t("flush","channel");
x.t("correctly","passed");
x.t("rsslioctl","correct");
x.t("edition","error");
x.t("package","0002");
x.t("package","calls");
x.t("package","fully");
x.t("package","meaning");
x.t("call","rsslwrite");
x.t("call","returned");
x.t("call","0014");
x.t("call","0019");
x.t("call","errno");
x.t("incoming","connection");
x.t("resulted","error");
x.t(".q=i","[r]");
x.t("following","table");
x.t("193","error");
x.t("either","incorrectly");
x.t("used","rsslbind");
x.t("used","rsslgetbuffer");
x.t("except","length");
x.t("system","error");
x.t("system","errno");
x.t("system","call");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("general","information");
x.t("using","memory");
x.t("a.async=1","a.src=g");
x.t("returns","error");
x.t("googleanalyticsobject","[r]");
x.t("associated","error");
x.t("rsslchannel","passed");
x.t("released","due");
x.t("passing","rsslioctl");
x.t("incorrectly","passed");
x.t("incorrectly","formatted");
x.t("reading","0004");
x.t("buffer","overflow");
x.t("buffer","size");
x.t("buffer","small");
x.t("buffer","smaller");
x.t("buffer","length");
x.t("buffer","cannot");
x.t("buffer","transport");
x.t("buffer","buffers");
x.t("buffer","ensure");
x.t("buffer","additional");
x.t("buffer","(s)");
x.t("buffer","received");
x.t("shutting","down");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("encoding","decoding");
x.t("rsslclosechannel","1004");
x.t("server","misconfiguration");
}
