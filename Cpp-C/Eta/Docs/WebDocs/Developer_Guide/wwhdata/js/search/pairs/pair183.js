function FileData_Pairs(x)
{
x.t("example","shows");
x.t("example","writing");
x.t("example","writes");
x.t("example","function");
x.t("example","following");
x.t("rsslencodeiterator","rsslsetencodeiteratorbuffer");
x.t("passed","connection");
x.t("m.parentnode.insertbefore","window");
x.t("&outbytes","&outuncompbytes");
x.t("else","printf");
x.t("else","check");
x.t("else","handle");
x.t("else","successful");
x.t("version","information");
x.t("just","buffers");
x.t("ask","500");
x.t("nothing","read");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("keep","track");
x.t("required","continue");
x.t("queued","rsslflush");
x.t("queued","rssl");
x.t("rsslsetencodeiteratorbuffer","&enciter");
x.t("likely","unrecoverable");
x.t("shows","typical");
x.t("versioning","performed");
x.t("rsslsetencodeiteratorrwfversion","&enciter");
x.t("&rsslmsg","buffer\u2019s");
x.t("state","determine");
x.t("state","rssl_ch_state_closed");
x.t("it\u2019s","unrecoverable");
x.t("populate","write");
x.t("populate","message");
x.t("obtained","iterator");
x.t("rsslwrite","example");
x.t("rsslwrite","again");
x.t("rsslwrite","sure");
x.t("rsslwrite","error");
x.t("rsslwrite","pchnl");
x.t("rsslwrite","function");
x.t("rsslwrite","code");
x.t("rsslwrite","rsslgetbuffer");
x.t("fragmentation","process");
x.t("connection","closed");
x.t("connection","continue");
x.t("connection","rsslret");
x.t("connection","break");
x.t("connection","encode");
x.t("connection","upa");
x.t("10.10.2","call");
x.t("10.10.2","used");
x.t("a=s.createelement","(o)");
x.t("stranded","output");
x.t("500","rssl_false");
x.t("500","byte");
x.t("channel","state");
x.t("unrecoverable","connection");
x.t("unrecoverable","error.rsslerrorid");
x.t("unrecoverable","pchnl-");
x.t("text","s\\n");
x.t("default","printf");
x.t("back","pool");
x.t("new","date");
x.t("rssl_false","&error");
x.t("document","script");
x.t("(retcode)","case");
x.t("printf","unexpected");
x.t("printf","error");
x.t("pageview","transport");
x.t("proper","versioning");
x.t("appropriately","return");
x.t("again","exact");
x.t("again","break");
x.t("track","return");
x.t("flags","retcode");
x.t("error.text","connection");
x.t("error.text","buffer");
x.t("api","edition");
x.t("iterator","proper");
x.t("iterator","pbuffer-");
x.t("check","just");
x.t("check","channel");
x.t("sure","keep");
x.t("pbuffer-","length");
x.t("large","buffer");
x.t("byte","non-packable");
x.t("writing","obtained");
x.t("writing","data");
x.t("high","priority");
x.t("handle","return");
x.t("codes","appropriately");
x.t("closed","else");
x.t("closed","return");
x.t("window","document");
x.t("prior","writing");
x.t("rssl_ret_buffer_too_small","nothing");
x.t("10.9.7","rsslgetbuffer");
x.t("continue","fragmentation");
x.t("continue","attempting");
x.t("continue","next");
x.t("outuncompbytes","ask");
x.t("determine","unrecoverable");
x.t("encoded","content");
x.t("writes","buffer");
x.t("modification","flags");
x.t("write","modification");
x.t("write","pbuffer");
x.t("write","data");
x.t("write","successful");
x.t("write","call");
x.t("write","encode");
x.t("outbytes","rssluint32");
x.t("rsslmsg","buffer");
x.t("minorversion","populate");
x.t("attempt","free");
x.t("attempt","flush");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("structures","rsslgetbuffer");
x.t("10.9","writing");
x.t("auto","send");
x.t("attempting","flush");
x.t("attempting","pass");
x.t("failed","upa");
x.t("unexpected","return");
x.t("11.6.3.5","message");
x.t("buffer\u2019s","encoded");
x.t("error","text");
x.t("error","errno");
x.t("somehow","corrupted");
x.t("rsslret","retcode");
x.t("next","operations");
x.t("split","transport");
x.t("(error.rsslerrorid)","error.rsslerrorid");
x.t("rssl_ret_failure","printf");
x.t("rssl_ret_failure","rsslbuffer");
x.t("pchnl","500");
x.t("pchnl","pbuffer");
x.t("rsslencodemsg","&enciter");
x.t("function","again");
x.t("function","section");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("length","prior");
x.t("length","rsslgetencodedbufferlength");
x.t("may","required");
x.t("non-packable","buffer");
x.t("error.rsslerrorid","error.syserror");
x.t("error.rsslerrorid","rssl_ret_buffer_no_buffers");
x.t("chapter","transport");
x.t("detailed","view");
x.t("transport","api");
x.t("transport","rsslflush");
x.t("transport","output");
x.t("transport","package");
x.t("returned","populate");
x.t("section","10.10.2");
x.t("release","rsslreleasebuffer");
x.t("release","buffer");
x.t("rsslflush","function");
x.t("rsslflush","may");
x.t("rsslflush","section");
x.t("retcode","likely");
x.t("retcode","rsslwrite");
x.t("retcode","rssl_ret_failure");
x.t("retcode","rsslencodemsg");
x.t("retcode","rssl_ret_success");
x.t("rsslgetencodedbufferlength","&enciter");
x.t("switch","(retcode)");
x.t("code","example");
x.t("code","similar");
x.t("code","encountered");
x.t("code","rsslreleasebuffer");
x.t("client","server");
x.t("return","codes");
x.t("return","code");
x.t("return","failure");
x.t("return","values");
x.t("corrupted","rsslgetbuffer");
x.t("message","encode");
x.t("message","encoding");
x.t("buffers","it\u2019s");
x.t("buffers","back");
x.t("buffers","schedule");
x.t("exact","buffer");
x.t("error.syserror","error.text");
x.t("rsslgetbuffer","rsslwrite");
x.t("rsslgetbuffer","error");
x.t("rsslgetbuffer","pchnl");
x.t("rsslgetbuffer","release");
x.t("rsslgetbuffer","rsslreleasebuffer");
x.t("rssl_ret_buffer_no_buffers","rsslflush");
x.t("failure","else");
x.t("failure","code");
x.t("failure","break");
x.t("failure","conditions");
x.t("similar","client");
x.t("send","pageview");
x.t("rsslbuffer","pbuffer");
x.t("pbuffer","version");
x.t("pbuffer","rsslgetbuffer");
x.t("pbuffer","rssl_high_priority");
x.t("pbuffer","&error");
x.t("pbuffer","rssluint32");
x.t("free","buffers");
x.t("(arguments)","[r]");
x.t("&outuncompbytes","&error");
x.t("process","release");
x.t("view","10.9");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("rssl","transport");
x.t("encountered","rsslwrite");
x.t("encountered","retcode");
x.t("encountered","rsslgetbuffer");
x.t("read","buffer");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("output","buffers");
x.t("output","buffer");
x.t("schedule","call");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("typical","rsslgetbuffer");
x.t("data","passed");
x.t("data","keep");
x.t("data","queued");
x.t("data","connection");
x.t("data","stranded");
x.t("data","using");
x.t("data","buffer");
x.t("information","connection");
x.t("information","retcode");
x.t("pchnl-","state");
x.t("pchnl-","minorversion");
x.t("pchnl-","majorversion");
x.t("rssl_ret_success","write");
x.t("rssl_ret_success","successful");
x.t("rssl_ret_write_call_again","large");
x.t("rssl_ret_init_not_initialized","case");
x.t("values","write");
x.t("values","failure");
x.t("rssl_high_priority","&outbytes");
x.t("successful","write");
x.t("successful","attempt");
x.t("successful","data");
x.t("case","rssl_ret_buffer_too_small");
x.t("case","rssl_ret_failure");
x.t("case","rssl_ret_success");
x.t("case","rssl_ret_write_call_again");
x.t("case","rssl_ret_init_not_initialized");
x.t("case","rssl_ret_write_flush_failed");
x.t("s\\n","rsslretcodetostring");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("priority","write");
x.t("flush","failed");
x.t("flush","data");
x.t("errno","encountered");
x.t("based","rsslchannel");
x.t("rssl_ch_state_closed","printf");
x.t("edition","rsslgetbuffer");
x.t("&enciter","&rsslmsg");
x.t("&enciter","write");
x.t("&enciter","pbuffer");
x.t("&enciter","pchnl-");
x.t("call","rsslwrite");
x.t("call","rsslflush");
x.t("call","data");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","example");
x.t("used","continue");
x.t("used","attempt");
x.t("break","default");
x.t("break","case");
x.t("rssl_ret_write_flush_failed","write");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("using","rsslwrite");
x.t("a.async=1","a.src=g");
x.t("pass","data");
x.t("rsslreleasebuffer","chapter");
x.t("rsslreleasebuffer","pbuffer");
x.t("rsslreleasebuffer","checked");
x.t("googleanalyticsobject","[r]");
x.t("&error","connection");
x.t("&error","retcode");
x.t("&error","break");
x.t("&error","buffer");
x.t("performed","rsslsetencodeiteratorrwfversion");
x.t("operations","upa");
x.t("rsslretcodetostring","(error.rsslerrorid)");
x.t("rsslchannel","structures");
x.t("rssluint32","outuncompbytes");
x.t("rssluint32","outbytes");
x.t("passing","rsslwrite");
x.t("released","return");
x.t("buffer","rsslencodeiterator");
x.t("buffer","else");
x.t("buffer","check");
x.t("buffer","high");
x.t("buffer","continue");
x.t("buffer","10.9.7");
x.t("buffer","write");
x.t("buffer","somehow");
x.t("buffer","split");
x.t("buffer","returned");
x.t("buffer","rsslflush");
x.t("buffer","break");
x.t("buffer","passing");
x.t("buffer","released");
x.t("buffer","buffer");
x.t("encode","iterator");
x.t("encode","rsslmsg");
x.t("encode","11.6.3.5");
x.t("upa","release");
x.t("conditions","switch");
x.t("pool","else");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("server","based");
x.t("majorversion","pchnl-");
x.t("encoding","information");
x.t("content","length");
x.t("checked","rsslreleasebuffer");
}
