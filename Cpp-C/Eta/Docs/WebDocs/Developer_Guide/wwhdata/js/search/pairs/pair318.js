function FileData_Pairs(x)
{
x.t("example","omits");
x.t("example","demonstrates");
x.t("example","function");
x.t("example","chapter");
x.t("example","section");
x.t("example","encodes");
x.t("example","rsslfilterlist");
x.t("example","following");
x.t("housed","types");
x.t("filterentry.action","rssl_ftef_set_entry");
x.t("filterentry.action","rssl_ftef_update_entry");
x.t("rssl_ftef_set_entry","retval");
x.t("m.parentnode.insertbefore","window");
x.t("else","filterlist");
x.t("rsslmap.containertype","rssl_dt_field_list");
x.t("parameter","false");
x.t("parameter","true");
x.t("filterlist","init");
x.t("filterlist","assumes");
x.t("filterlist","structure");
x.t("filterlist","encoding");
x.t("version","information");
x.t("rsslencodefilterentry","&enciter");
x.t("lists","common");
x.t("filterentry.flags","rssl_ftef_has_container_type");
x.t(".l=1","new");
x.t("create","single");
x.t("create","ua-55718642-4");
x.t("rsslencodefilterlistinit","retval");
x.t("rsslencodefilterlistinit","error");
x.t("rsslencodefilterlistinit","filterlist.flags");
x.t("rsslencodefilterlistinit","&enciter");
x.t("init","encoding");
x.t("refer","example");
x.t("unencoded","element");
x.t("unencoded","map");
x.t("unencoded","data");
x.t("elementlist.flags","rssl_elf_has_standard_data");
x.t("rsslencodeelementlistcomplete","&enciter");
x.t("rsslretcodeinfo","(retval)");
x.t("action","filterentry.id");
x.t("container","types");
x.t("container","using");
x.t("container","encoding");
x.t("roll","back");
x.t("-----","continue");
x.t("sample","illustrates");
x.t("populate","filterlist");
x.t("populate","action");
x.t("populate","containertype");
x.t("type","different");
x.t("type","filterlist.containertype");
x.t("enciter","already");
x.t("retval","rsslencodefilterentry");
x.t("retval","rsslencodefilterlistinit");
x.t("retval","rsslencodeelementlistcomplete");
x.t("retval","rsslretcodeinfo");
x.t("retval","rsslencodefilterlistcomplete");
x.t("retval","rsslencodefilterentrycomplete");
x.t("retval","rsslencodemapinit");
x.t("retval","rsslencodemapcomplete");
x.t("retval","rsslencodefilterentryinit");
x.t("retval","rsslencodeelementlistinit");
x.t("payload","data");
x.t("rsslmap","rsslmap");
x.t("rsslmap","rssl_init_map");
x.t("filterentry","rssl_init_filter_entry");
x.t("&elementlist","rssl_ret_success");
x.t("rssl_dt_map","retval");
x.t("a=s.createelement","(o)");
x.t("assumes","enciter");
x.t("back","success");
x.t("back","encoding");
x.t("text","printf");
x.t("text","s\\n");
x.t("rssl_init_filter_entry","first");
x.t("new","date");
x.t("element","lists");
x.t("element","list");
x.t("element","entries");
x.t("rssl_false","print");
x.t("single","rsslfilterentry");
x.t("document","script");
x.t("printf","error");
x.t("pageview","transport");
x.t("list","third");
x.t("list","second");
x.t("list","rsslelementlist");
x.t("list","assuming");
x.t("omits","additional");
x.t("need","specify");
x.t("rssl_init_map","rsslmap.keyprimitivetype");
x.t("complete","filterlist");
x.t("complete","nested");
x.t("rsslencodefilterlistcomplete","&enciter");
x.t("api","edition");
x.t("pre-encoded","payload");
x.t("pre-encoded","element");
x.t("pre-encoded","buffer");
x.t("entry","filterentry.flags");
x.t("entry","unencoded");
x.t("entry","pre-encoded");
x.t("entry","rsslfilterentry");
x.t("entry","encode");
x.t("filter","entry");
x.t("filterentry.encdata.length","pencelemlist-");
x.t("false","roll");
x.t("rsslencodefilterentrycomplete","&enciter");
x.t("filterentry.containertype","rssl_dt_map");
x.t("350","bytes");
x.t("350","encode");
x.t("rsslencodemapinit","&enciter");
x.t("true","finalize");
x.t("demonstrates","error");
x.t("common","specify");
x.t("rssl_ftf_none","populate");
x.t("populated","filterentry.id");
x.t("populated","buffer");
x.t("bytes","populate");
x.t("11.3.6.7","rsslfilterlist");
x.t("window","document");
x.t("illustrates","encode");
x.t("prior","rsslencodefilterlistinit");
x.t("prior","call");
x.t("determine","success");
x.t("continue","encoding");
x.t("mixture","housed");
x.t("encoded","unencoded");
x.t("encoded","element");
x.t("encoded","length");
x.t("encoded","buffer");
x.t("map","rsslmap");
x.t("map","filterentry.id");
x.t("map","value");
x.t("map","entries");
x.t("&filterentry","350");
x.t("&filterentry","third");
x.t("&filterentry","encode");
x.t("third","filter");
x.t("third","encoded");
x.t("string","value");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("three","rsslfilterentry");
x.t("second","filter");
x.t("second","encoded");
x.t("auto","send");
x.t("simplify","example");
x.t("begin","encoding");
x.t("store","return");
x.t("functions","retval");
x.t("error","text");
x.t("error","handling");
x.t("error","condition");
x.t("error","encountered");
x.t("rssl_dt_element_list","begin");
x.t("first","filter");
x.t("first","encoded");
x.t("containertype","two");
x.t("rsslencodemapcomplete","&enciter");
x.t("function","simplify");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("length","350");
x.t("length","populated");
x.t("length","filterentry.encdata.data");
x.t("filterentry.encdata.data","pencelemlist-");
x.t("(retval)","else");
x.t("(retval)","retval");
x.t("rssl_ftef_update_entry","type");
x.t("rssl_ftef_update_entry","filterentry.encdata.length");
x.t("different","filterlist.containertype");
x.t("chapter","data");
x.t("detailed","view");
x.t("transport","api");
x.t("types","example");
x.t("types","11.3.6");
x.t("handling","initial");
x.t("handling","performed");
x.t("section","11.3.2");
x.t("section","11.3.3");
x.t("initial","encode");
x.t("switch","success");
x.t("rsslencodefilterentryinit","&enciter");
x.t("code","example");
x.t("return","value");
x.t("encodes","three");
x.t("filterlist.flags","rssl_ftf_none");
x.t("message","return");
x.t("pencelemlist-","length");
x.t("pencelemlist-","data");
x.t("rssl_ftef_has_container_type","filterentry.containertype");
x.t("filterentry.id","filterentry.action");
x.t("failure","retval");
x.t("----","complete");
x.t("value","example");
x.t("value","text");
x.t("value","false");
x.t("value","determine");
x.t("value","string");
x.t("additional","error");
x.t("send","pageview");
x.t("already","populated");
x.t("rsslelementlist","elementlist");
x.t("specific","encode");
x.t("rsslbuffer","contains");
x.t("(arguments)","[r]");
x.t("condition","switch");
x.t("11.3.2","----");
x.t("view","11.3");
x.t("11.3","container");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("encountered","rsslencodefilterlistinit");
x.t("rsslmap.keyprimitivetype","rssl_dt_ascii_string");
x.t("11.3.3","----");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("rssl_dt_ascii_string","rsslmap.containertype");
x.t("rssl_dt_field_list","encode");
x.t("rsslfilterlist","11.3.6.7");
x.t("rsslfilterlist","containing");
x.t("rsslfilterlist","encoding");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","store");
x.t("rssl_ret_success","-----");
x.t("rssl_ret_success","error");
x.t("data","retval");
x.t("data","length");
x.t("data","package");
x.t("data","approx");
x.t("rssl_init_element_list","elementlist.flags");
x.t("nested","container");
x.t("assuming","pencelemlist");
x.t("11.3.6","rsslfilterlist");
x.t("values","first");
x.t("successful","create");
x.t("reuse","entry");
x.t("structure","prior");
x.t("print","message");
x.t("s\\n","rsslretcodetostring");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("two","element");
x.t("rssl_elf_has_standard_data","encode");
x.t("edition","rsslfilterlist");
x.t("call","rsslencodefilterlistinit");
x.t("&enciter","&elementlist");
x.t("&enciter","&filterentry");
x.t("&enciter","&filterlist");
x.t("&enciter","&rsslmap");
x.t("&enciter","success");
x.t("&filterlist","rssl_ret_success");
x.t("rsslencodeelementlistinit","&enciter");
x.t("&rsslmap","rssl_ret_success");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","sample");
x.t("filterlist.containertype","need");
x.t("filterlist.containertype","rssl_dt_element_list");
x.t("contained","element");
x.t("contained","map");
x.t("pencelemlist","rsslbuffer");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("containing","pre-encoded");
x.t("containing","mixture");
x.t("containing","encoded");
x.t("approx","encoded");
x.t("using","specific");
x.t("finalize","encoding");
x.t("a.async=1","a.src=g");
x.t("googleanalyticsobject","[r]");
x.t("rsslfilterentry","filterentry");
x.t("rsslfilterentry","values");
x.t("rsslfilterentry","reuse");
x.t("performed","populate");
x.t("rsslretcodetostring","(retval)");
x.t("success","parameter");
x.t("success","retval");
x.t("success","rssl_false");
x.t("success","complete");
x.t("success","second");
x.t("success","code");
x.t("success","failure");
x.t("success","value");
x.t("encode","entry");
x.t("encode","functions");
x.t("encode","function");
x.t("encode","rsslfilterlist");
x.t("encode","nested");
x.t("encode","contained");
x.t("buffer","version");
x.t("buffer","containing");
x.t("elementlist","rssl_init_element_list");
x.t("entries","example");
x.t("entries","refer");
x.t("encoding","example");
x.t("encoding","filterlist");
x.t("encoding","retval");
x.t("encoding","element");
x.t("encoding","prior");
x.t("encoding","map");
x.t("encoding","successful");
x.t("encoding","success");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("specify","type");
x.t("specify","entry");
x.t("contains","pre-encoded");
}
