function FileData_Pairs(x)
{
x.t("example","included");
x.t("example","every");
x.t("example","shows");
x.t("example","demonstrates");
x.t("example","begin");
x.t("example","function");
x.t("example","chapter");
x.t("example","encodes");
x.t("example","encoding");
x.t("rolls","back");
x.t("passed","rssl_true");
x.t("highlight","rollback");
x.t("included","example");
x.t("m.parentnode.insertbefore","window");
x.t("method","rolls");
x.t("method","success");
x.t("parameter","rolls");
x.t("parameter","rssl_false");
x.t("parameter","allows");
x.t("parameter","completes");
x.t("every","complete");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("rollback","example");
x.t("rollback","feature");
x.t("rsslencodemapentryinit","&enciter");
x.t("last","successfully");
x.t("last","successful");
x.t("shows","encoding");
x.t("roll","back");
x.t("rsslmap","two");
x.t("retval","rsslencodemapentryinit");
x.t("retval","rsslencodemapinit");
x.t("retval","rsslencodemapcomplete");
x.t("retval","rsslencodemapentrycomplete");
x.t("salvage","successful");
x.t("multiple","entries");
x.t("however","encoding");
x.t("back","example");
x.t("back","last");
x.t("back","retval");
x.t("back","map");
x.t("back","procedure");
x.t("back","encoding");
x.t("a=s.createelement","(o)");
x.t("new","date");
x.t("new","encoding");
x.t("rssl_false","complete");
x.t("rssl_false","calling");
x.t("contents","assume");
x.t("contents","fails");
x.t("document","script");
x.t("tenth","entry");
x.t("pageview","transport");
x.t("list","fails");
x.t("list","contains");
x.t("complete","method");
x.t("complete","methods");
x.t("complete","encoding");
x.t("api","edition");
x.t("entry","retval");
x.t("entry","list");
x.t("entry","fails");
x.t("entry","rolled");
x.t("entry","contained");
x.t("entry","remaining");
x.t("entry","succeeds");
x.t("entry","content");
x.t("entry\u2019s","contents");
x.t("entry\u2019s","complete");
x.t("assume","fails");
x.t("assume","succeeds");
x.t("results","entry");
x.t("fails","retval");
x.t("fails","second");
x.t("fails","rolled");
x.t("fails","passing");
x.t("fails","encode");
x.t("false","success");
x.t("rsslencodemapinit","&enciter");
x.t("true","success");
x.t("demonstrates","roll");
x.t("window","document");
x.t("methods","called");
x.t("completed","highlight");
x.t("9.2.3","content");
x.t("allows","discard");
x.t("encoded","portion");
x.t("encoded","content");
x.t("map","retval");
x.t("map","entry");
x.t("map","results");
x.t("map","completed");
x.t("map","two");
x.t("&mapentry","&entrykey");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("second","entry\u2019s");
x.t("second","entry");
x.t("second","map");
x.t("auto","send");
x.t("begin","new");
x.t("begin","encoding");
x.t("failed","entry\u2019s");
x.t("rolled","back");
x.t("first","entry");
x.t("first","map");
x.t("feature","portions");
x.t("rsslencodemapcomplete","&enciter");
x.t("decoding","conventions");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("chapter","encoding");
x.t("transport","api");
x.t("calling","failed");
x.t("end","last");
x.t("end","previous");
x.t("code","example");
x.t("completes","encoding");
x.t("successfully","encoded");
x.t("encodes","rsslmap");
x.t("previous","entry");
x.t("9.2","encoding");
x.t("send","pageview");
x.t("(arguments)","[r]");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("unsuccessfully","encoded");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("discard","unsuccessfully");
x.t("rssl_true","however");
x.t("rssl_true","code");
x.t("rssl_true","encode");
x.t("rsslencodemapentrycomplete","&enciter");
x.t("semantics","9.2.3");
x.t("successful","entry");
x.t("successful","portion");
x.t("application","encoded");
x.t("called","application");
x.t("procedure","example");
x.t("&entrykey","encode");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("two","entries");
x.t("edition","content");
x.t("&enciter","rssl_false");
x.t("&enciter","&mapentry");
x.t("&enciter","rssl_true");
x.t("&enciter","&rsslmap");
x.t("&rsslmap","encode");
x.t(".q=i","[r]");
x.t("following","example");
x.t("relevant","example");
x.t("contained","map");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("remaining","complete");
x.t("remaining","entries");
x.t("portions","relevant");
x.t("a.async=1","a.src=g");
x.t("portion","example");
x.t("portion","encoding");
x.t("pass","success");
x.t("succeeds","retval");
x.t("succeeds","success");
x.t("succeeds","passing");
x.t("googleanalyticsobject","[r]");
x.t("success","passed");
x.t("success","parameter");
x.t("passing","false");
x.t("passing","true");
x.t("entries","tenth");
x.t("entries","second");
x.t("entries","first");
x.t("entries","following");
x.t("encode","salvage");
x.t("encode","contents");
x.t("encode","second");
x.t("encode","first");
x.t("conventions","9.2");
x.t("content","roll");
x.t("content","fails");
x.t("content","begin");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("encoding","rollback");
x.t("encoding","list");
x.t("encoding","entry");
x.t("encoding","map");
x.t("encoding","second");
x.t("encoding","decoding");
x.t("encoding","end");
x.t("encoding","semantics");
x.t("encoding","remaining");
x.t("encoding","pass");
x.t("contains","multiple");
}
