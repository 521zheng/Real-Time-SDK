function FileData_Pairs(x)
{
x.t("example","uses");
x.t("example","error");
x.t("example","function");
x.t("example","chapter");
x.t("example","section");
x.t("example","rsslfilterlist");
x.t("example","following");
x.t("housed","type");
x.t("m.parentnode.insertbefore","window");
x.t("else","filterentry.containertype");
x.t("else","decoding");
x.t("else","ctype");
x.t("filterentry.flags","rssl_ftef_has_container_type");
x.t("full","switch");
x.t(".l=1","new");
x.t("create","single");
x.t("create","ua-55718642-4");
x.t("rsslretcodeinfo","(retval)");
x.t("container","type");
x.t("container","types");
x.t("uses","switch");
x.t("uses","rssldecodeiterator");
x.t("until","left");
x.t("statement","generic");
x.t("statement","omitted");
x.t("statement","decode");
x.t("sample","illustrates");
x.t("sample","code");
x.t("type","uses");
x.t("type","decoder");
x.t("retval","rsslretcodeinfo");
x.t("retval","rssldecodeelementlist");
x.t("retval","rssldecodefilterlist");
x.t("retval","rssldecodefilterentry");
x.t("retval","rssl_ret_success");
x.t("retval","rssldecodemap");
x.t("tends","unrecoverable");
x.t("left","retval");
x.t("filterentry","rssl_init_filter_entry");
x.t("rssl_dt_map","retval");
x.t("&elementlist","continue");
x.t("a=s.createelement","(o)");
x.t("structured","decode");
x.t("rssl_init_filter_entry","decode");
x.t("unrecoverable","printf");
x.t("text","s\\n");
x.t("new","iterator");
x.t("new","rssldecodeiterator");
x.t("new","date");
x.t("contents","filter");
x.t("single","filter");
x.t("element","entries");
x.t("document","script");
x.t("printf","error");
x.t("pageview","transport");
x.t("list","structure");
x.t("rsslcontainertype","ctype");
x.t("api","edition");
x.t("entry","until");
x.t("entry","decoder");
x.t("entry","reuse");
x.t("entry","typically");
x.t("entry","contained");
x.t("entry","rsslfilterentry");
x.t("filter","list");
x.t("filter","entry");
x.t("iterator","simplify");
x.t("filterentry.containertype","else");
x.t("filterentry.containertype","present");
x.t("shorten","sample");
x.t("window","document");
x.t("illustrates","decode");
x.t("generic","series");
x.t("continue","decoding");
x.t("11.3.6.9","rsslfilterentry");
x.t("&filterentry","rssl_ret_end_of_container");
x.t("map","entries");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("auto","send");
x.t("simplify","example");
x.t("present","switch");
x.t("error","text");
x.t("error","handling");
x.t("error","encountered");
x.t("rssldecodeelementlist","&deciter");
x.t("invokes","specific");
x.t("rssl_dt_element_list","retval");
x.t("decoding","example");
x.t("decoding","element");
x.t("decoding","entry");
x.t("decoding","map");
x.t("decoding","failure");
x.t("function","optionally");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("decoder","housed");
x.t("decoder","example");
x.t("decoder","function");
x.t("rssldecodefilterlist","error");
x.t("rssldecodefilterlist","&deciter");
x.t("(ctype)","case");
x.t("(retval)","else");
x.t("(retval)","retval");
x.t("(retval)","code");
x.t("chapter","data");
x.t("detailed","view");
x.t("transport","api");
x.t("handling","omitted");
x.t("section","11.3.2");
x.t("section","11.3.3");
x.t("types","11.3.6");
x.t("switch","statement");
x.t("switch","(ctype)");
x.t("switch","otherwise");
x.t("switch","filterlist.containertype");
x.t("calling","content\u2019s");
x.t("omitted","shorten");
x.t("omitted","decode");
x.t("code","example");
x.t("code","else");
x.t("code","uses");
x.t("rssl_ftef_has_container_type","ctype");
x.t("rssldecodefilterentry","error");
x.t("rssldecodefilterentry","&deciter");
x.t("failure","tends");
x.t("value","sample");
x.t("send","pageview");
x.t("specific","container");
x.t("(arguments)","[r]");
x.t("11.3.2","break");
x.t("view","11.3");
x.t("11.3","container");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("decode","contents");
x.t("decode","entry");
x.t("decode","filter");
x.t("decode","rsslfilterlist");
x.t("encountered","rssldecodefilterlist");
x.t("encountered","rssldecodefilterentry");
x.t("11.3.3","break");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("rsslfilterlist","structured");
x.t("rsslfilterlist","11.3.6.9");
x.t("rsslfilterlist","decoding");
x.t("rssldecodeiterator","calling");
x.t("rssldecodeiterator","setting");
x.t("&deciter","&elementlist");
x.t("&deciter","&filterentry");
x.t("&deciter","&filterlist");
x.t("&deciter","&rsslmap");
x.t("rssl_ret_success","create");
x.t("rssl_ret_success","decoding");
x.t("data","package");
x.t("11.3.6","rsslfilterlist");
x.t("application","new");
x.t("application","invokes");
x.t("reuse","decoding");
x.t("case","rssl_dt_map");
x.t("case","rssl_dt_element_list");
x.t("structure","retval");
x.t("s\\n","rsslretcodetostring");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("rssl_ret_end_of_container","retval");
x.t("otherwise","switch");
x.t("typically","application");
x.t("content\u2019s","decoder");
x.t("optionally","application");
x.t("edition","rsslfilterentry");
x.t("encdata","new");
x.t("&filterlist","rssl_ret_success");
x.t("&rsslmap","continue");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","sample");
x.t("contained","value");
x.t("filterlist.containertype","rsslcontainertype");
x.t("filterlist.containertype","switch");
x.t("break","full");
x.t("break","case");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("setting","encdata");
x.t("rssldecodemap","&deciter");
x.t("a.async=1","a.src=g");
x.t("series","entry");
x.t("rsslfilterentry","filterentry");
x.t("rsslfilterentry","decoding");
x.t("googleanalyticsobject","[r]");
x.t("rsslretcodetostring","(retval)");
x.t("ctype","filterentry.flags");
x.t("ctype","filterentry.containertype");
x.t("ctype","filterlist.containertype");
x.t("entries","example");
x.t("a.src=g","m.parentnode.insertbefore");
}
