function FileData_Pairs(x)
{
x.t("interfaces","loopback");
x.t("passed","connected");
x.t("equal","guaranteedoutputbuffers");
x.t("equal","number");
x.t("equal","64k");
x.t("sharedpoolsize","maximum");
x.t("sharedpoolsize","happens");
x.t("enabling","shared");
x.t("active","client");
x.t("active","actual");
x.t("m.parentnode.insertbefore","window");
x.t("available","sharedpoolsize");
x.t("available","via");
x.t("available","part");
x.t("available","pingtimeout");
x.t("available","write");
x.t("available","protocoltype");
x.t("available","rsslchannel");
x.t("parameter","determines");
x.t("negotiation","refer");
x.t("negotiation","provided");
x.t("negotiation","client");
x.t("negotiation","process");
x.t("possible","value");
x.t("tcpopts.tcp_nodelay","table");
x.t("blocking","manner");
x.t("blocking","i/o");
x.t("manner","rsslserver");
x.t("manner","rsslchannel");
x.t("method","sysrecvbufsize");
x.t("coupling","rsslserver");
x.t("combined","component");
x.t("creation","accepting");
x.t("compression","negotiation");
x.t("compression","applied");
x.t("compression","apply");
x.t("compression","regardless");
x.t("compression","compressionlevel");
x.t("compression","types");
x.t("compression","compressiontype");
x.t("compression","negotiated");
x.t("compression","levels");
x.t("compression","server");
x.t("version","increases");
x.t("version","string");
x.t("version","length");
x.t("version","information");
x.t("version","protocol");
x.t("version","used");
x.t("intended","systems");
x.t("every","pingtimeout");
x.t("applied","information");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","changed");
x.t("table","serverblocking");
x.t("table","componentversion");
x.t("table","rsslbindoptions");
x.t("description","servicename");
x.t("refer","tcpopts.tcp_nodelay");
x.t("refer","table");
x.t("refer","section");
x.t("required","flow");
x.t("required","send");
x.t("required","rssl");
x.t("disabling","channel");
x.t("mechanism","enables");
x.t("mechanism","allow");
x.t("layer","data-neutral");
x.t("components","information");
x.t("components","typically");
x.t("lowest","possible");
x.t("lowest","allowable");
x.t("apply","connection");
x.t("apply","allowable");
x.t("discussed","section");
x.t("locking","mode");
x.t("locking","information");
x.t("locking","performed");
x.t("enabled","compression");
x.t("enabled","server");
x.t("guaranteed","number");
x.t("guaranteed","output");
x.t("guaranteed","shared");
x.t("handled","single");
x.t("until","i/o");
x.t("until","server");
x.t("uses","connections");
x.t("userspecptr","specified");
x.t("userspecptr","rsslserver");
x.t("userspecptr","pointer");
x.t("interface","bind");
x.t("interface","value");
x.t("interface","cards");
x.t("mode","options");
x.t("necessary","work");
x.t("provided","via");
x.t("provided","help");
x.t("extension","transport");
x.t("modified","transport");
x.t("open","listening");
x.t("change","negotiation");
x.t("change","extension");
x.t("change","transport");
x.t("type","compression");
x.t("type","server");
x.t("type","content");
x.t("best","compression");
x.t("introduction","fully");
x.t("introduction","significant");
x.t("missing","value");
x.t("fragmentation","refer");
x.t("fragmentation","done");
x.t("sequential","input");
x.t("time","needed");
x.t("time","guaranteedoutputbuffers");
x.t("time","outcome");
x.t("time","information");
x.t("multiple","network");
x.t("connection","compression");
x.t("connection","missing");
x.t("connection","time");
x.t("connection","accepted");
x.t("connection","types");
x.t("connection","becomes");
x.t("shut","down");
x.t("down","information");
x.t("thumb","send");
x.t("regardless","client");
x.t("i.e","settings");
x.t("i.e","incompatible");
x.t("a=s.createelement","(o)");
x.t("channel","locking");
x.t("channel","input");
x.t("channel","allowed");
x.t("default","size");
x.t("default","1,048,567");
x.t("needed","shared");
x.t("lock","allows");
x.t("require","rssl_true");
x.t("speed","compression");
x.t("increases","introduction");
x.t("exceeds","maximum");
x.t("inaddr_any","used");
x.t("new","date");
x.t("interfacename","character");
x.t("single","network");
x.t("guaranteedoutputbuffers","equal");
x.t("guaranteedoutputbuffers","sharedpoolsize");
x.t("guaranteedoutputbuffers","guaranteed");
x.t("guaranteedoutputbuffers","number");
x.t("guaranteedoutputbuffers","value");
x.t("guaranteedoutputbuffers","unavailable");
x.t("guaranteedoutputbuffers","maxfragmentsize");
x.t("servers","desired");
x.t("servers","pingtimeout");
x.t("servertoclientpings","rssl_true");
x.t("rssl_false","compression");
x.t("rssl_false","client");
x.t("rssl_false","server");
x.t("clienttoserverpings","rssl_true");
x.t("details","refer");
x.t("document","script");
x.t("size","components");
x.t("size","connection");
x.t("size","value");
x.t("size","shared");
x.t("size","64k");
x.t("size","buffer");
x.t("trep","thomson");
x.t("pageview","transport");
x.t("file","bind");
x.t("initialization","time");
x.t("initialization","rsslchannel");
x.t("determines","number");
x.t("rsslaccept","function");
x.t("list","connected");
x.t("machine","maxfragmentsize");
x.t("complete","initialization");
x.t("complete","control");
x.t("api","user-defined");
x.t("api","edition");
x.t("network","interface");
x.t("network","read");
x.t("network","larger");
x.t("compressionlevel","results");
x.t("compressionlevel","specified");
x.t("compressionlevel","sets");
x.t("compressionlevel","compromise");
x.t("compressionlevel","copy");
x.t("results","best");
x.t("results","fastest");
x.t("etc/services","file");
x.t("recommended","application");
x.t("substructure","containing");
x.t("tcp-based","connection");
x.t("specified","interface");
x.t("specified","protocoltype");
x.t("specified","connections");
x.t("specified","rsslacceptoptions");
x.t("specified","server");
x.t("via","minorversion");
x.t("via","protocoltype");
x.t("via","message");
x.t("via","rsslacceptoptions");
x.t("via","rsslioctl");
x.t("via","majorversion");
x.t("writing","complete");
x.t("writing","data");
x.t("writing","using");
x.t("desired","ping");
x.t("inaddr_loopback","used");
x.t("name","defined");
x.t("common","message");
x.t("operation","channel");
x.t("operation","completed");
x.t("rsslbind","userspecptr");
x.t("rsslbind","sharedpoollock");
x.t("settings","used");
x.t("settings","using");
x.t("functionality","refer");
x.t("channelsblocking","rssl_true");
x.t("stored","userspecptr");
x.t("creating","listening");
x.t("populated","connection");
x.t("approximate","guaranteedoutputbuffers");
x.t("10.12","servertoclientpings");
x.t("10.12","minpingtimeout");
x.t("enables","compression");
x.t("enables","application");
x.t("returning","blocking");
x.t("clients","specified");
x.t("changed","via");
x.t("10.4.1","creating");
x.t("bytes","handled");
x.t("bytes","guaranteed");
x.t("bytes","default");
x.t("bytes","input");
x.t("part","shared");
x.t("preference","enabled");
x.t("cycles","perform");
x.t("perform","necessary");
x.t("component","version");
x.t("10.4","server");
x.t("window","document");
x.t("rule","thumb");
x.t("10.4.3","compressionlevel");
x.t("10.4.3","tcp_nodelay");
x.t("10.4.3","forcecompression");
x.t("prior","returning");
x.t("prior","bind");
x.t("useful","coupling");
x.t("instantiating","local");
x.t("pingtimeout","servers");
x.t("pingtimeout","value");
x.t("pingtimeout","values");
x.t("pingtimeout","seconds");
x.t("minpingtimeout","server\u2019s");
x.t("completed","blocking");
x.t("appended","behind");
x.t("standard","upa");
x.t("address","(127.0.0.1)");
x.t("address","hostname");
x.t("allows","flow");
x.t("allows","shared");
x.t("local","machine");
x.t("local","network");
x.t("10.8","note");
x.t("segment","size");
x.t("segment","approximate");
x.t("allow","shared");
x.t("allow","efficient");
x.t("sets","system\u2019s");
x.t("sets","level");
x.t("sets","protocol");
x.t("sets","buffer");
x.t("write","output");
x.t("incompatible","change");
x.t("minorversion","provided");
x.t("minorversion","minor");
x.t("minorversion","rsslchannel");
x.t("string","appended");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("input","buffers");
x.t("input","buffer");
x.t("10.9","numinputbuffers");
x.t("contain","maxfragmentsize");
x.t("remain","thread");
x.t("thread","safe");
x.t("flow","type");
x.t("flow","client");
x.t("flow","server");
x.t("structures","i/o");
x.t("auto","send");
x.t("accepted","interfaces");
x.t("accepted","instantiating");
x.t("rssl_conn_type_unidir_shmem","parameter");
x.t("tcpopts","substructure");
x.t("error","returned");
x.t("independent","locking");
x.t("reuters","components");
x.t("supported","compression");
x.t("supported","transport");
x.t("supported","server");
x.t("tcp_nodelay","deprecated");
x.t("equivalent","functionality");
x.t("members","table");
x.t("members","function");
x.t("members","structure");
x.t("representation","address");
x.t("representation","numeric");
x.t("13.1","guaranteed");
x.t("smaller","maxfragmentsize");
x.t("allowed","negotiation");
x.t("allowed","maxoutputbuffers");
x.t("allowed","shared");
x.t("allowed","rsslchannel");
x.t("options","enabling");
x.t("options","refer");
x.t("options","specific");
x.t("messages","required");
x.t("serverblocking","rssl_true");
x.t("space","available");
x.t("protocoltype","provided");
x.t("protocoltype","sets");
x.t("protocoltype","rsslchannel");
x.t("number","sequential");
x.t("number","bytes");
x.t("number","buffers");
x.t("number","output");
x.t("number","shared");
x.t("number","service");
x.t("written","network");
x.t("control","returned");
x.t("communicate","details");
x.t("system\u2019s","receive");
x.t("function","complete");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("(127.0.0.1)","specified");
x.t("maximum","size");
x.t("maximum","supported");
x.t("maximum","number");
x.t("determining","desired");
x.t("fastest","compression");
x.t("length","exceeds");
x.t("truncated","inaddr_any");
x.t("different","application");
x.t("safe","disabling");
x.t("may","change");
x.t("may","performed");
x.t("heartbeats","trep");
x.t("9.5.1","minorversion");
x.t("9.5.1","sysrecvbufsize");
x.t("9.5.1","majorversion");
x.t("specifies","major");
x.t("receive","buffer");
x.t("user-defined","component");
x.t("user-defined","information");
x.t("chapter","transport");
x.t("detailed","view");
x.t("transport","layer");
x.t("transport","api");
x.t("transport","establish");
x.t("transport","internally");
x.t("transport","preserved");
x.t("transport","package");
x.t("transport","buffer");
x.t("bind","open");
x.t("bind","time");
x.t("bind","rssl");
x.t("bind","system");
x.t("socket","interfacename");
x.t("socket","10.4.1.1");
x.t("section","10.12");
x.t("section","10.4.3");
x.t("section","10.8");
x.t("section","10.9");
x.t("section","13.1");
x.t("section","9.5.1");
x.t("section","10.2.3");
x.t("allocated","initialization");
x.t("allocated","bind");
x.t("returned","rsslbind");
x.t("returned","application");
x.t("types","compression");
x.t("types","i.e");
x.t("rssl_conn_type_http","information");
x.t("added","reused");
x.t("10.2.3","pingtimeout");
x.t("hostname","local");
x.t("connected","client");
x.t("connected","rsslchannel");
x.t("client","required");
x.t("client","connection");
x.t("client","servers");
x.t("client","rssl_false");
x.t("client","settings");
x.t("client","preference");
x.t("client","applications");
x.t("client","server");
x.t("1,048,567","shared");
x.t("invalid","configuration");
x.t("notification","mechanism");
x.t("level","compression");
x.t("level","message");
x.t("drawn","upon");
x.t("fully","allocated");
x.t("fully","backward-compatible");
x.t("reused","until");
x.t("thomson","reuters");
x.t("rejects","connections");
x.t("outcome","negotiation");
x.t("user-created","information");
x.t("listening","socket");
x.t("buffers","available");
x.t("buffers","allowed");
x.t("buffers","different");
x.t("buffers","allocated");
x.t("buffers","added");
x.t("buffers","made");
x.t("buffers","maxoutputbuffers");
x.t("buffers","shared");
x.t("buffers","created");
x.t("buffers","used");
x.t("buffers","rsslchannel");
x.t("message","fragmentation");
x.t("message","size");
x.t("message","package");
x.t("numinputbuffers","number");
x.t("memory","segment");
x.t("option","information");
x.t("performing","operations");
x.t("upon","connected");
x.t("actual","major");
x.t("actual","negotiated");
x.t("actual","minor");
x.t("establish","connections");
x.t("made","available");
x.t("less","equal");
x.t("fragment","larger");
x.t("configuration","allow");
x.t("compressiontype","type");
x.t("compressiontype","compressionlevel");
x.t("value","passed");
x.t("value","intended");
x.t("value","lowest");
x.t("value","modified");
x.t("value","allowed");
x.t("value","may");
x.t("value","becomes");
x.t("value","shared");
x.t("value","setting");
x.t("value","rsslchannel");
x.t("componentversion","optional");
x.t("send","pageview");
x.t("send","heartbeats");
x.t("send","heartbeat");
x.t("compromise","speed");
x.t("forcibly","enables");
x.t("specific","tcp-based");
x.t("specific","options");
x.t("accepting","connections");
x.t("(arguments)","[r]");
x.t("connections","specified");
x.t("connections","clients");
x.t("connections","10.4.1");
x.t("connections","accepted");
x.t("connections","server");
x.t("process","client");
x.t("force","compression");
x.t("rsslserver","rsslaccept");
x.t("rsslserver","returned");
x.t("rsslserver","user-created");
x.t("rsslserver","i/o");
x.t("view","10.4");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("rssl","transport");
x.t("systems","multiple");
x.t("read","operation");
x.t("read","data");
x.t("maxoutputbuffers","guaranteedoutputbuffers");
x.t("maxoutputbuffers","maximum");
x.t("considered","invalid");
x.t("heartbeat","every");
x.t("heartbeat","messages");
x.t("backward-compatible","change");
x.t("rsslacceptoptions","details");
x.t("rsslacceptoptions","information");
x.t("rsslbindoptions","structure");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("larger","64k");
x.t("larger","buffer");
x.t("output","space");
x.t("output","buffers");
x.t("help","client");
x.t("major","version");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("internally","fragment");
x.t("information","combined");
x.t("information","refer");
x.t("information","list");
x.t("information","useful");
x.t("information","supported");
x.t("information","communicate");
x.t("information","truncated");
x.t("information","specific");
x.t("information","rssl");
x.t("information","becomes");
x.t("data","available");
x.t("data","compression");
x.t("data","reading");
x.t("data","buffer");
x.t("becomes","active");
x.t("becomes","available");
x.t("configure","equivalent");
x.t("rssl_conn_type_socket","rssl_conn_type_http");
x.t("optional","user-defined");
x.t("behind","standard");
x.t("defined","etc/services");
x.t("shared","input");
x.t("shared","memory");
x.t("shared","pool");
x.t("shared","buffer");
x.t("happens","error");
x.t("rssl_true","blocking");
x.t("rssl_true","clienttoserverpings");
x.t("rssl_true","compressiontype");
x.t("rssl_true","forcibly");
x.t("rssl_true","heartbeat");
x.t("rssl_true","shared");
x.t("timeout","rule");
x.t("timeout","value");
x.t("application","blocking");
x.t("application","channelsblocking");
x.t("application","level");
x.t("application","performing");
x.t("application","value");
x.t("application","read");
x.t("application","leverage");
x.t("application","i/o");
x.t("unavailable","equal");
x.t("values","connection");
x.t("values","compressionlevel");
x.t("values","less");
x.t("values","larger");
x.t("structure","tcpopts");
x.t("structure","members");
x.t("structure","member");
x.t("character","representation");
x.t("port","number");
x.t("forcecompression","option");
x.t("forcecompression","rssl_true");
x.t("deprecated","configure");
x.t("efficient","using");
x.t("efficient","reading");
x.t("64k","method");
x.t("64k","values");
x.t("64k","setting");
x.t("syssendbufsize","done");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("done","via");
x.t("note","rssl_conn_type_unidir_shmem");
x.t("note","considered");
x.t("protocol","type");
x.t("protocol","supported");
x.t("numeric","port");
x.t("applications","manage");
x.t("applications","enforces");
x.t("server\u2019s","lowest");
x.t("typically","require");
x.t("typically","recommended");
x.t("typically","major");
x.t("typically","minor");
x.t("copy","data");
x.t("prevents","application");
x.t("leverage","i/o");
x.t("work","application");
x.t("significant","i.e");
x.t("rsslioctl","values");
x.t("edition","rsslbindoptions");
x.t("package","discussed");
x.t("package","detailed");
x.t("created","size");
x.t("created","contain");
x.t("controls","maximum");
x.t("negotiated","client");
x.t("negotiated","value");
x.t("call","userspecptr");
x.t("preserved","stored");
x.t(".q=i","[r]");
x.t("service","name");
x.t("cards","populated");
x.t("used","blocking");
x.t("used","guaranteedoutputbuffers");
x.t("used","inaddr_loopback");
x.t("used","chapter");
x.t("used","connected");
x.t("used","rsslserver");
x.t("used","rssl_conn_type_socket");
x.t("used","negotiated");
x.t("used","rsslchannel");
x.t("wants","apply");
x.t("manage","information");
x.t("system","call");
x.t("pointer","application");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("setting","sets");
x.t("setting","independent");
x.t("setting","syssendbufsize");
x.t("using","cycles");
x.t("using","forcecompression");
x.t("containing","options");
x.t("a.async=1","a.src=g");
x.t("loopback","address");
x.t("allowable","values");
x.t("allowable","ping");
x.t("levels","refer");
x.t("i/o","operation");
x.t("i/o","notification");
x.t("i/o","prevents");
x.t("i/o","typically");
x.t("i/o","used");
x.t("sysrecvbufsize","prior");
x.t("sysrecvbufsize","sets");
x.t("googleanalyticsobject","[r]");
x.t("member","description");
x.t("performed","setting");
x.t("performed","server");
x.t("operations","until");
x.t("10.4.1.1","rsslbindoptions");
x.t("maxfragmentsize","bytes");
x.t("maxfragmentsize","maximum");
x.t("maxfragmentsize","buffers");
x.t("maxfragmentsize","maxoutputbuffers");
x.t("enforces","common");
x.t("rsslchannel","channel");
x.t("rsslchannel","writing");
x.t("rsslchannel","prior");
x.t("rsslchannel","structures");
x.t("rsslchannel","allowed");
x.t("rsslchannel","determining");
x.t("rsslchannel","transport");
x.t("rsslchannel","maxoutputbuffers");
x.t("rsslchannel","data");
x.t("rsslchannel","becomes");
x.t("rsslchannel","structure");
x.t("rsslchannel","typically");
x.t("rsslchannel","reading");
x.t("minor","version");
x.t("servicename","character");
x.t("buffer","required");
x.t("buffer","fragmentation");
x.t("buffer","default");
x.t("buffer","size");
x.t("buffer","smaller");
x.t("buffer","written");
x.t("buffer","created");
x.t("buffer","pool");
x.t("reading","writing");
x.t("reading","controls");
x.t("pool","locking");
x.t("pool","lock");
x.t("pool","remain");
x.t("pool","drawn");
x.t("pool","fully");
x.t("pool","buffers");
x.t("pool","shared");
x.t("pool","buffer");
x.t("sharedpoollock","rssl_true");
x.t("ping","timeout");
x.t("data-neutral","allows");
x.t("upa","component");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("server","creation");
x.t("server","required");
x.t("server","enabled");
x.t("server","uses");
x.t("server","shut");
x.t("server","connection");
x.t("server","rssl_false");
x.t("server","may");
x.t("server","client");
x.t("server","rejects");
x.t("server","actual");
x.t("server","force");
x.t("server","information");
x.t("server","applications");
x.t("server","wants");
x.t("seconds","information");
x.t("content","minorversion");
x.t("content","protocoltype");
x.t("content","majorversion");
x.t("majorversion","provided");
x.t("majorversion","specifies");
x.t("majorversion","rsslchannel");
}
