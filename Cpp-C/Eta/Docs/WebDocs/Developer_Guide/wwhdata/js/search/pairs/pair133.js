function FileData_Pairs(x)
{
x.t("active","client");
x.t("active","actual");
x.t("m.parentnode.insertbefore","window");
x.t("blocking","manner");
x.t("blocking","rssl_true");
x.t("blocking","i/o");
x.t("manner","rsslchannel");
x.t("available","via");
x.t("available","pingtimeout");
x.t("available","write");
x.t("available","supported");
x.t("available","componentversion");
x.t("available","across");
x.t("available","rsslchannel");
x.t("combined","component");
x.t("negotiation","refer");
x.t("negotiation","provided");
x.t("negotiation","process");
x.t("creation","tcp-based");
x.t("udp-based","multicast");
x.t("library","connection");
x.t("intends","exchange");
x.t("indicated","server");
x.t("tcpopts.tcp_nodelay","table");
x.t("coupling","rsslchannel");
x.t("rsslconnectoptions","structure");
x.t("version","increase");
x.t("version","string");
x.t("version","length");
x.t("version","information");
x.t("version","protocol");
x.t("compression","negotiation");
x.t("compression","types");
x.t("compression","client");
x.t("compression","negotiated");
x.t("every","pingtimeout");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","rsslconnectoptions");
x.t("table","userspecptr");
x.t("table","guaranteedoutputbuffers");
x.t("table","shmemopts");
x.t("table","replaced");
x.t("table","pingtimeout");
x.t("table","tcpopts");
x.t("table","tcp_nodelay");
x.t("table","numinputbuffers");
x.t("table","majorversion");
x.t("description","blocking");
x.t("refer","tcpopts.tcp_nodelay");
x.t("refer","table");
x.t("refer","section");
x.t("multicastopts","substructure");
x.t("mechanism","enables");
x.t("mechanism","allow");
x.t("layer","data-neutral");
x.t("microsoft","wininet");
x.t("enabled","information");
x.t("user","created");
x.t("until","i/o");
x.t("unified","segmented");
x.t("platforms","encrypted");
x.t("platforms","depend");
x.t("guaranteed","number");
x.t("guaranteed","output");
x.t("handled","single");
x.t("userspecptr","pointer");
x.t("userspecptr","rsslchannel");
x.t("necessary","work");
x.t("provided","via");
x.t("provided","help");
x.t("extension","transport");
x.t("modified","transport");
x.t("type","compression");
x.t("type","connection");
x.t("type","client");
x.t("type","specific");
x.t("type","content");
x.t("wininet","system");
x.t("introduction","incompatible");
x.t("change","negotiation");
x.t("change","extension");
x.t("change","transport");
x.t("time","objectname");
x.t("time","outcome");
x.t("time","information");
x.t("sequential","input");
x.t("connection","compression");
x.t("connection","type");
x.t("connection","time");
x.t("connection","protocoltype");
x.t("connection","chapter");
x.t("connection","types");
x.t("connection","rejected");
x.t("connection","rsslconnect");
x.t("connection","establish");
x.t("connection","value");
x.t("connection","becomes");
x.t("connection","10.3.2");
x.t("thumb","send");
x.t("a=s.createelement","(o)");
x.t("exceeds","maximum");
x.t("new","date");
x.t("guaranteedoutputbuffers","guaranteed");
x.t("details","refer");
x.t("single","network");
x.t("connectioninfo.unified.servicename","configure");
x.t("document","script");
x.t("includes","unified");
x.t("backward","compatible");
x.t("watch","list");
x.t("pageview","transport");
x.t("initialization","time");
x.t("initialization","rsslchannel");
x.t("http","connection");
x.t("http","encrypted");
x.t("shmemopts","substructure");
x.t("list","associated");
x.t("outbound","connection");
x.t("complete","initialization");
x.t("complete","control");
x.t("rssl_conn_type_seq_mcast","information");
x.t("api","component");
x.t("api","user-defined");
x.t("api","edition");
x.t("network","configuration");
x.t("network","read");
x.t("increase","associated");
x.t("recommended","application");
x.t("tcp-based","connection");
x.t("tcp-based","socket");
x.t("substructure","containing");
x.t("url","tunneling");
x.t("rssl_conn_type_encrypted","information");
x.t("writing","complete");
x.t("writing","data");
x.t("writing","using");
x.t("via","minorversion");
x.t("via","protocoltype");
x.t("via","majorversion");
x.t("rssl_conn_type_reliable_mcast","rssl_conn_type_seq_mcast");
x.t("desired","ping");
x.t("operation","completed");
x.t("operation","input");
x.t("functionality","refer");
x.t("settings","used");
x.t("name","pass");
x.t("stored","userspecptr");
x.t("creating","connection");
x.t("creating","outbound");
x.t("returning","blocking");
x.t("enables","application");
x.t("connectiontype","specifies");
x.t("clients","desired");
x.t("10.12","protocoltype");
x.t("10.3","creating");
x.t("cycles","perform");
x.t("perform","necessary");
x.t("component","version");
x.t("bytes","handled");
x.t("window","document");
x.t("prior","returning");
x.t("10.4.3","connectioninfo");
x.t("parameters","specific");
x.t("replaced","hostname");
x.t("compatible","change");
x.t("rule","thumb");
x.t("useful","coupling");
x.t("completed","blocking");
x.t("appended","behind");
x.t("standard","transport");
x.t("pingtimeout","clients");
x.t("pingtimeout","value");
x.t("pingtimeout","seconds");
x.t("encrypted","connection");
x.t("encrypted","http");
x.t("allows","flow");
x.t("allow","efficient");
x.t("write","output");
x.t("string","appended");
x.t("10.8","hostname");
x.t("incompatible","change");
x.t("minorversion","provided");
x.t("minorversion","information");
x.t("minorversion","minor");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("addition","rsslconnect");
x.t("connectioninfo","network");
x.t("flow","type");
x.t("input","buffers");
x.t("auto","send");
x.t("tcpopts","substructure");
x.t("rssl_conn_type_unidir_shmem","information");
x.t("supported","compression");
x.t("supported","platforms");
x.t("supported","transport");
x.t("supported","windows");
x.t("equivalent","functionality");
x.t("tcp_nodelay","deprecated");
x.t("members","table");
x.t("members","function");
x.t("members","structure");
x.t("space","available");
x.t("segmented","network");
x.t("depend","microsoft");
x.t("options","refer");
x.t("options","settings");
x.t("protocoltype","indicated");
x.t("protocoltype","provided");
x.t("protocoltype","client");
x.t("protocoltype","protocol");
x.t("protocoltype","rsslchannel");
x.t("control","returned");
x.t("number","sequential");
x.t("number","bytes");
x.t("number","buffers");
x.t("communicate","details");
x.t("function","complete");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("length","exceeds");
x.t("maximum","supported");
x.t("maximum","number");
x.t("truncated","compressiontype");
x.t("multicast-based","connection");
x.t("determining","desired");
x.t("user-defined","component");
x.t("user-defined","information");
x.t("may","change");
x.t("may","performed");
x.t("specifies","type");
x.t("specifies","connection");
x.t("exchange","connection");
x.t("9.5.1","multicastopts");
x.t("9.5.1","minorversion");
x.t("9.5.1","servicename");
x.t("chapter","transport");
x.t("objectname","optional");
x.t("detailed","view");
x.t("10.3.2.1","rsslconnectoptions");
x.t("transport","layer");
x.t("transport","api");
x.t("transport","preserved");
x.t("transport","package");
x.t("returned","rsslconnect");
x.t("returned","application");
x.t("types","udp-based");
x.t("types","available");
x.t("types","compression");
x.t("types","refer");
x.t("types","information");
x.t("types","described");
x.t("section","10.12");
x.t("section","10.4.3");
x.t("section","10.8");
x.t("section","9.5.1");
x.t("socket","connection");
x.t("allocated","initialization");
x.t("match","protocoltype");
x.t("rssl_conn_type_http","rssl_conn_type_encrypted");
x.t("rejected","rsslchannel");
x.t("notification","mechanism");
x.t("client","intends");
x.t("client","enabled");
x.t("client","specifies");
x.t("client","performed");
x.t("client","server");
x.t("hostname","deprecated");
x.t("hostname","servicename");
x.t("outcome","negotiation");
x.t("fully","backward");
x.t("tunneling","option");
x.t("performing","operations");
x.t("buffers","allocated");
x.t("buffers","made");
x.t("buffers","allocate");
x.t("numinputbuffers","number");
x.t("option","valid");
x.t("memory","based");
x.t("rsslconnect","function");
x.t("rsslconnect","10.3.2.1");
x.t("rsslconnect","information");
x.t("multicast","connection");
x.t("connectioninfo.unified.address","configure");
x.t("actual","negotiated");
x.t("establish","creation");
x.t("windows","platforms");
x.t("made","available");
x.t("compressiontype","type");
x.t("configuration","connectiontype");
x.t("configuration","parameters");
x.t("configuration","information");
x.t("componentversion","optional");
x.t("value","modified");
x.t("value","may");
x.t("value","becomes");
x.t("value","negotiated");
x.t("value","rsslchannel");
x.t("allocate","reading");
x.t("send","pageview");
x.t("send","heartbeat");
x.t("specific","options");
x.t("specific","configuration");
x.t("(arguments)","[r]");
x.t("process","client");
x.t("view","10.3");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("read","operation");
x.t("read","data");
x.t("valid","http");
x.t("heartbeat","every");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("output","space");
x.t("output","buffers");
x.t("major","version");
x.t("help","client");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","available");
x.t("data","guaranteed");
x.t("data","controls");
x.t("optional","user-defined");
x.t("optional","object");
x.t("behind","standard");
x.t("information","combined");
x.t("information","refer");
x.t("information","connection");
x.t("information","includes");
x.t("information","watch");
x.t("information","useful");
x.t("information","supported");
x.t("information","communicate");
x.t("information","truncated");
x.t("information","specific");
x.t("information","becomes");
x.t("information","using");
x.t("information","rsslchannel");
x.t("configure","equivalent");
x.t("becomes","active");
x.t("becomes","available");
x.t("rssl_conn_type_socket","rssl_conn_type_http");
x.t("rssl_true","blocking");
x.t("timeout","value");
x.t("timeout","typically");
x.t("shared","memory");
x.t("application","addition");
x.t("application","performing");
x.t("application","value");
x.t("application","read");
x.t("application","leverage");
x.t("application","i/o");
x.t("structure","members");
x.t("structure","member");
x.t("efficient","reading");
x.t("described","detail");
x.t("deprecated","information");
x.t("deprecated","configure");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("protocol","type");
x.t("protocol","client");
x.t("prevents","application");
x.t("typically","recommended");
x.t("typically","major");
x.t("typically","used");
x.t("typically","minor");
x.t("leverage","i/o");
x.t("work","application");
x.t("applications","manage");
x.t("based","connection");
x.t("edition","rsslconnectoptions");
x.t("negotiated","client");
x.t("negotiated","value");
x.t("negotiated","server");
x.t("controls","maximum");
x.t("preserved","stored");
x.t("created","information");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("used","blocking");
x.t("used","rssl_conn_type_reliable_mcast");
x.t("used","rule");
x.t("used","rssl_conn_type_unidir_shmem");
x.t("used","rssl_conn_type_socket");
x.t("used","rsslchannel");
x.t("system","library");
x.t("manage","information");
x.t("pointer","application");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("using","connectioninfo.unified.servicename");
x.t("using","cycles");
x.t("using","connectioninfo.unified.address");
x.t("containing","tcp-based");
x.t("containing","multicast-based");
x.t("containing","shared");
x.t("a.async=1","a.src=g");
x.t("i/o","operation");
x.t("i/o","notification");
x.t("i/o","prevents");
x.t("i/o","typically");
x.t("i/o","used");
x.t("across","supported");
x.t("pass","url");
x.t("googleanalyticsobject","[r]");
x.t("member","description");
x.t("operations","until");
x.t("performed","connection");
x.t("performed","client");
x.t("associated","introduction");
x.t("associated","connection");
x.t("associated","fully");
x.t("rsslchannel","user");
x.t("rsslchannel","writing");
x.t("rsslchannel","prior");
x.t("rsslchannel","determining");
x.t("rsslchannel","transport");
x.t("rsslchannel","returned");
x.t("rsslchannel","becomes");
x.t("rsslchannel","typically");
x.t("rsslchannel","i/o");
x.t("rsslchannel","reading");
x.t("minor","version");
x.t("reading","writing");
x.t("reading","data");
x.t("servicename","configuration");
x.t("servicename","deprecated");
x.t("data-neutral","allows");
x.t("ping","timeout");
x.t("10.3.2","creating");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("server","connection");
x.t("server","may");
x.t("server","match");
x.t("server","information");
x.t("server","applications");
x.t("detail","table");
x.t("majorversion","provided");
x.t("majorversion","major");
x.t("majorversion","information");
x.t("content","minorversion");
x.t("content","protocoltype");
x.t("content","majorversion");
x.t("object","name");
x.t("seconds","information");
}
