function FileData_Pairs(x)
{
x.t("example","batch");
x.t("example","assumes");
x.t("example","omits");
x.t("example","demonstrates");
x.t("example","function");
x.t("example","chapter");
x.t("example","following");
x.t("m.parentnode.insertbefore","window");
x.t(".l=1","new");
x.t("create","populate");
x.t("create","ua-55718642-4");
x.t("closemsg.msgbase.containertype","rssl_dt_element_list");
x.t("elementlist.flags","rssl_elf_has_standard_data");
x.t("rsslencodeelementlistcomplete","&enciter");
x.t("flag","rsslclosemsg");
x.t("container","using");
x.t("rsslencodearrayentry","&enciter");
x.t("batch","flag");
x.t("batch","close");
x.t("batch","payload");
x.t("batch","status");
x.t("batch","processed");
x.t("batch","messages");
x.t("batch","closes");
x.t("batch","reissue");
x.t("close","three");
x.t("close","message");
x.t("close","encoding");
x.t("populate","close");
x.t("payload","type");
x.t("payload","closemsg.flags");
x.t("payload","complete");
x.t("type","element");
x.t("retval","rsslencodeelementlistcomplete");
x.t("retval","rsslencodearraycomplete");
x.t("retval","rsslencodemsgcomplete");
x.t("retval","rsslencodemsginit");
x.t("retval","rsslencodearrayinit");
x.t("retval","rsslencodeelemententrycomplete");
x.t("retval","rsslencodeelemententryinit");
x.t("retval","rsslencodeelementlistinit");
x.t("response","delivered");
x.t("rsslarray","streamidlist");
x.t("rsslint","streamid");
x.t("closemsg.flags","rssl_clmf_has_batch");
x.t("&elementlist","batch");
x.t("a=s.createelement","(o)");
x.t("streamid","rsslencodearrayentry");
x.t("streamid","streamid");
x.t("streamid","indicates");
x.t("streamid","begin");
x.t("streamid","closemsg.msgbase.streamid");
x.t("streamid","encode");
x.t("streamid","contains");
x.t("assumes","encode");
x.t("closemsg","rssl_init_close_msg");
x.t("streamidlist","rssl_init_array");
x.t("require","element");
x.t("rssl_dt_int","streamidlist.itemlength");
x.t("default","variable-length");
x.t("new","date");
x.t("element","list");
x.t("element","entry");
x.t("element","name");
x.t("element","rssl_init_element_entry");
x.t("element","encoding");
x.t("advanced","messaging");
x.t("document","script");
x.t("pageview","transport");
x.t("indicates","batch");
x.t("omits","error");
x.t("list","closemsg.msgbase.containertype");
x.t("list","retval");
x.t("list","complete");
x.t("status","response");
x.t("element.datatype","rssl_dt_array");
x.t("rssl_dmt_market_price","rssl_clmf_has_batch");
x.t("rssl_clmf_has_batch","payload");
x.t("rssl_clmf_has_batch","provider");
x.t("complete","element");
x.t("complete","message");
x.t("complete","finish");
x.t("api","edition");
x.t("iterator","properly");
x.t("initialized","create");
x.t("entry","retval");
x.t("entry","streamid");
x.t("rsslencodearraycomplete","&enciter");
x.t("rsslencodemsgcomplete","&enciter");
x.t("&streamidlist","encode");
x.t("delivered","streamid");
x.t("delivered","using");
x.t("processed","closes");
x.t("streamids","element");
x.t("streamids","streamidlist.primitivetype");
x.t("demonstrates","encode");
x.t("alerted","batch");
x.t("rsslencodemsginit","&enciter");
x.t("name",":streamidlist");
x.t("rsslencodearrayinit","&enciter");
x.t("perform","error");
x.t("provider","application");
x.t("rsslencodeelemententrycomplete","&enciter");
x.t("window","document");
x.t("variable-length","encoding");
x.t("encoded","payload");
x.t("rsslmsg","&closemsg");
x.t("array","retval");
x.t("array","streamids");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("three","streams");
x.t("stream","simplicity");
x.t("auto","send");
x.t("begin","message");
x.t("functions","retval");
x.t("error","handling");
x.t("rssl_dt_element_list","currently-unused");
x.t("messages","13.7.6");
x.t("rssl_init_element_entry","rsslarray");
x.t("rssl_init_array","elementlist.flags");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("streamidlist.primitivetype","rssl_dt_int");
x.t("chapter","advanced");
x.t("closemsg.msgbase.streamid","batch");
x.t("transport","api");
x.t("closes","require");
x.t("closes","stream");
x.t("handling","appropriate");
x.t("handling","applications");
x.t("properly","initialized");
x.t("13.7","batch");
x.t(":streamidlist","encoded");
x.t(":streamidlist","three");
x.t(":streamidlist","element.name.length");
x.t(":streamidlist","element.name.data");
x.t("code","example");
x.t("rsslelemententry","element");
x.t("message","batch");
x.t("message","result");
x.t("message","sent");
x.t("message","encoding");
x.t("closemsg.msgbase.domaintype","rssl_dmt_market_price");
x.t("currently-unused","streamid");
x.t("rsslencodeelemententryinit","&enciter");
x.t("rsslstatusmsg","delivered");
x.t("simplicity","following");
x.t("send","pageview");
x.t("rsslelementlist","elementlist");
x.t("specific","encode");
x.t("(arguments)","[r]");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("streamidlist.itemlength","default");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("messaging","concepts");
x.t("result","rsslstatusmsg");
x.t("appropriate","example");
x.t("&closemsg","rsslelementlist");
x.t("rssl_init_element_list","rsslelemententry");
x.t("nested","container");
x.t("&streamid","list");
x.t("&streamid","encode");
x.t("rssl_true","retval");
x.t("rssl_true","complete");
x.t("rssl_true",":streamidlist");
x.t("rssl_true","code");
x.t("reissue","rsslclosemsg");
x.t("application","alerted");
x.t("element.name.length","element.datatype");
x.t("finish","encoding");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("rssl_elf_has_standard_data","encode");
x.t("applications","perform");
x.t("edition","batch");
x.t("&enciter","&elementlist");
x.t("&enciter","&streamidlist");
x.t("&enciter","rsslmsg");
x.t("&enciter","&streamid");
x.t("&enciter","rssl_true");
x.t("&enciter","&element");
x.t("rsslencodeelementlistinit","&enciter");
x.t("13.7.6","batch");
x.t(".q=i","[r]");
x.t("following","example");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("using","streamid");
x.t("using","specific");
x.t("a.async=1","a.src=g");
x.t("googleanalyticsobject","[r]");
x.t("&element","rsslint");
x.t("rsslclosemsg","close");
x.t("rsslclosemsg","closemsg");
x.t("element.name.data",":streamidlist");
x.t("rssl_dt_array","encode");
x.t("encode","batch");
x.t("encode","iterator");
x.t("encode","entry");
x.t("encode","array");
x.t("encode","functions");
x.t("encode","nested");
x.t("sent","using");
x.t("rssl_init_close_msg","closemsg.msgbase.domaintype");
x.t("elementlist","rssl_init_element_list");
x.t("encoding","example");
x.t("encoding","retval");
x.t("encoding","element");
x.t("encoding","array");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("streams","close");
x.t("streams","message");
x.t("contains",":streamidlist");
x.t("concepts","13.7");
}
