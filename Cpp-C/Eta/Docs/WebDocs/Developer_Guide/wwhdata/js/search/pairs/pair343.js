function FileData_Pairs(x)
{
x.t("example","element");
x.t("example","illustrates");
x.t("example","function");
x.t("example","chapter");
x.t("example","following");
x.t("passed","retval");
x.t("passed","order");
x.t("m.parentnode.insertbefore","window");
x.t("else","series");
x.t("version","information");
x.t("ask","optimized");
x.t("ask","elemententry.datatype");
x.t("ask","rssl_dt_real_8rb");
x.t("def","assumes");
x.t(".l=1","new");
x.t("create","elementsetdefdb");
x.t("create","ua-55718642-4");
x.t("create","entries");
x.t("elementsetdef.count","three");
x.t("init","encoding");
x.t("set-defined","data");
x.t("required","defs");
x.t("&elementsetdefdb","element");
x.t("&elementsetdefdb","definition");
x.t("elementlist.flags","rssl_elf_has_set_id");
x.t("rssl_dt_time","base");
x.t("rsslencodeelementlistcomplete","&enciter");
x.t("rssllocalelementsetdefdb","elementsetdefdb");
x.t("rsslretcodeinfo","(retval)");
x.t("rssl_init_real","rssltime");
x.t("rsslencodeelemententry","&enciter");
x.t("cleared","first");
x.t("field","definition");
x.t("roll","back");
x.t("necessary","definitions");
x.t("sample","encodes");
x.t("populate","definition");
x.t("populate","entries");
x.t("enciter","already");
x.t("rsslseries.containertype","rssl_dt_element_list");
x.t("retval","rsslencodeelementlistcomplete");
x.t("retval","rsslretcodeinfo");
x.t("retval","rsslencodeelemententry");
x.t("retval","rsslencodeseriescomplete");
x.t("retval","rsslencodeseriesinit");
x.t("retval","rsslencodeseriesentrycomplete");
x.t("retval","rsslencodeseriessetdefscomplete");
x.t("retval","rsslencodelocalelementsetdefdb");
x.t("retval","rsslencodeseriesentryinit");
x.t("retval","rsslencodeelementlistinit");
x.t("type","passed");
x.t("type","specified");
x.t("type","third");
x.t("type","second");
x.t("type","first");
x.t("rsslencodeseriescomplete","&enciter");
x.t("time","optimized");
x.t("time","elemententry.datatype");
x.t("time","rssl_dt_time_3");
x.t("rsslint","rssluint");
x.t("rssluint","2112");
x.t("&elementlist","&elementsetdefdb");
x.t("a=s.createelement","(o)");
x.t("assumes","enciter");
x.t("rssl_srf_has_set_defs","rsslseries.containertype");
x.t("rsslencodeseriesinit","error");
x.t("rsslencodeseriesinit","&enciter");
x.t("back","success");
x.t("text","printf");
x.t("text","s\\n");
x.t("elementlist.setid","element");
x.t("primitive","type");
x.t("element","list");
x.t("element","entry");
x.t("element","definition");
x.t("element","name");
x.t("new","date");
x.t("rssl_false","print");
x.t("&rsslreal","encode");
x.t("displaytemplate","elemententry.datatype");
x.t("document","script");
x.t("printf","error");
x.t("pageview","transport");
x.t("elementsetdef.setid","definition");
x.t("list","flags");
x.t("list","definition");
x.t("list","using");
x.t("rsslencodeseriesentrycomplete","&enciter");
x.t("complete","retval");
x.t("complete","elemententry.name.data");
x.t("complete","series");
x.t("complete","elemententry.name.length");
x.t("complete","encoding");
x.t("flags","setid");
x.t("api","edition");
x.t("entry","retval");
x.t("entry","definition");
x.t("entry","elemententry.name.data");
x.t("entry","rssltime.hour");
x.t("entry","matches");
x.t("entry","rsslseries");
x.t("entry","rsslreal.hint");
x.t("entry","encode");
x.t("entry","contains");
x.t("slot","corresponds");
x.t("elementsetdefentries","array");
x.t("elementsetdefentries","[3]");
x.t("false","roll");
x.t("227","encode");
x.t("specified","first");
x.t("definition","elementsetdef.count");
x.t("definition","required");
x.t("definition","rssllocalelementsetdefdb");
x.t("definition","elementsetdef.setid");
x.t("definition","complete");
x.t("definition","slot");
x.t("definition","entry");
x.t("definition","definition");
x.t("definition","encoded");
x.t("definition","three");
x.t("definition","database");
x.t("definition","elementsetdef.pentries");
x.t("definition","above");
x.t("definition","definitions");
x.t("definition","entries");
x.t("definition","encode");
x.t("definition","elemententry.name.length");
x.t("name","type");
x.t("name","third");
x.t("name","second");
x.t("name","first");
x.t("name","content");
x.t("22801","encode");
x.t("populated","structure");
x.t("populated","buffer");
x.t("corresponds","definition");
x.t("rssl_dt_uint","base");
x.t("elementsetdefdb","element");
x.t("elementsetdefdb","rsslelementsetdef");
x.t("elemententry.name.data","ask");
x.t("elemententry.name.data","displaytemplate");
x.t("elemententry.name.data","bid");
x.t("elemententry.name.data","trade");
x.t("base","primitive");
x.t("window","document");
x.t("illustrates","encode");
x.t("completed","sample");
x.t("standard","data");
x.t("rssl_init_series","create");
x.t("rsslelementsetdef","elementsetdef");
x.t("optimized","rsslreal");
x.t("optimized","rssltime");
x.t("rsslclearlocalelementsetdefdb","&elementsetdefdb");
x.t("determine","success");
x.t("rsslseriesentry","seriesentry");
x.t("rssl_init_time","rsslint");
x.t("setid","defined");
x.t("verifies","correct");
x.t("arrays","rsslelementsetdefentry");
x.t("elementetdefdb.definitions","[10]");
x.t("rsslseries.flags","rssl_srf_has_set_defs");
x.t("encoded","elementlist.flags");
x.t("encoded","next");
x.t("encoded","above");
x.t("encoded","series");
x.t("array","containing");
x.t("array","position");
x.t("string","value");
x.t("local","element");
x.t("local","definition");
x.t("rsslreal.value","227");
x.t("rsslreal.value","22801");
x.t("third","field");
x.t("third","entry");
x.t("third","definition");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("three","element");
x.t("three","entries");
x.t("contain","def");
x.t("second","element");
x.t("second","entry");
x.t("second","definition");
x.t("auto","send");
x.t("begin","encoding");
x.t("store","return");
x.t("error","text");
x.t("error","condition");
x.t("error","encountered");
x.t("rsslelementsetdefentry","elementsetdefentries");
x.t("[3]","bid");
x.t("rssl_dt_element_list","retval");
x.t("next","encoding");
x.t("rssltime.hour","rssltime.minute");
x.t("first","element");
x.t("first","entry");
x.t("first","definition");
x.t("first","rsslclearlocalelementsetdefdb");
x.t("first","standard");
x.t("rsslencodeseriessetdefscomplete","&enciter");
x.t("11.6.3.8","element");
x.t("&rsslseries","rssl_ret_success");
x.t("rssl_init_element_entry","rsslreal");
x.t("&rssltime","encode");
x.t("function","retval");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("defs","populated");
x.t("elemententry.datatype","rssl_dt_time");
x.t("elemententry.datatype","rssl_dt_uint");
x.t("elemententry.datatype","rssl_dt_real");
x.t("bid","elemententry.datatype");
x.t("bid","rsslreal");
x.t("bid","rssl_dt_real");
x.t("(retval)","else");
x.t("(retval)","retval");
x.t("chapter","data");
x.t("rsslencodelocalelementsetdefdb","&enciter");
x.t("detailed","view");
x.t("transport","api");
x.t("[10]","elementsetdef");
x.t("match","definition");
x.t("switch","success");
x.t("code","example");
x.t("rsslreal","ask");
x.t("rsslreal","rssl_init_real");
x.t("rsslreal","rsslreal");
x.t("rsslreal","trade");
x.t("return","value");
x.t("rsslelemententry","elemententry");
x.t("expects","local");
x.t("rssl_elf_has_set_id","rssl_elf_has_set_data");
x.t("encoder","verifies");
x.t("database","encoded");
x.t("database","11.6.3.8");
x.t("database","rsslseries");
x.t("database","call");
x.t("database","containing");
x.t("database","encoding");
x.t("database","contains");
x.t("encodes","additional");
x.t("elementsetdef","create");
x.t("elementsetdef","begin");
x.t("rssl_dt_real_8rb","contains");
x.t("elementsetdef.pentries","elementsetdefentries");
x.t("message","return");
x.t("message","data");
x.t("seriesentry","rssl_init_series_entry");
x.t("matches","name");
x.t("rsslseries","rssl_init_series");
x.t("rsslseries","database");
x.t("rsslseries","rsslseries");
x.t("rssl_dt_time_3","contains");
x.t("failure","rsslseries.flags");
x.t("additional","standard");
x.t("value","text");
x.t("value","false");
x.t("value","determine");
x.t("value","string");
x.t("send","pageview");
x.t("already","populated");
x.t("rsslelementlist","elementlist");
x.t("(arguments)","[r]");
x.t("condition","switch");
x.t("view","11.6");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("trade","time");
x.t("encountered","rsslencodeseriesinit");
x.t("rssl","encoder");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("rssl_elf_has_set_data","rssl_elf_has_standard_data");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","element");
x.t("data","complete");
x.t("data","entry");
x.t("data","standard");
x.t("data","encoded");
x.t("data","database");
x.t("data","message");
x.t("data","defined");
x.t("data","package");
x.t("data","11.6.3");
x.t("rssl_dt_real","base");
x.t("rssl_dt_real","contains");
x.t("information","store");
x.t("rssl_ret_success","error");
x.t("correct","element");
x.t("correct","function");
x.t("&rssluint","complete");
x.t("11.6","definitions");
x.t("rssl_init_element_list","rsslelemententry");
x.t("rssl_true","retval");
x.t("rssl_true","begin");
x.t("rssl_true","code");
x.t("rsslencodeseriesentryinit","&enciter");
x.t("defined","rssl");
x.t("defined","data");
x.t("rssltime.minute","rssltime.second");
x.t("successful","rsslseriesentry");
x.t("structure","cleared");
x.t("print","message");
x.t("s\\n","rsslretcodetostring");
x.t("above","retval");
x.t("above","encoding");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("rssl_elf_has_standard_data","elementlist.setid");
x.t("rssl_rh_exponent_2","rsslreal.value");
x.t("&seriesentry","element");
x.t("edition","element");
x.t("&enciter","&elementsetdefdb");
x.t("&enciter","&elementlist");
x.t("&enciter","&rsslseries");
x.t("&enciter","rssl_true");
x.t("&enciter","&seriesentry");
x.t("&enciter","&elemententry");
x.t("elemententry","rssl_init_element_entry");
x.t("call","correct");
x.t("rsslencodeelementlistinit","&enciter");
x.t("order","match");
x.t("rssl_rh_exponent_4","rsslreal.value");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","example");
x.t("rsslreal.hint","rssl_rh_exponent_2");
x.t("rsslreal.hint","rssl_rh_exponent_4");
x.t("rssltime.second","encode");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("containing","necessary");
x.t("containing","definitions");
x.t("2112","expects");
x.t("using","definition");
x.t("a.async=1","a.src=g");
x.t("rssltime","populate");
x.t("rssltime","rssl_init_time");
x.t("rssltime","rssltime");
x.t("series","init");
x.t("series","complete");
x.t("series","entry");
x.t("series","contain");
x.t("series","portion");
x.t("portion","encoding");
x.t("11.6.3","definition");
x.t("googleanalyticsobject","[r]");
x.t("definitions","passed");
x.t("definitions","set-defined");
x.t("definitions","populate");
x.t("definitions","array");
x.t("rsslretcodetostring","(retval)");
x.t("position","elementetdefdb.definitions");
x.t("success","rssl_false");
x.t("success","failure");
x.t("success","value");
x.t("encode","element");
x.t("encode","standard");
x.t("encode","third");
x.t("encode","second");
x.t("encode","first");
x.t("encode","defined");
x.t("entries","retval");
x.t("entries","definition");
x.t("entries","arrays");
x.t("entries","encoding");
x.t("buffer","version");
x.t("rssl_init_series_entry","rsslelementlist");
x.t("elementlist","rssl_init_element_list");
x.t("&elemententry","&rsslreal");
x.t("&elemententry","&rssltime");
x.t("&elemententry","&rssluint");
x.t("encoding","example");
x.t("encoding","completed");
x.t("encoding","local");
x.t("encoding","begin");
x.t("encoding","defined");
x.t("encoding","successful");
x.t("encoding","series");
x.t("encoding","entries");
x.t("encoding","content");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("contains","ask");
x.t("contains","element");
x.t("contains","bid");
x.t("contains","trade");
x.t("content","type");
x.t("content","retval");
x.t("elemententry.name.length","name");
}
