function FileData_Pairs(x)
{
x.t("m.parentnode.insertbefore","window");
x.t("provide","content");
x.t("available","connection");
x.t("indicated","rssl_ret_end_of_container");
x.t("version","rssldecodeiterator");
x.t("version","typically");
x.t("clear","rssldecodeiterator");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","describes");
x.t("table","rssldecodeiterator");
x.t("describes","functions");
x.t("description","rsslcleardecodeiterator");
x.t("refer","section");
x.t("refer","content");
x.t("required","proper");
x.t("rsslbuffer.data","refer");
x.t("rsslbuffer.data","settings");
x.t("synchronization","content");
x.t("container","indicated");
x.t("container","perform");
x.t("cleared","rsslsetdecodeiteratorbuffer");
x.t("rsslsetdecodeiteratorbuffer","associates");
x.t("until","end");
x.t("necessary","synchronization");
x.t("necessary","decoding");
x.t("associates","rssldecodeiterator");
x.t("connection","applications");
x.t("a=s.createelement","(o)");
x.t("new","date");
x.t("document","script");
x.t("pageview","transport");
x.t("proper","functionality");
x.t("api","edition");
x.t("iterator","decoding");
x.t("iterator","reuse");
x.t("decoded","rsslbuffer.length");
x.t("name","description");
x.t("functionality","cleared");
x.t("settings","ensure");
x.t("performance","purposes");
x.t("rsslbuffer.length","number");
x.t("bytes","contained");
x.t("rsslfinishdecodeentries","decoding");
x.t("skip","past");
x.t("perform","necessary");
x.t("window","document");
x.t("continue","chapter");
x.t("sets","rwf");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("functions","function");
x.t("functions","rssldecodeiterator");
x.t("auto","send");
x.t("members","required");
x.t("members","necessary");
x.t("space","rsslsetdecodeiteratorrwfversion");
x.t("decoding","provide");
x.t("decoding","continue");
x.t("decoding","process");
x.t("decoding","semantics");
x.t("decoding","readies");
x.t("decoding","conventions");
x.t("decoding","content");
x.t("number","bytes");
x.t("function","name");
x.t("function","skip");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("clears","members");
x.t("9.5.1","rsslfinishdecodeentries");
x.t("chapter","encoding");
x.t("transport","api");
x.t("section","9.5.1");
x.t("end","container");
x.t("ensure","decoding");
x.t("9.3","decoding");
x.t("rsslsetdecodeiteratorrwfversion","sets");
x.t("rsslcleardecodeiterator","clears");
x.t("send","pageview");
x.t("rsslbuffer","decode");
x.t("(arguments)","[r]");
x.t("process","typically");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("decode","rsslbuffer.data");
x.t("runs","until");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("purposes","members");
x.t("9.3.2","functions");
x.t("rssldecodeiterator","table");
x.t("rssldecodeiterator","decoding");
x.t("rssldecodeiterator","function");
x.t("rssldecodeiterator","rsslbuffer");
x.t("rssldecodeiterator","9.3.2");
x.t("rssldecodeiterator","appropriate");
x.t("rssldecodeiterator","utility");
x.t("rssldecodeiterator","following");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("appropriate","rwf");
x.t("semantics","rssldecodeiterator");
x.t("utility","functions");
x.t("reuse","clear");
x.t("beyond","contained");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("rssl_ret_end_of_container","function");
x.t("typically","available");
x.t("typically","runs");
x.t("applications","refer");
x.t("edition","functions");
x.t(".q=i","[r]");
x.t("following","table");
x.t("contained","rsslbuffer.data");
x.t("contained","buffer");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("remaining","entries");
x.t("a.async=1","a.src=g");
x.t("rwf","version");
x.t("googleanalyticsobject","[r]");
x.t("past","remaining");
x.t("readies","iterator");
x.t("buffer","space");
x.t("entries","container");
x.t("conventions","9.3");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("content","iterator");
x.t("content","decoded");
x.t("content","performance");
x.t("content","beyond");
x.t("encoding","decoding");
}
