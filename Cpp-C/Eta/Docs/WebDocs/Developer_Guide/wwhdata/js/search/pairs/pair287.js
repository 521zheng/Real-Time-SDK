function FileData_Pairs(x)
{
x.t("example","rsslmap");
x.t("example","demonstrates");
x.t("example","function");
x.t("example","may");
x.t("example","chapter");
x.t("example","section");
x.t("example","encodes");
x.t("example","additional");
x.t("example","following");
x.t("passed","key");
x.t("passed","null");
x.t("passed","pointer");
x.t("m.parentnode.insertbefore","window");
x.t("rsslmap.containertype","rssl_dt_field_list");
x.t("rsslmap.containertype","encode");
x.t("else","mapinit");
x.t("&entrykeyuint","complete");
x.t("&entrykeyuint","encode");
x.t("parameter","passed");
x.t("parameter","false");
x.t("parameter","true");
x.t("version","information");
x.t("clear","mapentry.action");
x.t("clear","begin");
x.t(".l=1","new");
x.t("create","single");
x.t("create","ua-55718642-4");
x.t("init","done");
x.t("refer","example");
x.t("key","primitive");
x.t("key","third");
x.t("key","length");
x.t("key","rsslmapentry");
x.t("key","value");
x.t("key","approx");
x.t("key","names");
x.t("summary","data");
x.t("action","type");
x.t("action","delete");
x.t("rsslretcodeinfo","(retval)");
x.t("rsslencodemapentryinit","&enciter");
x.t("pencfieldlist","rsslbuffer");
x.t("void","parameter");
x.t("container","types");
x.t("container","using");
x.t("container","encoding");
x.t("pencuint-","length");
x.t("pencuint-","data");
x.t("rsslclearmapentry","&mapentry");
x.t("rsslfieldlist","re-populating");
x.t("rsslfieldlist","fieldlist");
x.t("rsslfieldlist","values");
x.t("rsslfieldlist","reuse");
x.t("field","list");
x.t("field","entries");
x.t("mapentry.action","rssl_mpea_delete_entry");
x.t("mapentry.action","rssl_mpea_add_entry");
x.t("mapentry.action","rssl_mpea_update_entry");
x.t("cleared","clearing");
x.t("roll","back");
x.t("-----","continue");
x.t("sample","illustrates");
x.t("rsslmap","11.3.3.7");
x.t("rsslmap","containing");
x.t("rsslmap","encoding");
x.t("type","passed");
x.t("type","example");
x.t("type","pre-encoded");
x.t("type","match");
x.t("populate","total");
x.t("populate","map");
x.t("populate","maps");
x.t("enciter","already");
x.t("retval","rsslretcodeinfo");
x.t("retval","rsslencodemapentryinit");
x.t("retval","rsslencodefieldlistcomplete");
x.t("retval","rsslencodemapinit");
x.t("retval","rsslencodemapcomplete");
x.t("retval","rsslencodefieldlistinit");
x.t("retval","rsslencodemapentry");
x.t("retval","rsslencodemapentrycomplete");
x.t("retval","rsslencodemapsummarydatacomplete");
x.t("payload","need");
x.t("payload","data");
x.t("delete","action");
x.t("delete","retval");
x.t("delete","actions");
x.t("pencfieldlist-","length");
x.t("pencfieldlist-","data");
x.t("total","count");
x.t("rssluint","entrykeyuint");
x.t("unknown","mapentry.action");
x.t("11.3.3.7","rsslmapentry");
x.t("a=s.createelement","(o)");
x.t("count","hint");
x.t("count","rsslmap.totalcounthint");
x.t("assumes","enciter");
x.t("back","success");
x.t("back","encoding");
x.t("text","printf");
x.t("text","s\\n");
x.t("primitive","value");
x.t("new","date");
x.t("rssl_false","print");
x.t("single","rsslmapentry");
x.t("document","script");
x.t("printf","error");
x.t("rsslencodefieldlistcomplete","&enciter");
x.t("pageview","transport");
x.t("keyprimitivetype","containertype");
x.t("list","type");
x.t("list","fieldlist.flags");
x.t("list","using");
x.t("list","encoding");
x.t("need","clear");
x.t("need","ensure");
x.t("appropriately","cleared");
x.t("emptied","rsslclearmapentry");
x.t("add","action");
x.t("expect","summary");
x.t("complete","map");
x.t("complete","nested");
x.t("complete","encoding");
x.t("mapentry.enckey.length","pencuint-");
x.t("actions","payload");
x.t("api","edition");
x.t("entry","delete");
x.t("entry","count");
x.t("entry","pre-encoded");
x.t("entry","encoded");
x.t("entry","rsslmapentry");
x.t("entry","non");
x.t("entry","encode");
x.t("pre-encoded","key");
x.t("pre-encoded","payload");
x.t("pre-encoded","data");
x.t("pre-encoded","buffer");
x.t("pencuint","rsslbuffer");
x.t("rssl_mpf_has_summary_data","rssl_mpf_has_total_count_hint");
x.t("false","roll");
x.t("false","retval");
x.t("re-populating","values");
x.t("enckey","properly");
x.t("rsslencodemapinit","type");
x.t("rsslencodemapinit","retval");
x.t("rsslencodemapinit","error");
x.t("rsslencodemapinit","note");
x.t("rsslencodemapinit","&enciter");
x.t("true","finalize");
x.t("demonstrates","error");
x.t("name","values");
x.t("definition","data");
x.t("rssl_dt_uint","populate");
x.t("approximate","expected");
x.t("populated","mapentry.enckey.length");
x.t("populated","mapentry.encdata.length");
x.t("populated","buffer");
x.t("&fieldlist","fieldlist.flags");
x.t("&fieldlist","rssl_ret_success");
x.t("bytes","definition");
x.t("rsslclearfieldlist","&fieldlist");
x.t("window","document");
x.t("illustrates","encoding");
x.t("prior","rsslencodemapinit");
x.t("prior","call");
x.t("fieldlist","rssl_init_field_list");
x.t("indicate","summary");
x.t("determine","success");
x.t("continue","encoding");
x.t("rssl_mpea_delete_entry","entrykeyuint");
x.t("encoded","rsslfieldlist");
x.t("encoded","delete");
x.t("encoded","add");
x.t("encoded","length");
x.t("encoded","rsslmap.flags");
x.t("encoded","update");
x.t("map","assumes");
x.t("map","list");
x.t("map","entry");
x.t("map","rsslclearfieldlist");
x.t("map","structure");
x.t("map","encoding");
x.t("rssl_mpf_has_total_count_hint","populate");
x.t("11.3.1.6","----");
x.t("&mapentry","&entrykeyuint");
x.t("&mapentry","mapentry.action");
x.t("&mapentry","null");
x.t("mapentry.encdata.length","pencfieldlist-");
x.t("third","entry");
x.t("third","map");
x.t("string","value");
x.t("empty","delete");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("three","rsslmapentry");
x.t("second","entry");
x.t("second","map");
x.t("auto","send");
x.t("simplify","example");
x.t("begin","encoding");
x.t("store","return");
x.t("functions","clear");
x.t("functions","begin");
x.t("failed","success");
x.t("error","text");
x.t("error","handling");
x.t("error","condition");
x.t("error","encountered");
x.t("first","entry");
x.t("first","map");
x.t("containertype","rsslmap.containertype");
x.t("rsslencodemapcomplete","&enciter");
x.t("function","simplify");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("rsslencodefieldlistinit","&enciter");
x.t("length","unknown");
x.t("length","populated");
x.t("length","mapentry.encdata.data");
x.t("length","data");
x.t("length","mapentry.enckey.data");
x.t("rsslencodemapentry","&enciter");
x.t("may","correspond");
x.t("hint","approximate");
x.t("hint","encoded");
x.t("(retval)","else");
x.t("(retval)","retval");
x.t("rssl_mpea_add_entry","assuming");
x.t("chapter","data");
x.t("rsslmapentry","rsslfieldlist");
x.t("rsslmapentry","need");
x.t("rsslmapentry","appropriately");
x.t("rsslmapentry","values");
x.t("rsslmapentry","mapentry");
x.t("rsslmapentry","itself");
x.t("rsslmapentry","encoding");
x.t("detailed","view");
x.t("transport","api");
x.t("handling","initial");
x.t("handling","omitted");
x.t("rssl_init_field_list","rssluint");
x.t("match","rsslmap.containertype");
x.t("section","11.3.1.6");
x.t("properly","emptied");
x.t("properly","populated");
x.t("clearing","ensure");
x.t("types","11.3.3");
x.t("initial","encode");
x.t("omitted","performed");
x.t("expected","summary");
x.t("expected","entry");
x.t("switch","success");
x.t("correspond","actual");
x.t("rssl_flf_has_standard_data","retval");
x.t("code","example");
x.t("return","value");
x.t("encodes","three");
x.t("100","bytes");
x.t("100","rssl_ret_success");
x.t("message","return");
x.t("actual","name");
x.t("mapentry.encdata.data","pencfieldlist-");
x.t("ensure","rsslmapentry");
x.t("ensure","encdata");
x.t("null","pre-encoded");
x.t("null","third");
x.t("failure","expect");
x.t("----","complete");
x.t("value","text");
x.t("value","false");
x.t("value","determine");
x.t("value","string");
x.t("value","second");
x.t("value","encdata");
x.t("additional","error");
x.t("rssl_init_map_entry","rsslfieldlist");
x.t("rssl_mpea_update_entry","entrykeyuint");
x.t("send","pageview");
x.t("already","populated");
x.t("specific","encode");
x.t("rsslbuffer","contains");
x.t("(arguments)","[r]");
x.t("condition","switch");
x.t("fieldlist.flags","rssl_flf_has_standard_data");
x.t("view","11.3");
x.t("11.3","container");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("rsslmap.keyprimitivetype","rssl_dt_uint");
x.t("encountered","rsslencodemapinit");
x.t("11.3.3","rsslmap");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("rsslmap.flags","rssl_mpf_has_summary_data");
x.t("rssl_dt_field_list","rsslmap.keyprimitivetype");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","init");
x.t("data","key");
x.t("data","void");
x.t("data","field");
x.t("data","retval");
x.t("data","total");
x.t("data","pre-encoded");
x.t("data","first");
x.t("data","length");
x.t("data","properly");
x.t("data","assuming");
x.t("data","package");
x.t("data","approx");
x.t("information","store");
x.t("rssl_ret_success","-----");
x.t("rssl_ret_success","error");
x.t("nested","container");
x.t("rsslencodemapentrycomplete","&enciter");
x.t("assuming","pencfieldlist");
x.t("assuming","pencuint");
x.t("values","example");
x.t("values","summary");
x.t("values","indicate");
x.t("values","rsslmapentry");
x.t("successful","create");
x.t("reuse","entry");
x.t("mapentry","rssl_init_map_entry");
x.t("structure","prior");
x.t("maps","keyprimitivetype");
x.t("print","message");
x.t("s\\n","rsslretcodetostring");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("note","key");
x.t("done","rsslencodemapinit");
x.t("non","pre-encoded");
x.t("itself","retval");
x.t("edition","rsslmapentry");
x.t("call","rsslencodemapinit");
x.t("&enciter","&fieldlist");
x.t("&enciter","&mapentry");
x.t("&enciter","&rsslmap");
x.t("&enciter","success");
x.t("&rsslmap","100");
x.t("enciterator","map");
x.t("encdata","enckey");
x.t("encdata","empty");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","sample");
x.t("used","example");
x.t("rsslencodemapsummarydatacomplete","&enciter");
x.t("contained","field");
x.t("mapentry.enckey.data","pencuint-");
x.t("pointer","key");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("containing","rsslfieldlist");
x.t("containing","encoded");
x.t("approx","encoded");
x.t("approx","100");
x.t("using","specific");
x.t("using","enciterator");
x.t("finalize","encoding");
x.t("a.async=1","a.src=g");
x.t("entrykeyuint","void");
x.t("entrykeyuint","retval");
x.t("entrykeyuint","encode");
x.t("googleanalyticsobject","[r]");
x.t("performed","populate");
x.t("names","used");
x.t("rsslmap.totalcounthint","begin");
x.t("rsslretcodetostring","(retval)");
x.t("success","parameter");
x.t("success","retval");
x.t("success","rssl_false");
x.t("success","complete");
x.t("success","false");
x.t("success","second");
x.t("success","first");
x.t("success","code");
x.t("success","failure");
x.t("success","value");
x.t("encode","entry");
x.t("encode","functions");
x.t("encode","function");
x.t("encode","expected");
x.t("encode","nested");
x.t("encode","contained");
x.t("buffer","version");
x.t("buffer","containing");
x.t("mapinit","encoding");
x.t("entries","refer");
x.t("encoding","example");
x.t("encoding","summary");
x.t("encoding","field");
x.t("encoding","rsslmap");
x.t("encoding","retval");
x.t("encoding","prior");
x.t("encoding","map");
x.t("encoding","failed");
x.t("encoding","successful");
x.t("encoding","success");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("update","action");
x.t("contains","pre-encoded");
}
