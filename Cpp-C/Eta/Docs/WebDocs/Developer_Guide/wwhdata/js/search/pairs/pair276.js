function FileData_Pairs(x)
{
x.t("example","example");
x.t("example","shows");
x.t("example","demonstrates");
x.t("example","function");
x.t("example","may");
x.t("example","chapter");
x.t("example","section");
x.t("example","rsslelementlist");
x.t("example","following");
x.t("four","rsslelemententry");
x.t("included","elemlist.flags");
x.t("passed","null");
x.t("complex","element");
x.t("m.parentnode.insertbefore","window");
x.t("else","elementlistinit");
x.t("parameter","passed");
x.t("parameter","false");
x.t("parameter","true");
x.t("pattern","used");
x.t("version","information");
x.t("clear","elementry.name.data");
x.t(".l=1","new");
x.t("create","single");
x.t("create","ua-55718642-4");
x.t("rssl_dt_time","retval");
x.t("rsslencodeelementlistcomplete","&enciter");
x.t("rsslretcodeinfo","(retval)");
x.t("rsslencodeelemententry","&enciter");
x.t("void","parameter");
x.t("container","type");
x.t("container","types");
x.t("container","elementry.name.length");
x.t("container","using");
x.t("container","encoding");
x.t("millisecond","rssltime");
x.t("pencuint-","length");
x.t("pencuint-","data");
x.t("blank","rsslreal");
x.t("blank","elementry.name.length");
x.t("rsslfieldlist","container");
x.t("rsslfieldlist","populate");
x.t("rsslfieldlist","fieldlist");
x.t("shows","encoding");
x.t("cache","elemlist.elementlistnum");
x.t("cleared","clearing");
x.t("field","list");
x.t("field","entries");
x.t("&elemlist","rssl_ret_success");
x.t("roll","back");
x.t("777","rsslfieldlist");
x.t("-----","continue");
x.t("type","pattern");
x.t("type","rsslfieldlist");
x.t("type","populate");
x.t("type","second");
x.t("type","rsslelemententry");
x.t("populate","element");
x.t("populate","elementlistnum");
x.t("populate","hour");
x.t("populate","encode");
x.t("enciter","already");
x.t("retval","rsslencodeelementlistcomplete");
x.t("retval","rsslretcodeinfo");
x.t("retval","rsslencodeelemententry");
x.t("retval","rsslencodefieldlistcomplete");
x.t("retval","rsslencodeelemententrycomplete");
x.t("retval","rsslencodefieldlistinit");
x.t("retval","rsslencodeelemententryinit");
x.t("retval","rsslencodeelementlistinit");
x.t("time","populate");
x.t("rssluint","type");
x.t("rssluint","third");
x.t("however","additional");
x.t("a=s.createelement","(o)");
x.t("primitive","type");
x.t("primitive","elementry.name.length");
x.t("primitive","rssltime");
x.t("needed","cache");
x.t("assumes","enciter");
x.t("back","success");
x.t("back","encoding");
x.t("text","printf");
x.t("text","s\\n");
x.t("new","date");
x.t("element","list");
x.t("element","need");
x.t("element","entry");
x.t("element","re-populating");
x.t("element","elementry.name.data");
x.t("element","names");
x.t("rssl_false","print");
x.t("single","rsslelemententry");
x.t("document","script");
x.t("printf","error");
x.t("&elementry","&rssltime");
x.t("&elementry","elementry.name.data");
x.t("&elementry","null");
x.t("&elementry","encode");
x.t("rsslencodefieldlistcomplete","&enciter");
x.t("pageview","transport");
x.t("list","assumes");
x.t("list","fieldlist.flags");
x.t("list","structure");
x.t("list","using");
x.t("list","encoding");
x.t("rssl_elf_has_element_list_info","populate");
x.t("info","needed");
x.t("need","clear");
x.t("need","ensure");
x.t("appropriately","cleared");
x.t("emptied","rsslclearelemententry");
x.t("elementry","rssl_init_element_entry");
x.t("complete","nested");
x.t("complete","elementlist");
x.t("complete","encoding");
x.t("api","edition");
x.t("entry","container");
x.t("entry","blank");
x.t("entry","field");
x.t("entry","primitive");
x.t("entry","name");
x.t("entry","preencoded");
x.t("entry","rsslelemententry");
x.t("entry","used");
x.t("entry","rssltime");
x.t("entry","encode");
x.t("entry","encoding");
x.t("pre-encoded","elementry.name.length");
x.t("pre-encoded","data");
x.t("pre-encoded","buffer");
x.t("elemlist.flags","rssl_elf_has_standard_data");
x.t("pencuint","rsslbuffer");
x.t("due","clearing");
x.t("false","roll");
x.t("false","retval");
x.t("re-populating","values");
x.t("sure","approximate");
x.t("true","finalize");
x.t("demonstrates","error");
x.t("demonstrates","encode");
x.t("name","datatype");
x.t("name","values");
x.t("populated","elementry.encdata.length");
x.t("populated","buffer");
x.t("minute","second");
x.t("rssl_dt_uint","assuming");
x.t("approximate","max");
x.t("&fieldlist","rssl_ret_success");
x.t("rsslencodeelemententrycomplete","&enciter");
x.t("window","document");
x.t("prior","call");
x.t("prior","rsslencodeelementlistinit");
x.t("fieldlist","rssl_init_field_list");
x.t("standard","name");
x.t("standard","data");
x.t("indicate","standard");
x.t("determine","success");
x.t("continue","encoding");
x.t("encoded","rssluint");
x.t("encoded","elementlistnum");
x.t("elementlistnum","included");
x.t("elementlistnum","info");
x.t("elementlistnum","values");
x.t("stack","allocate");
x.t("11.3.1.6","----");
x.t("third","element");
x.t("third","encodes");
x.t("string","value");
x.t("rsslclearelemententry","&elementry");
x.t("empty","due");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("second","millisecond");
x.t("second","element");
x.t("second","encodes");
x.t("datatype","value");
x.t("datatype","information");
x.t("auto","send");
x.t("simplify","example");
x.t("begin","complex");
x.t("begin","encoding");
x.t("store","return");
x.t("preencoded","buffer");
x.t("functions","begin");
x.t("failed","success");
x.t("error","text");
x.t("error","handling");
x.t("error","condition");
x.t("error","encountered");
x.t("elemlist.elementlistnum","begin");
x.t("elementry.datatype","rssl_dt_time");
x.t("elementry.datatype","rssl_dt_uint");
x.t("elementry.datatype","rssl_dt_real");
x.t("first","element");
x.t("first","encodes");
x.t("rssl_init_element_entry","stack");
x.t("&rssltime","second");
x.t("function","however");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("elementlistinit","encoding");
x.t("length","retval");
x.t("length","elementry.encdata.data");
x.t("length","data");
x.t("max","encoding");
x.t("rsslencodefieldlistinit","&enciter");
x.t("may","correspond");
x.t("(retval)","else");
x.t("(retval)","retval");
x.t("chapter","data");
x.t("detailed","view");
x.t("transport","api");
x.t("handling","initial");
x.t("handling","omitted");
x.t("rssl_init_field_list","first");
x.t("properly","emptied");
x.t("properly","populated");
x.t("clearing","retval");
x.t("clearing","ensure");
x.t("section","11.3.1.6");
x.t("types","11.3.2");
x.t("initial","encode");
x.t("omitted","simplify");
x.t("switch","success");
x.t("correspond","actual");
x.t("rssl_flf_has_standard_data","retval");
x.t("code","example");
x.t("rsslelemententry","example");
x.t("rsslelemententry","need");
x.t("rsslelemententry","appropriately");
x.t("rsslelemententry","elementry");
x.t("rsslelemententry","values");
x.t("rsslelemententry","reuse");
x.t("rsslelemententry","itself");
x.t("rsslelemententry","encoding");
x.t("rsslreal","primitive");
x.t("rsslreal","value");
x.t("return","value");
x.t("elementry.name.data","element1");
x.t("elementry.name.data","element2");
x.t("elementry.name.data","element3");
x.t("elementry.name.data","element4");
x.t("elementry.name.length","elementry.datatype");
x.t("elementry.name.length","fieldentry.datatype");
x.t("encodes","four");
x.t("encodes","blank");
x.t("encodes","rsslfieldlist");
x.t("encodes","entry");
x.t("encodes","pre-encoded");
x.t("message","return");
x.t("actual","name");
x.t("ensure","rsslelemententry");
x.t("ensure","encdata");
x.t("rsslencodeelemententryinit","&enciter");
x.t("elementry.encdata.data","pencuint-");
x.t("null","pre-encoded");
x.t("null","third");
x.t("null","fourth");
x.t("null","encdata");
x.t("fourth","element");
x.t("fourth","entry");
x.t("fourth","encodes");
x.t("failure","retval");
x.t("fieldentry.datatype","rssl_dt_field_list");
x.t("----","complete");
x.t("value","text");
x.t("value","false");
x.t("value","determine");
x.t("value","string");
x.t("value","fourth");
x.t("value","data");
x.t("additional","error");
x.t("allocate","time");
x.t("send","pageview");
x.t("rsslelementlist","encodes");
x.t("rsslelementlist","11.3.2.5");
x.t("rsslelementlist","encoding");
x.t("already","populated");
x.t("rsslbuffer","length");
x.t("specific","encode");
x.t("(arguments)","[r]");
x.t("condition","switch");
x.t("fieldlist.flags","rssl_flf_has_standard_data");
x.t("view","11.3");
x.t("11.3","container");
x.t("11.3.2","rsslelementlist");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("encountered","rsslencodeelementlistinit");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("rssl_dt_field_list","begin");
x.t("11.3.2.5","rsslelemententry");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","void");
x.t("data","populate");
x.t("data","encoded");
x.t("data","properly");
x.t("data","rsslelemententry");
x.t("data","package");
x.t("information","element");
x.t("information","store");
x.t("rssl_ret_success","-----");
x.t("rssl_ret_success","error");
x.t("rssl_dt_real","void");
x.t("assuming","pencuint");
x.t("elementry.encdata.length","pencuint-");
x.t("nested","container");
x.t("values","indicate");
x.t("values","first");
x.t("values","rsslelemententry");
x.t("values","used");
x.t("successful","create");
x.t("reuse","entry");
x.t("structure","prior");
x.t("print","message");
x.t("s\\n","rsslretcodetostring");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("note","element");
x.t("rssl_elf_has_standard_data","rssl_elf_has_element_list_info");
x.t("element1","primitive");
x.t("itself","retval");
x.t("edition","rsslelemententry");
x.t("call","rsslencodeelementlistinit");
x.t("rsslencodeelementlistinit","retval");
x.t("rsslencodeelementlistinit","error");
x.t("rsslencodeelementlistinit","note");
x.t("rsslencodeelementlistinit","&enciter");
x.t("&enciter","&elemlist");
x.t("&enciter","&elementry");
x.t("&enciter","&fieldlist");
x.t("&enciter","success");
x.t("element2","pre-encoded");
x.t("encdata","empty");
x.t("encdata","properly");
x.t("enciterator","element");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","example");
x.t("used","example");
x.t("used","encode");
x.t("element3","blank");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("containing","encoded");
x.t("hour","minute");
x.t("element4","container");
x.t("using","specific");
x.t("using","enciterator");
x.t("finalize","encoding");
x.t("a.async=1","a.src=g");
x.t("rssltime","777");
x.t("rssltime","type");
x.t("rssltime","primitive");
x.t("rssltime","rssltime");
x.t("googleanalyticsobject","[r]");
x.t("names","elementlistnum");
x.t("rsslretcodetostring","(retval)");
x.t("success","parameter");
x.t("success","rssl_false");
x.t("success","complete");
x.t("success","false");
x.t("success","code");
x.t("success","failure");
x.t("success","value");
x.t("encode","container");
x.t("encode","element");
x.t("encode","entry");
x.t("encode","functions");
x.t("encode","function");
x.t("encode","fourth");
x.t("encode","rsslelementlist");
x.t("encode","nested");
x.t("buffer","version");
x.t("buffer","containing");
x.t("entries","example");
x.t("elementlist","encoding");
x.t("encoding","example");
x.t("encoding","complex");
x.t("encoding","field");
x.t("encoding","retval");
x.t("encoding","element");
x.t("encoding","sure");
x.t("encoding","prior");
x.t("encoding","standard");
x.t("encoding","failed");
x.t("encoding","length");
x.t("encoding","successful");
x.t("encoding","success");
x.t("a.src=g","m.parentnode.insertbefore");
}
