function  WWHBookData_AddTOCEntries(P)
{
var A=P.fN("Chapter 1 Transport API Developers Guide Introduction","0");
var B=A.fN("1.1 About this Manual","1");
B=A.fN("1.2 Audience","2");
B=A.fN("1.3 Programming Language","3");
B=A.fN("1.4 Acronyms and Abbreviations","4");
B=A.fN("1.5 References","5");
B=A.fN("1.6 Documentation Feedback","6");
B=A.fN("1.7 Document Conventions","7");
var C=B.fN("1.7.1 Typographic","8");
C=B.fN("1.7.2 Diagrams","9");
B=A.fN("1.8 What\u2019s New in this Document","10");
A=P.fN("Chapter 2 Product Description","11");
B=A.fN("2.1 What is the Transport API?","12");
B=A.fN("2.2 Transport API Features","13");
C=B.fN("2.2.1 General Capabilities","14");
C=B.fN("2.2.2 Consumer Applications","15");
C=B.fN("2.2.3 Provider Applications: Interactive","16");
C=B.fN("2.2.4 Provider Applications: Non-Interactive","17");
B=A.fN("2.3 Performance and Feature Comparison","18");
B=A.fN("2.4 Functionality: Which API to Choose?","19");
C=B.fN("2.4.1 General Capability Comparison","20");
C=B.fN("2.4.2 Layer-Specific Capability Comparison","21");
A=P.fN("Chapter 3 Consumers and Providers","22");
B=A.fN("3.1 Overview","23");
B=A.fN("3.2 Consumers","24");
C=B.fN("3.2.1 Subscriptions: Request/Response","25");
C=B.fN("3.2.2 Batches","26");
C=B.fN("3.2.3 Views","27");
C=B.fN("3.2.4 Pause and Resume","28");
var D=C.fN("3.2.4.1 Pause / Resume Use Case 1: Back-end Processing","29");
D=C.fN("3.2.4.2 Pause / Resume Use Case 2: Display Applications","30");
C=B.fN("3.2.5 Symbol Lists","31");
D=C.fN("3.2.5.1 Requesting Symbol List Data Streams","32");
D=C.fN("3.2.5.2 Server Symbol Lists","33");
C=B.fN("3.2.6 Posting","34");
D=C.fN("3.2.6.1 Local Publication","35");
D=C.fN("3.2.6.2 Contribution/Inserts","36");
C=B.fN("3.2.7 Generic Message","37");
C=B.fN("3.2.8 Private Streams","38");
B=A.fN("3.3 Providers","39");
C=B.fN("3.3.1 Interactive Providers","40");
D=C.fN("3.3.1.1 Request /Response","41");
D=C.fN("3.3.1.2 Posts","42");
D=C.fN("3.3.1.3 Generic Messages","43");
D=C.fN("3.3.1.4 Private Streams","44");
D=C.fN("3.3.1.5 Tunnel Streams (Available Only in ETA Reactor and EMA)","45");
C=B.fN("3.3.2 Non-Interactive Providers","46");
A=P.fN("Chapter 4 System View","47");
B=A.fN("4.1 System Architecture Overview","48");
B=A.fN("4.2 Advanced Distribution Server (ADS)","49");
B=A.fN("4.3 Advanced Data Hub (ADH)","50");
B=A.fN("4.4 Elektron","51");
B=A.fN("4.5 Data Feed Direct","52");
B=A.fN("4.6 Internet Connctivity via HTTP and HTTPS","53");
B=A.fN("4.7 Direct Connect","54");
A=P.fN("Chapter 5 Model and Package Overviews","55");
B=A.fN("5.1 Transport API Models","56");
C=B.fN("5.1.1 Open Message Model (OMM)","56#999038");
C=B.fN("5.1.2 Reuters Wire Format (RWF)","57");
C=B.fN("5.1.3 Domain Message Model","58");
D=C.fN("5.1.3.1 Reuters Domain Model","59");
D=C.fN("5.1.3.2 User-Defined Domain Model","60");
B=A.fN("5.2 Packages","61");
C=B.fN("5.2.1 Transport Package","62");
C=B.fN("5.2.2 Data Package","63");
C=B.fN("5.2.3 Message Package","64");
A=P.fN("Chapter 6 Building an OMM Consumer","65");
B=A.fN("6.1 Overview","66");
B=A.fN("6.2 Establish Network Communication","67");
B=A.fN("6.3 Perform Login Process","68");
B=A.fN("6.4 Obtain Source Directory Information","69");
B=A.fN("6.5 Load or Download Necessary Dictionary Information","70");
B=A.fN("6.6 Issue Requests and/or Post Information","71");
B=A.fN("6.7 Log Out and Shut Down","72");
B=A.fN("6.8 Additional Consumer Details","73");
A=P.fN("Chapter 7 Building an OMM Interactive Provider","74");
B=A.fN("7.1 Overview","75");
B=A.fN("7.2 Establish Network Communication","76");
B=A.fN("7.3 Perform Login Process","77");
B=A.fN("7.4 Provide Source Directory Information","78");
B=A.fN("7.5 Provide or Download Necessary Dictionaries","79");
B=A.fN("7.6 Handle Requests and Post Messages","80");
B=A.fN("7.7 Disconnect Consumers and Shut Down","81");
B=A.fN("7.8 Additional Interactive Provider Details","82");
A=P.fN("Chapter 8 Building an OMM NIP","83");
B=A.fN("8.1 Overview","84");
B=A.fN("8.2 Establish Network Communication","85");
B=A.fN("8.3 Perform Login Process","86");
B=A.fN("8.4 Perform Dictionary Download","87");
B=A.fN("8.5 Provide Source Directory Information","88");
B=A.fN("8.6 Provide Content","89");
B=A.fN("8.7 Log Out and Shut Down","90");
B=A.fN("8.8 Additional NIP Details","91");
A=P.fN("Chapter 9 Encoding and Decoding Conventions","92");
B=A.fN("9.1 Concepts","93");
C=B.fN("9.1.1 Data Types","94");
C=B.fN("9.1.2 Composite Pattern of Data Types","95");
B=A.fN("9.2 Encoding Semantics","96");
C=B.fN("9.2.1 Init and Complete Suffixes","97");
C=B.fN("9.2.2 The Encode Iterator: RsslEncodeIterator","98");
D=C.fN("9.2.2.1 RsslEncodeIterator Functions","99");
D=C.fN("9.2.2.2 RsslEncodeIterator: Basic Use Example","100");
C=B.fN("9.2.3 Content Roll Back with Example","101");
B=A.fN("9.3 Decoding Semantics and RsslDecodeIterator","102");
C=B.fN("9.3.1 The Decode Iterator: RsslDecodeIterator","103");
C=B.fN("9.3.2 Functions for use with RsslDecodeIterator","104");
C=B.fN("9.3.3 RsslDecodeIterator: Basic Use Example","105");
B=A.fN("9.4 Return Code Values","106");
B=A.fN("9.5 Versioning","107");
C=B.fN("9.5.1 Protocol Versioning","108");
C=B.fN("9.5.2 Library Versioning","109");
A=P.fN("Chapter 10 Transport Package Detailed View","110");
B=A.fN("10.1 Concepts","111");
C=B.fN("10.1.1 Transport Types","112");
D=C.fN("10.1.1.1 Socket Transport","113");
D=C.fN("10.1.1.2 Reliable Multicast Transport","114");
D=C.fN("10.1.1.3 Sequenced Multicast Transport","115");
C=B.fN("10.1.2 RSSL Channel Structure","116");
D=C.fN("10.1.2.1 RsslChannel Enumerated Name Values","117");
D=C.fN("10.1.2.2 RSSL Connection Enumerated Names Values","118");
C=B.fN("10.1.3 RSSL Server Structure","119");
C=B.fN("10.1.4 Transport Error Handling","120");
C=B.fN("10.1.5 General Transport Return Codes","121");
C=B.fN("10.1.6 Application Lifecycle","122");
B=A.fN("10.2 Initializing and Uninitializing the Transport","123");
C=B.fN("10.2.1 RSSL Initialization and Uninitialization Functions","124");
C=B.fN("10.2.2 Initialization Reference Counting with Example","125");
C=B.fN("10.2.3 Transport Locking Models","126");
B=A.fN("10.3 Creating the Connection","127");
C=B.fN("10.3.1 Network Topologies","128");
D=C.fN("10.3.1.1 TCP-based Networks","129");
D=C.fN("10.3.1.2 Multicast-based Networks: Unified","130");
D=C.fN("10.3.1.3 Multicast-based Networks: Segmented","131");
C=B.fN("10.3.2 Creating the Outbound Connection: rsslConnect","132");
D=C.fN("10.3.2.1 RsslConnectOptions Structure Members","133");
D=C.fN("10.3.2.2 RsslConnectOptions.connectionInfo Options","134");
D=C.fN("10.3.2.3 RsslConnectOptions.tcpOpts Options","135");
D=C.fN("10.3.2.4 RsslConnectOptions.multicastOpts","136");
D=C.fN("10.3.2.5 RsslConnectOptions.shmemOpts Options","137");
D=C.fN("10.3.2.6 RsslConnectOptions.seqMulticastOpts Options","138");
D=C.fN("10.3.2.7 RsslConnectOptions Utility Function","139");
C=B.fN("10.3.3 rsslConnect Outbound Connection Creation Example","140");
C=B.fN("10.3.4 Tunneling Connection Keep Alive","141");
B=A.fN("10.4 Server Creation and Accepting Connections","142");
C=B.fN("10.4.1 Creating a Listening Socket","142#1006013");
D=C.fN("10.4.1.1 RsslBindOptions Structure Members","143");
D=C.fN("10.4.1.2 RsslBindOptions.tcpOpts Structure Members","144");
D=C.fN("10.4.1.3 RsslBindOptions Utility Function","145");
D=C.fN("10.4.1.4 rsslBind Listening Socket Connection Creation Example","146");
C=B.fN("10.4.2 Accepting Connection Requests","147");
D=C.fN("10.4.2.1 RsslAcceptOptions Structure Member","148");
D=C.fN("10.4.2.2 RsslAcceptOptions Utility Function","149");
D=C.fN("10.4.2.3 rsslAccept Accepting Connection Example","150");
C=B.fN("10.4.3 Compression Support","151");
D=C.fN("10.4.3.1 Compression Types","152");
D=C.fN("10.4.3.2 Compression Level","153");
D=C.fN("10.4.3.3 Compression Threshold","154");
B=A.fN("10.5 Channel Initialization","155");
C=B.fN("10.5.1 rsslInitChannel Function","156");
C=B.fN("10.5.2 RsslInProgInfo Structure","157");
C=B.fN("10.5.3 Calling rsslInitChannel","158");
C=B.fN("10.5.4 rsslInitChannel Return Codes","159");
C=B.fN("10.5.5 rsslInitChannel Example","160");
B=A.fN("10.6 Reading Data","161");
C=B.fN("10.6.1 rsslRead Function","162");
C=B.fN("10.6.2 rsslRead Return Codes","163");
C=B.fN("10.6.3 rsslRead Example","164");
C=B.fN("10.6.4 rsslReadEx Function","165");
D=C.fN("10.6.4.1 RsslReadOutArgs Options","166");
D=C.fN("10.6.4.2 RsslReadFlagsOut Enumerations","167");
D=C.fN("10.6.4.3 RsslReadInArgs Option","168");
B=A.fN("10.7 Writing Data: Overview","169");
B=A.fN("10.8 Writing Data: Obtaining a Buffer","170");
C=B.fN("10.8.1 Buffer Management Functions","171");
C=B.fN("10.8.2 rsslGetBuffer Return Values","172");
B=A.fN("10.9 Writing Data to a Buffer","173");
C=B.fN("10.9.1 rsslWrite Function","174");
C=B.fN("10.9.2 rsslWrite Flag Enumeration Values","175");
C=B.fN("10.9.3 rsslWriteEx Function","176");
D=C.fN("10.9.3.1 RsslWriteInArgs","177");
D=C.fN("10.9.3.2 RsslWriteOutArgs","178");
D=C.fN("10.9.3.3 RsslWriteFlagsIn","179");
C=B.fN("10.9.4 Compression","180");
C=B.fN("10.9.5 Fragmentation","181");
C=B.fN("10.9.6 rsslWrite Return Codes","182");
C=B.fN("10.9.7 rsslGetBuffer and rsslWrite Example","183");
B=A.fN("10.10 Managing Outbound Queues","184");
C=B.fN("10.10.1 Ordering Queued Data: rsslWrite Priorities","185");
D=C.fN("10.10.1.1 Priority Ordering","186");
D=C.fN("10.10.1.2 Priority Value Enumerations","187");
C=B.fN("10.10.2 rsslFlush Function","188");
C=B.fN("10.10.3 rsslFlush Return Codes","189");
C=B.fN("10.10.4 rsslFlush Example","190");
B=A.fN("10.11 Packing Additional Data into a Buffer","191");
C=B.fN("10.11.1 RsslPackBuffer Return Values","192");
C=B.fN("10.11.2 Example: rsslGetBuffer, RsslPackBuffer, and rsslWrite","193");
B=A.fN("10.12 Ping Management","194");
C=B.fN("10.12.1 Ping Timeout","195");
C=B.fN("10.12.2 rsslPing Function","196");
C=B.fN("10.12.3 rsslPing Return Values","197");
C=B.fN("10.12.4 rsslPing Example","198");
B=A.fN("10.13 Closing Connections","199");
C=B.fN("10.13.1 Functions for Closing Connections","199#1037673");
C=B.fN("10.13.2 Close Connections Example","200");
B=A.fN("10.14 Utility Functions","201");
C=B.fN("10.14.1 General Transport Utility Functions","202");
C=B.fN("10.14.2 RsslChannelInfo Structure Members","203");
C=B.fN("10.14.3 multicastStats Options","204");
C=B.fN("10.14.4 ComponentInfo Option","205");
C=B.fN("10.14.5 RsslServerInfo Structure Members","206");
C=B.fN("10.14.6 rsslIoctl Option Values","207");
C=B.fN("10.14.7 rsslServerIoctl Option Values","208");
B=A.fN("10.15 XML Tracing","209");
C=B.fN("10.15.1 RsslTraceOptions Structure Members","210");
C=B.fN("10.15.2 RsslTraceCodes Flag Enumeration Values","211");
A=P.fN("Chapter 11 Data Package Detailed View","212");
B=A.fN("11.1 Concepts","213");
B=A.fN("11.2 Primitive Types","214");
C=B.fN("11.2.1 RsslReal","215");
D=C.fN("11.2.1.1 Structure Members","216");
D=C.fN("11.2.1.2 hint Values","217");
D=C.fN("11.2.1.3 hint Use Case: Converting an RsslReal to a Float or a Double","218");
D=C.fN("11.2.1.4 hint Use Case: Converting Double or Float to an RsslReal","219");
D=C.fN("11.2.1.5 Utility Functions","220");
C=B.fN("11.2.2 RsslDate","221");
D=C.fN("11.2.2.1 Structure Members","222");
D=C.fN("11.2.2.2 Utility Functions","223");
C=B.fN("11.2.3 RsslTime","224");
D=C.fN("11.2.3.1 Structure Members","225");
D=C.fN("11.2.3.2 Utility Functions","226");
C=B.fN("11.2.4 RsslDateTime","227");
D=C.fN("11.2.4.1 Structure Members","228");
D=C.fN("11.2.4.2 Utility Functions","229");
C=B.fN("11.2.5 RsslQos","230");
D=C.fN("11.2.5.1 Structure Members","231");
D=C.fN("11.2.5.2 Timeliness Enum Values","232");
D=C.fN("11.2.5.3 Rate Enum Values","233");
D=C.fN("11.2.5.4 Utility Functions","234");
C=B.fN("11.2.6 RsslState","235");
D=C.fN("11.2.6.1 Structure Members","236");
D=C.fN("11.2.6.2 Stream State Enum Values","237");
D=C.fN("11.2.6.3 Data State Enum Values","238");
D=C.fN("11.2.6.4 Code Values","239");
D=C.fN("11.2.6.5 Utility Functions","240");
C=B.fN("11.2.7 RsslArray","241");
D=C.fN("11.2.7.1 Structure Members","242");
D=C.fN("11.2.7.2 Encoding Interfaces","243");
D=C.fN("11.2.7.3 Encoding: Example 1","244");
D=C.fN("11.2.7.4 Encoding: Example 2","245");
D=C.fN("11.2.7.5 Decoding Interfaces","246");
D=C.fN("11.2.7.6 Decoding: Example","247");
D=C.fN("11.2.7.7 Utility Functions","248");
C=B.fN("11.2.8 RsslBuffer","249");
D=C.fN("11.2.8.1 Structure Members","250");
D=C.fN("11.2.8.2 Example","251");
C=B.fN("11.2.9 RMTES Decoding","252");
D=C.fN("11.2.9.1 RsslRmtesCacheBuffer: Structure","253");
D=C.fN("11.2.9.2 RsslRmtesCacheBuffer: Decoding Interfaces","254");
D=C.fN("11.2.9.3 RsslRmtesCacheBuffer: Utility Functions","255");
D=C.fN("11.2.9.4 Conversion Functionality: Interfaces and Structure Members","256");
D=C.fN("11.2.9.5 Example: Converting RMTES to UTF-8","257");
D=C.fN("11.2.9.6 Example: Converting RMTES to UCS-2","258");
C=B.fN("11.2.10 General Primitive Type Utility Functions","259");
B=A.fN("11.3 Container Types","260");
C=B.fN("11.3.1 RsslFieldList","261");
D=C.fN("11.3.1.1 Structure Members","262");
D=C.fN("11.3.1.2 Flag Enumerations","263");
D=C.fN("11.3.1.3 RsslFieldEntry Structure Members","264");
D=C.fN("11.3.1.4 Encoding Interfaces","265");
D=C.fN("11.3.1.5 Rippling","266");
D=C.fN("11.3.1.6 Encoding Example","267");
D=C.fN("11.3.1.7 Decoding Interfaces","268");
D=C.fN("11.3.1.8 Decoding Example","269");
D=C.fN("11.3.1.9 Type Utility Functions","270");
C=B.fN("11.3.2 RsslElementList","271");
D=C.fN("11.3.2.1 Structure Members","272");
D=C.fN("11.3.2.2 Flag Enumerations","273");
D=C.fN("11.3.2.3 RsslElementEntry Structure Members","274");
D=C.fN("11.3.2.4 Encoding Interfaces","275");
D=C.fN("11.3.2.5 RsslElementEntry Encoding Example","276");
D=C.fN("11.3.2.6 RsslElementList Decoding Interfaces","277");
D=C.fN("11.3.2.7 RsslElementList Decoding Examples","278");
D=C.fN("11.3.2.8 RsslElementList Utility Functions","279");
C=B.fN("11.3.3 RsslMap","280");
D=C.fN("11.3.3.1 RsslMap Structure Members","281");
D=C.fN("11.3.3.2 RsslMap Flag Enumeration Values","282");
D=C.fN("11.3.3.3 RsslMapEntry Structure Members","283");
D=C.fN("11.3.3.4 RsslMapEntry Flag Enumeration Value","284");
D=C.fN("11.3.3.5 RsslMapEntry Action Enumeration Values","285");
D=C.fN("11.3.3.6 RsslMapEntry Encoding Interfaces","286");
D=C.fN("11.3.3.7 RsslMapEntry Encoding Example","287");
D=C.fN("11.3.3.8 RsslMapEntry Decoding Interfaces","288");
D=C.fN("11.3.3.9 RsslMapEntry Decode Example","289");
D=C.fN("11.3.3.10 RsslMap Utility Functions","290");
C=B.fN("11.3.4 RsslSeries","291");
D=C.fN("11.3.4.1 RsslSeries Structure Members","292");
D=C.fN("11.3.4.2 RsslSeries Flag Enumeration Values","293");
D=C.fN("11.3.4.3 RsslSeriesEntry Structure Members","294");
D=C.fN("11.3.4.4 RsslSeriesEntry Encoding Interfaces","295");
D=C.fN("11.3.4.5 RsslSeries Encoding Example","296");
D=C.fN("11.3.4.6 RsslSeriesEntry Decoding Interfaces","297");
D=C.fN("11.3.4.7 RsslSeries Decoding Example","298");
D=C.fN("11.3.4.8 RsslSeries Utility Functions","299");
C=B.fN("11.3.5 RsslVector","300");
D=C.fN("11.3.5.1 RsslVector Structure Members","301");
D=C.fN("11.3.5.2 RsslVector Flag Enumeration Values","302");
D=C.fN("11.3.5.3 RsslVectorEntry Structure Members","303");
D=C.fN("11.3.5.4 RsslVectorEntry Flag Enumeration Value","304");
D=C.fN("11.3.5.5 RsslVectorEntry Action Enumeration Values","305");
D=C.fN("11.3.5.6 RsslVectorEntry Encoding Interfaces","306");
D=C.fN("11.3.5.7 RsslVector Encoding Example","307");
D=C.fN("11.3.5.8 RsslVectorEntry Decoding Interfaces","308");
D=C.fN("11.3.5.9 RsslVector Decoding Example","309");
D=C.fN("11.3.5.10 RsslVector Utility Functions","310");
C=B.fN("11.3.6 RsslFilterList","311");
D=C.fN("11.3.6.1 RsslFilterList Structure Members","312");
D=C.fN("11.3.6.2 RsslFilterList Flag Enumeration Values","313");
D=C.fN("11.3.6.3 RsslFilterEntry Structure Members","314");
D=C.fN("11.3.6.4 RsslFilterEntry Flag Enumeration Values","315");
D=C.fN("11.3.6.5 RsslFilterEntry Action Flag Values","316");
D=C.fN("11.3.6.6 RsslFilterEntry Encoding Interfaces","317");
D=C.fN("11.3.6.7 RsslFilterList Encoding Example","318");
D=C.fN("11.3.6.8 RsslFilterEntry Decoding Interfaces","319");
D=C.fN("11.3.6.9 RsslFilterEntry Decoding Example","320");
D=C.fN("11.3.6.10 RsslFilterEntry Utility Functions","321");
C=B.fN("11.3.7 Non-RWF Container Types","322");
D=C.fN("11.3.7.1 Non-RWF Encode Functions","323");
D=C.fN("11.3.7.2 Non-RWF Encoding Example","324");
D=C.fN("11.3.7.3 Decoding Non-RWF Types","325");
B=A.fN("11.4 Permission Data","326");
B=A.fN("11.5 Summary Data","327");
B=A.fN("11.6 Set Definitions and Set-Defined Data","328");
C=B.fN("11.6.1 Set-Defined Primitive Types","329");
C=B.fN("11.6.2 Set Definition Use","330");
D=C.fN("11.6.2.1 RsslFieldSetDef Structure Members","331");
D=C.fN("11.6.2.2 RsslFieldSetDefEntry Structure Members","332");
D=C.fN("11.6.2.3 RsslElementSetDef Structure members","333");
D=C.fN("11.6.2.4 RsslElementSetDefEntry Structure Members","334");
C=B.fN("11.6.3 Set Definition Database","335");
D=C.fN("11.6.3.1 RsslLocalFieldSetDefDb Structure Members","336");
D=C.fN("11.6.3.2 RsslLocalElementSetDefDb Structure Members","337");
D=C.fN("11.6.3.3 Local Set Definition Database Encoding Interfaces","338");
D=C.fN("11.6.3.4 Local Set Definition Database Decoding Interfaces","339");
D=C.fN("11.6.3.5 Local Set Definition Database Utility Functions","340");
D=C.fN("11.6.3.6 Field Set Definition Database Encoding Example","341");
D=C.fN("11.6.3.7 Field Set Definition Database Decoding Example","342");
D=C.fN("11.6.3.8 Element Set Definition Database Encoding Example","343");
D=C.fN("11.6.3.9 Element Set Definition Database Decoding Example","344");
A=P.fN("Chapter 12 Message Package Detailed View","345");
B=A.fN("12.1 Concepts","346");
C=B.fN("12.1.1 Common Message Base","347");
D=C.fN("12.1.1.1 Message Base Structure Members","348");
D=C.fN("12.1.1.2 Message Class Information","349");
C=B.fN("12.1.2 Message Key","350");
D=C.fN("12.1.2.1 Message Key Structure Members","351");
D=C.fN("12.1.2.2 Message Key Flag Enumeration Values","352");
D=C.fN("12.1.2.3 Message Key Utility Functions","353");
C=B.fN("12.1.3 Stream Identification","354");
D=C.fN("12.1.3.1 Stream Comparison","355");
D=C.fN("12.1.3.2 Private Streams","356");
D=C.fN("12.1.3.3 Changeable Stream Attributes","357");
B=A.fN("12.2 RSSL Messages","358");
C=B.fN("12.2.1 RSSL Request Message Class","358#1001278");
D=C.fN("12.2.1.1 RSSL Request Message Structure Members","359");
D=C.fN("12.2.1.2 RSSL Request Message Flag Enumeration Values","360");
D=C.fN("12.2.1.3 RSSL Request Message Utility Functions","361");
C=B.fN("12.2.2 RSSL Refresh Message Class","362");
D=C.fN("12.2.2.1 RSSL Refresh Message Structure Members","363");
D=C.fN("12.2.2.2 RSSL Refresh Message Flag Enumeration Values","364");
D=C.fN("12.2.2.3 RSSL Refresh Message Utility Functions","365");
C=B.fN("12.2.3 RSSL Update Message Class","366");
D=C.fN("12.2.3.1 RSSL Update Message Structure Members","367");
D=C.fN("12.2.3.2 RSSL Update Message Flag Enumeration Values","368");
D=C.fN("12.2.3.3 RSSL Update Message Utility Function","369");
C=B.fN("12.2.4 RSSL Status Message Class","370");
D=C.fN("12.2.4.1 RSSL Status Message Structure Members","371");
D=C.fN("12.2.4.2 RSSL Status Message Flag Enumeration Values","372");
D=C.fN("12.2.4.3 RSSL Status Message Utility Function","373");
C=B.fN("12.2.5 RSSL Close Message Class","374");
D=C.fN("12.2.5.1 RSSL Close Message Structure Members","375");
D=C.fN("12.2.5.2 RSSL Close Message Flag Enumeration Values","376");
D=C.fN("12.2.5.3 RSSL Close Message Utility Functions","377");
C=B.fN("12.2.6 RSSL Generic Message Class","378");
D=C.fN("12.2.6.1 RSSL Generic Message Structure Members","379");
D=C.fN("12.2.6.2 RSSL Generic Message Flag Enumeration Values","380");
D=C.fN("12.2.6.3 RSSL Generic Message Utility Function","381");
C=B.fN("12.2.7 RSSL Post Message Class","382");
D=C.fN("12.2.7.1 RSSL Post Message Structure Members","383");
D=C.fN("12.2.7.2 RSSL Post Message Flag Enumeration Values","384");
D=C.fN("12.2.7.3 RSSL Post User Rights Flag Enumeration Values","385");
D=C.fN("12.2.7.4 RSSL Post Message Utility Function","386");
C=B.fN("12.2.8 RSSL Acknowledgment Message Class","387");
D=C.fN("12.2.8.1 RSSL Acknowledgment Message Structure Members","388");
D=C.fN("12.2.8.2 RSSL Acknowledgment Message Flag Enumeration Values","389");
D=C.fN("12.2.8.3 RSSL Acknowledgment Message Enumerated Names","390");
D=C.fN("12.2.8.4 RSSL Acknowledgement Message Utility Function","391");
C=B.fN("12.2.9 The RSSL Message Union","392");
D=C.fN("12.2.9.1 RsslMsg Encoding Interfaces","393");
D=C.fN("12.2.9.2 RsslMsg Encoding Example 1","394");
D=C.fN("12.2.9.3 RsslMsg Encoding Example 2","395");
D=C.fN("12.2.9.4 RsslMsg Decoding Interfaces","396");
D=C.fN("12.2.9.5 RsslMsg Decoding Example","397");
D=C.fN("12.2.9.6 RsslMsg Utility Functions","398");
A=P.fN("Chapter 13 Advanced Messaging Concepts","399");
B=A.fN("13.1 Multi-Part Message Handling","400");
B=A.fN("13.2 Stream Priority","401");
B=A.fN("13.3 Stream Quality of Service","402");
B=A.fN("13.4 Item Group Use","403");
C=B.fN("13.4.1 Item Group Buffer Contents","404");
C=B.fN("13.4.2 Item Group Utility Functions","405");
C=B.fN("13.4.3 Group Status Message Information","406");
C=B.fN("13.4.4 Group Status Responsibilities by Application Type","407");
B=A.fN("13.5 Single Open and Allow Suspect Data Behavior","408");
B=A.fN("13.6 Pause and Resume","409");
B=A.fN("13.7 Batch Messages","410");
C=B.fN("13.7.1 Batch Request","411");
C=B.fN("13.7.2 Batch Reissue","412");
C=B.fN("13.7.3 Batch Close","413");
C=B.fN("13.7.4 Batch Request Encoding Example","414");
C=B.fN("13.7.5 Batch Reissue Encoding Example","415");
C=B.fN("13.7.6 Batch Close Encoding Example","416");
B=A.fN("13.8 Dynamic View Use","417");
C=B.fN("13.8.1 RDMViewTypes Enumerated Names","418");
C=B.fN("13.8.2 Dynamic View RsslRequestMsg Encoding Example","419");
B=A.fN("13.9 Posting","420");
C=B.fN("13.9.1 Post Message Encoding Example","421");
C=B.fN("13.9.2 Post Acknowledgement Encoding Example","422");
B=A.fN("13.10 Visible Publisher Identifier (VPI)","423");
C=B.fN("13.10.1 VPI Example: Using RsslPostUserInfo to Obtain VPI Data","424");
C=B.fN("13.10.2 VPI Example: Populating VPI in Post Messages from Consumer Applications","425");
C=B.fN("13.10.3 VPI Example: Getting VPI from Post Messages","426");
B=A.fN("13.11 TREP Authentication","427");
B=A.fN("13.12 Private Streams","428");
A=P.fN("Appendix A Item and Group State Decision Table","429");
A=P.fN("Appendix B Error Codes","430");
A=P.fN("Appendix C Document Revision History","431");
}
