{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment UltraPerformanceAPI-CEditionReferenceManual }UltraPerformanceAPI-CEditionReferenceManual}
{\comment Generated byDoxgyen. }
{\creatim \yr2017\mo4\dy27\hr17\min16\sec21}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Main Page\par \pard\plain 
{\tc \v Main Page}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
 \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Deprecated List{\tc \v Deprecated List}\par \pard\plain 
{\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Global {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_IN_DIRECT_SOCKET_WRITEN}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: (0x02) Write will attempt to pass the data directly to the transport, avoiding the queuing. If anything is currently queued, data will be queued. This option will increase CPU use but may decrease latency  \par}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Global {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions::tcp_nodelay}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: Only used with connectionType of SOCKET. If RSSL_TRUE, disables Nagle's Algorithm. Users should migrate to the RsslBindOptions::tcpOpts::tcp_nodelay configuration for the same behavior with current and future connection types  \par}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Global {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo::tcpRecvBufSize}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: This is the TCP Receive Buffer size. For consistency across all transport types, use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo::sysRecvBufSize}}}  \par}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Global {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo::tcpSendBufSize}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: This is the TCP Send Buffer size. For consistency across all transport types, use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo::sysSendBufSize}}}  \par}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Global {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions::hostName}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: Hostname to connect to/join. All data is exchanged on this hostName:serviceName combination. This option will only function for the SOCKET, HTTP, and ENCRYPTED connection types. Users should migrate to the RsslConnectOptions::connectionInfo::unified::address configuration for the same behavior with current and future connection types  \par}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Global {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions::serviceName}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: Port number or service name to connect to/join. All data is exchanged on this hostName:serviceName combination. This option will only function for the SOCKET, HTTP, and ENCRYPTED connection types. Users should migrate to the RsslConnectOptions::connectionInfo::unified::serviceName configuration for the same behavior with current and future connection types  \par}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Global {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions::tcp_nodelay}}}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: Only used with connectionType of SOCKET. If RSSL_TRUE, disables Nagle's Algorithm. Users should migrate to the RsslConnectOptions::tcpOpts::tcp_nodelay configuration for the same behavior with current and future connection types \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Index\par \pard\plain 
{\tc \v Module Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Contents\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a listing of the UPA C Edition Reference Manual contents:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Overview: Transport API Encode/Decode Iterator Use\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Overview: Transport API Return Codes and Meaning\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Overview: Transport API Primitive and Container Type Enumerations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Overview: Transport API Primitive Type Encode/Decode Interface Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Overview: Transport API Container Type Encode/Decode Interface Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Overview: Transport API Message Encode/Decode Interface Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Transport API\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RSSL Transport Common Data Structures and Enumerations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RSSL Initialization and Uninitialization\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RSSL Server Operations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RSSL Bind Operation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RSSL Bind Operation Options\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
RSSL Channel Operations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMP \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RSSL Client Channel Connection Operation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RSSL Client Channel Connection Options\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RSSL Server Channel Accept Operation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RSSL Accept Operation Options\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RSSL Client and Server Channel Operations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RSSL Read Operations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RSSL Write Operations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RSSL Channel Buffer Operations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
}\par
}\par
Transport API Wire Format Codec API\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Transport API Codec Common Structures\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Transport API Iterator Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Iterator RWF Protocol Versioning\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Transport API Decode Iterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Transport API Encode Iterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RSSL Library Version Information Structure\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Transport API Wire Format Data Package\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Transport API Data Common\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOL \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Common Data Helper Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Common Data Conversion Helper Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Data Package Library Version\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Transport API Data Primitive Types\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
System Types\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Transport API System Primitive Encoder Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Generic Primitive Type Utilities\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Generic Primitive Type Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Generic Primitive Type Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Generic Primitive Type Utility & Conversion Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslInt Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslInt Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslInt Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslInt Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslUInt Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslUInt Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslUInt Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslUInt Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslReal Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslReal Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslReal Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslReal Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslReal Utility & Conversion Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslFloat Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslFloat Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslFloat Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslFloat Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslDouble Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslDouble Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslDouble Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslDouble Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslBuffer Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslBuffer Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslBuffer Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslBuffer Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslDate Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslDate Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslDate Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslDate Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslDate Utility & Conversion Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslTime Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslTime Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslTime Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslTime Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslTime Utility & Conversion Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslDateTime Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGE \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslDateTime Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslDateTime Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslDateTime Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslDateTime Utility & Conversion Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslEnum Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslEnum Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslEnum Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslEnum Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslArray Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslArray Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslArray Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslArray Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslQos Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslQos Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslQos Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslQos Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslQos Utility & Conversion Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslState Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslState Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslState Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslState Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslState Utility & Conversion Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RMTES Decoder Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslRmtesCacheBuffer Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslU16Buffer Primitive Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Rssl RMTES Decoding Functions and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
Transport API Data Container Structures\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAON \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslFieldList Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCN \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslFieldList Container Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslFieldList Structure, Initializers, Flag values, and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslFieldEntry Structure, Initalizers and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslFieldList and RsslFieldEntry Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslFieldList and RsslFieldEntry Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Field List Set Defined Data Usage, Functions, and Structures\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslElementList Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslElementList Container Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFE \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslElementList Structure, Initializers, Flag values, and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslElementEntry Structure, Initalizers and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslElementList and RsslElementEntry Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslElementList and RsslElementEntry Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Element List Set Defined Data Usage, Functions, and Structures\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslMap Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCP \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslMap Container Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHL \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslMap Structure, Initializers, Flag values, and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslMapEntry Structure, Initalizers and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslMap and RsslMapEntry Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslMap and RsslMapEntry Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslSeries Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslSeries Container Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJL \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslSeries Structure, Initializers, Flag values, and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslSeriesEntry Structure, Initalizers and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslSeries and RsslSeriesEntry Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslSeries and RsslSeriesEntry Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslVector Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslVector Container Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslVector Structure, Initializers, Flag values, and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslVectorEntry Structure, Initalizers and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslVector and RsslVectorEntry Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslVector and RsslVectorEntry Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslFilterList Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCS \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslFilterList Container Type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMW \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslFilterList Structure, Initializers, Flag values, and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslFilterEntry Structure, Initalizers and Helpers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslFilterList and RsslFilterEntry Encoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslFilterList and RsslFilterEntry Decoding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
}\par
Transport API Wire Format Message Package\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANE \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Transport API Message Structures\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Transport API Message Base\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOV \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslMsgBase Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Transport API Message Key\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslMsgKey Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslMsgKey Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslRequestMsg Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslMsgKey Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslRequestMsg Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslRefreshMsg Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslRefreshMsg Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslRefreshMsg Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslStatusMsg Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslStatusMsg Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslStatusMsg Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslUpdateMsg Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslUpdateMsg Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslUpdateMsg Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslCloseMsg Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPE \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslCloseMsg Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslCloseMsg Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslPostMsg Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslPostMsg Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslPostMsg Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslPostUserInfo Structure and Initializers\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslPostUserInfo Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslAckMsg Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPG \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslAckMsg Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslAckMsg Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslGenericMsg Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RsslGenericMsg Structure, Initializers, and Flag values\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RsslGenericMsg Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RsslMsg Union Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Transport API Message Encoding Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOS \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Message Encode Utility Helper Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Transport API Message Decoding Reference Group\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Message Decode Utility Helper Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
General Message Utility and Helper Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Message Package Library Version\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Message Utility Helper Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Copy Message Utility Helper Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
Thomson Reuters Domain Models\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Thomson Reuters Domain Model Helper and Utility functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TRDM Common Enumerations\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TRDM Login Domain\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TRDM Dictionary Domain\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJE \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
RDMFieldDictionary and enumtype.def Dictionary loading, encoding, and decoding helpers.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Data Dictionary\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
TRDM Directory Domain\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Class of Service Elements\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Directory Hierarchy\par \pard\plain 
{\tc \v Directory Hierarchy}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Directories\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This directory hierarchy is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
prod\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
distUnix_Staging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Include\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
rtr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the UPA C Edition data structures with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 RsslAcceptOptions}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Accept Options used in the rsslAccept call })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} is used to acknowledge success/failure or completion of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} is a uniform primitive type that can contain multiple simple primitive entries. Entries can be either fixed length or variable length })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Bind Options used in the rsslBind call })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Channel structure returned via {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAccept()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect()}}} calls })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBU" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Channel Info returned by rsslGetChannelInfo call })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} is used to indicate that a consuming application is no longer interested in content on the stream being closed })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBW" }{}}{\fldrslt {\cs37\ul\cf2 RsslComponentInfo}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connected Component Information, used to identify components from across the connection })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRG" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionInfo}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring the network connection })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Connect Options used in the rsslConnect call })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A data dictionary Houses all known fields loaded from a field dictionary and their corresponding enum types loaded from an enum type dictionary. The dictionary also saves general information about the dictionary itself -- this is found in the "!tag" comments in the file or in the summary data of dictionaries encoded via the official domain model })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} type allows for bandwidth optimized representation of a date value containing month, day, and year information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} type allows for bandwidth optimized representation of both a date and a time value containing month, day, year, hour, minute, second, millisecond, microsecond, and nanosecond information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANV" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator used for RWF decoding })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADED" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterLevel}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A data dictionary entry, containing field information and an enumeration table reference if present })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}} indicates the content type })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} container type allows the user to represent a collection of name - type - value triples, where the value can be a container type or a primitive type. The name and type information is similar to the content that would be cross referenced with a field dictionary when using an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. No dictionary is required to decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} contents })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Element List Set Definition })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global Element List Set Definitions Database })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Element List Set Element Encoding })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator used for RWF encoding })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFR" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncLevel}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGH" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeSizeMark}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRH" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncryptionOpts}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring an encrypted tunneled connection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}). see rsslConnect see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single defined enumerated value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUU" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A table of enumerated types. A field that uses this table will contain a value corresponding to an enumerated type in this table })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Error message })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. When encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} should be specified. When decoding set data, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} will be populated with information from set definition. When decoding and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UNKNOWN}}}, user should cross reference {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} with the appropriate field dictionary to determine type and name information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} container type allows the user to represent a collection of field identifier - value pairs, where the value can be a container type or a primitive type. The field identifier ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}}) can be cross referenced with a field dictionary to determine the specific type of the content. The dictionary contains specific name and type information (e.g. RDMFieldDictionary) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Field List Set Definition })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global Field List Set Definitions Database })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Field List Set Definition Field Entry })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::flags}}} contains {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_CONTAINER_TYPE}}}, the contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}}; otherwise the contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}}. Any contents should be applied following the rules of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::action}}} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryActions}}}) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} is a non-uniform container type of filterId (8-bit identifier) \'96 value pair entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, contains an id corresponding to one of 32 possible bit-value identifiers. These identifiers are typically defined by a domain model specification and can be used to indicate interest or presence of specific entries through the inclusion of the of the id in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::filter}}} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} allows applications to bidirectionally send messages without any implied interaction semantics (e.g. no Request/Response paradigm) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQH" }{}}{\fldrslt {\cs37\ul\cf2 RsslInitializeExOpts}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure that provides additional initialization information for the RSSL API })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}} Information for the In Progress Connection State If a backward compatibility reconnection occurs, the file descriptor may change. This is how that information is relayed })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQI" }{}}{\fldrslt {\cs37\ul\cf2 rsslJITOpts}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Just-In-Time loaded library configuration options })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library Version Information structure to be populated with library version info })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local Message Element List Set Definitions Database, must be cleared before use })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local Message Field List Set Definitions Database. Must be cleared before use })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} is a uniform container type of associated key\'96container pair entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, contains an entry key and a value. The key is a base primitive type as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}} and the value is a container type as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. The contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} and the key's type is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. Any contents should be applied following the rules of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::action}}} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryActions}}}) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRI" }{}}{\fldrslt {\cs37\ul\cf2 RsslMCastOpts}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring multicast specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_RELIABLE_MCAST}}}) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCF" }{}}{\fldrslt {\cs37\ul\cf2 RsslMCastStats}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multicast statistics returned by rsslGetChannelInfo call })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The OMM Message Union. All message encoding and decoding functions expect the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} type. Any specific message class can be cast to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, and an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} can be cast to any specific message class. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg.msgBase}}} contains common members that can be used to identify the specific message class or domain type })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} contains common members that are used across all Rssl Messages })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} contains a variety of attributes used to identify the contents flowing within a particular stream. This information, in conjunction with domainType and quality of service information, can be used to uniquely identify a data stream })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslNodeId}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} is used to contribute content from a consumer into the platform. The post message payload can contain another OMM message, OMM container, or other opaque content })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} is used to identify the user that has posted a message })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslProxyOpts}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} can be used to indicate the quality of service associated with content. This includes timeliness (e.g. age) and rate (e.g. period of change) information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslReadEx input arguments })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslReadEx output arguments })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} allows the user to represent fractional or decimal values, with minimal conversion overhead, by using an RsslInt and a format hint })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} is provided as an initial response or when an upstream source requires a data resynchronization point })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} is used to provide an initial or subsequent data synchronization point, including quality of service and payload content. When used to respond to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, a solicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. If pushing out a content change to downstream applications, an unsolicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. When the stream is instantiated because of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, the streamId from the request should be used; when a provider instantiates the stream with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} (e.g. Non-Interactive provider), a negative streamId should be used })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRK" }{}}{\fldrslt {\cs37\ul\cf2 RsslSegmentedNetwork}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring a segmented network (seperate send and receive networks) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeqMCastOpts}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring sequenced multicast specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SEQ_MCAST}}}). see rsslConnect see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} is a uniform container type entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, is implicitly indexed and houses a container type payload as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}. This is well suited for sending infrequently or non-updating table like content, where each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} represents an additional row in a table })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. The contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} has an implicit action of Add, so any additional entries should be appended to any existing content })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Server structure returned via the rsslBind call })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQT" }{}}{\fldrslt {\cs37\ul\cf2 RsslServerInfo}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Server Info returned by rsslGetServerInfo call })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRM" }{}}{\fldrslt {\cs37\ul\cf2 RsslShmemOpts}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring shared memory specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_UNIDIR_SHMEM}}}) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
State structure, contains information used to convey data and stream health information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} is used to convey state information, permission change, or group Id change information on a stream. An interactive or non-interactive providing application can also close a stream with a status message })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslTcpOpts}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring TCP specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_HTTP}}}) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} type allows for bandwidth optimized representation of a time value containing hour, minute, second, millisecond, microsecond, and nanosecond information })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceOptions}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Trace Options structure used to configure XML Tracing })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}} structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRO" }{}}{\fldrslt {\cs37\ul\cf2 RsslUnifiedNetwork}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring a unified/fully connected mesh network })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} is used by providers(both interactive and non-interactive) to convey changes to data associated with an item stream })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} is a uniform container type of associated index\'96container pair entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, contains an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} index and a container payload. The payload is a container type as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. The contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}}. Any contents should be applied following the rules of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::action}}} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryActions}}}) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslWriteEx input arguments })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslWriteEx output arguments })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RwfBuffer}}}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RwfBuffer}}} type })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Documentation{\tc \v Module Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Overview: Transport API Encode/Decode Iterator Use\par \pard\plain 
{\tc\tcl2 \v Overview: Transport API Encode/Decode Iterator Use}
{\xe \v Overview: Transport API Encode/Decode Iterator Use}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The following sections describe high level usage of the Transport API Encode and Decode Iterators. Specific iterator structure and function definitions can be found in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Iterator Reference Group}}}.\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Iterator Overview
\par}
{\tc\tcl2 \v Transport API Iterator Overview}
When encoding or decoding RWF content with Transport API, the user leverages an iterator to manage the encoding or decoding process. Transport API defines a single encode iterator type ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}) and a single decode iterator type ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}). A single instance of this iterator can manage the full depth and breadth of the encoding or decoding process. Alternatly, multiple iterator instances can be used to individually manage separate portions of the encode or decode process. \par\par The Transport API encoder/decoder does not provide any inherent threading or locking capability. Separate iterator and type instances do not cause contention and do not share resources between instances. Any needed threading, locking, or thread-model implementation is at the discretion of the application. Different application threads can encode or decode different messages without requiring a lock; thus each thread must use its own iterator instance and each message should be encoded or decoded using unique and independent buffers. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Though possible, Thomson Reuters recommends that you do not encode or decode related messages (messages flowing on the same stream) on different threads as this can impact the delivery order.\par
}{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Iterator RWF Protocol Versioning
\par}
{\tc\tcl3 \v Iterator RWF Protocol Versioning}
The Transport API iterators help the user to manage version information associated with the RWF content being exchanged. When using the Transport API Transport the protocol type and version information can be exchanged and negotiated on the connection (via the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}}). The Transport API will reject any connection establishment when the protocol type does not match across the connection. If the protocol type does match, an appropriate major and minor version will be determined and this should be the version of RWF encoded or decoded when using this connection. After the connection becomes active, this negotiated version information is available and can then be provided to the iterator to ensure that the proper version is encoded or decoded. If not using the Transport API, the user can determine the desired version of RWF to encode and specify this information on their iterator. Transport API provides RWF protocol type and protocol version values in  "rtr\\rsslIterators.h" for this purpose. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Specifying appropriate version information on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is important to future-proof applications and avoid incompatability if new RWF functionality is added.\par
}See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 Iterator RWF Protocol Versioning}}} for more information about Iterator Versioning.\par}
\par}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Decode Iterator Overview
\par}
{\tc\tcl2 \v Transport API Decode Iterator Overview}
All RWF decoding requires the use of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}, where a single iterator can manage the full decoding process. For instance, if the application is decoding a message containing an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} can be used to decode the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, all {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, and all types (primitive types or container types) housed in the entries. Seperate iterators can be used as well, depending on the needs of the application. Following the same example, one {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} can be used to decode the message information (up to the beginning of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} payload). Another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} reference can be used to decode the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and entries, and if desired, other iterators can be used to decode the contents of each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}.\par\par Before decoding begins, the iterator should be initialized to ready it for decoding. Initialization consists of several steps. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator()}}} function can be used to initialize (or re-initialize for reuse) the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}. After clearing, an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing the content to decode should be associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}. In addition, RWF version information should be provided to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} so the desired version of RWF is decoded.\par\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Decode Iterator}}} for more information and code examples.\par\par\par\par}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Encode Iterator Overview
\par}
{\tc\tcl2 \v Transport API Encode Iterator Overview}
All RWF encoding requires the use of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, where a single iterator can manage the full encoding process. For instance, if the application is encoding a message containing an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} can be used to encode the message header information, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} information, each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, and the content of each entry (primitive types or container types). Seperate iterators can be used as well, depending on the needs of the application. Following the same example, one {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} can be used to pre-encode an entry's content. This pre-encoded content can then be set on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} and encoded using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that is encoding the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. This encoded field list content can then be set on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} and yet another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} can be used to encode the message and its pre-encoded payload.\par\par Before encoding begins, the iterator should be initialized to ready it for the encoding process. Initialization consists of several steps. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator()}}} function can be used to initialize (or re-initalize for reuse) the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. After clearing, an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} with ample memory should be associated with the iterator; this will be the buffer that content is encoded into (if using with the Transport API, this is often a buffer obtained from the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetBuffer()}}} function so it can be immediatley written after encoding completes). In addition, RWF version information should be provided to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} so the desired version of RWF is encoded. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When encoding is complete, the user should query the length of encoded content, setting this information in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}}. If encoding fails, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} can be used to roll back content to the last successful encoding point. \par\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information and code examples.\par\par\par \par
}\par}
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Overview: Transport API Return Codes and Meaning\par \pard\plain 
{\tc\tcl2 \v Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This section describes each Transport API return code and provides high level meaning and handling information. The codes are used to communicate errors and other information to the user. These are returned from both encoder/decoder functions as well as the transport functions. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rssl Return Code type. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_PERSISTENCE_FULL}}}
 =  -91, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_CONGESTION_DETECTED}}}
 =  -63, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SLOW_READER}}}
 =  -62, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_PACKET_GAP_DETECTED}}}
 =  -61, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_VALUE_OUT_OF_RANGE}}}
 =  -34, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ITERATOR_OVERRUN}}}
 =  -33, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_DUPLICATE_LOCAL_SET_DEFS}}}
 =  -32, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_TOO_MANY_LOCAL_SET_DEFS}}}
 =  -31, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ILLEGAL_LOCAL_SET_DEF}}}
 =  -30, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INVALID_DATA}}}
 =  -29, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SET_DEF_NOT_PROVIDED}}}
 =  -27, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}}
 =  -26, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_UNEXPECTED_ENCODER_CALL}}}
 =  -25, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_UNSUPPORTED_DATA_TYPE}}}
 =  -24, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODING_UNAVAILABLE}}}
 =  -23, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INVALID_ARGUMENT}}}
 =  -22, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}}
 =  -21, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_READ_IN_PROGRESS}}}
 =  -15, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_READ_FD_CHANGE}}}
 =  -14, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_READ_PING}}}
 =  -13, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_READ_WOULD_BLOCK}}}
 =  -11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_WRITE_CALL_AGAIN}}}
 =  -10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_WRITE_FLUSH_FAILED}}}
 =  -9, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_NO_BUFFERS}}}
 =  -4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INIT_NOT_INITIALIZED}}}
 =  -3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_CHAN_INIT_REFUSED}}}
 =  -2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}}
 =  -1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_CHAN_INIT_IN_PROGRESS}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_DICT_PART_ENCODED}}}
 =  10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}
 =  11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_EXTENDED_HEADER}}}
 =  12, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_CONTAINER}}}
 =  13, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}}
 =  14, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
 =  15, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_NO_DATA}}}
 =  16, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SET_COMPLETE}}}
 =  17, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SET_SKIPPED}}}
 =  18, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SET_DEF_DB_EMPTY}}}
 =  19, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_REQMSG_KEY_ATTRIB}}}
 =  20
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return code enumeration for RSSL functions from all packages. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide additional information about the meaning of an RsslReturnCodes return code enumerated value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert an RsslReturnCodes return code enumerated value to a string representation (e.g. 16 to "RSSL_RET_NO_DATA") }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v RsslRet\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RsslRet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}} \par
}}{
Definition at line 191 of file rsslTypes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslReturnCodes\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RsslReturnCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}}
}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_RET_PERSISTENCE_FULL\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_PERSISTENCE_FULL}
{\b {\i RSSL_RET_PERSISTENCE_FULL{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-91) Tunnel Stream Failure: This message could not be sent because no space was available to persist it. \par
}{\xe \v RSSL_RET_CONGESTION_DETECTED\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_CONGESTION_DETECTED}
{\b {\i RSSL_RET_CONGESTION_DETECTED{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-63) Transport Warning: Network congestion detected. Gaps are likely. \par
}{\xe \v RSSL_RET_SLOW_READER\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_SLOW_READER}
{\b {\i RSSL_RET_SLOW_READER{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-62) Transport Warning: Application is consuming more slowly than data is being provided. Gaps are likely. \par
}{\xe \v RSSL_RET_PACKET_GAP_DETECTED\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_PACKET_GAP_DETECTED}
{\b {\i RSSL_RET_PACKET_GAP_DETECTED{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-61) Transport Warning: An unrecoverable packet gap was detected and some content may have been lost. \par
}{\xe \v RSSL_RET_VALUE_OUT_OF_RANGE\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_VALUE_OUT_OF_RANGE}
{\b {\i RSSL_RET_VALUE_OUT_OF_RANGE{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-34) Codec Failure: A value being encoded into a set is outside of the valid range of the type given by that set. \par
}{\xe \v RSSL_RET_ITERATOR_OVERRUN\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_ITERATOR_OVERRUN}
{\b {\i RSSL_RET_ITERATOR_OVERRUN{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-33) Codec Failure: Iterator is nested too deeply. There is a limit of 16 levels. \par
}{\xe \v RSSL_RET_DUPLICATE_LOCAL_SET_DEFS\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_DUPLICATE_LOCAL_SET_DEFS}
{\b {\i RSSL_RET_DUPLICATE_LOCAL_SET_DEFS{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-32) Codec Failure: A duplicate set definition has been received \par
}{\xe \v RSSL_RET_TOO_MANY_LOCAL_SET_DEFS\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_TOO_MANY_LOCAL_SET_DEFS}
{\b {\i RSSL_RET_TOO_MANY_LOCAL_SET_DEFS{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-31) Codec Failure: Maximum number of set definitions has been exceeded \par
}{\xe \v RSSL_RET_ILLEGAL_LOCAL_SET_DEF\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_ILLEGAL_LOCAL_SET_DEF}
{\b {\i RSSL_RET_ILLEGAL_LOCAL_SET_DEF{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-30) Codec Failure: Set definition is not valid \par
}{\xe \v RSSL_RET_INVALID_DATA\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_INVALID_DATA}
{\b {\i RSSL_RET_INVALID_DATA{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-29) Codec Failure: Invalid data provided to function \par
}{\xe \v RSSL_RET_SET_DEF_NOT_PROVIDED\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_SET_DEF_NOT_PROVIDED}
{\b {\i RSSL_RET_SET_DEF_NOT_PROVIDED{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-27) Codec Failure: A Database containing the Set Definition for encoding the desired set was not provided. \par
}{\xe \v RSSL_RET_INCOMPLETE_DATA\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_INCOMPLETE_DATA}
{\b {\i RSSL_RET_INCOMPLETE_DATA{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-26) Codec Failure: Not enough data was provided. \par
}{\xe \v RSSL_RET_UNEXPECTED_ENCODER_CALL\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_UNEXPECTED_ENCODER_CALL}
{\b {\i RSSL_RET_UNEXPECTED_ENCODER_CALL{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-25) Codec Failure: An encoder was used in an unexpected sequence. \par
}{\xe \v RSSL_RET_UNSUPPORTED_DATA_TYPE\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_UNSUPPORTED_DATA_TYPE}
{\b {\i RSSL_RET_UNSUPPORTED_DATA_TYPE{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-24) Codec Failure: The data type is unsupported, may indicate invalid containerType or primitiveType specified. \par
}{\xe \v RSSL_RET_ENCODING_UNAVAILABLE\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_ENCODING_UNAVAILABLE}
{\b {\i RSSL_RET_ENCODING_UNAVAILABLE{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-23) Codec Failure: No encoder is available for the data type specified. \par
}{\xe \v RSSL_RET_INVALID_ARGUMENT\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_INVALID_ARGUMENT}
{\b {\i RSSL_RET_INVALID_ARGUMENT{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-22) Codec Failure: An invalid argument was provided. \par
}{\xe \v RSSL_RET_BUFFER_TOO_SMALL\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_BUFFER_TOO_SMALL}
{\b {\i RSSL_RET_BUFFER_TOO_SMALL{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-21) Codec Failure: The buffer provided does not have sufficient space to perform the operation. \par
}{\xe \v RSSL_RET_READ_IN_PROGRESS\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_READ_IN_PROGRESS}
{\b {\i RSSL_RET_READ_IN_PROGRESS{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-15) Transport Success: Another rsslRead call is currently in progress from another thread. This can only be detected if per-channel locking is enabled. \par
}{\xe \v RSSL_RET_READ_FD_CHANGE\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_READ_FD_CHANGE}
{\b {\i RSSL_RET_READ_FD_CHANGE{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-14) Transport Success: rsslRead received an FD change event. The application should unregister the oldSocketId and register the socketId with its notifier \par
}{\xe \v RSSL_RET_READ_PING\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_READ_PING}
{\b {\i RSSL_RET_READ_PING{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-13) Transport Success: rsslRead has received a ping message. There is no buffer in this case. \par
}{\xe \v RSSL_RET_READ_WOULD_BLOCK\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_READ_WOULD_BLOCK}
{\b {\i RSSL_RET_READ_WOULD_BLOCK{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-11) Transport Success: Reading was blocked by the OS. Typically indicates that there are no bytes available to read, returned from rsslRead. \par
}{\xe \v RSSL_RET_WRITE_CALL_AGAIN\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_WRITE_CALL_AGAIN}
{\b {\i RSSL_RET_WRITE_CALL_AGAIN{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-10) Transport Success: rsslWrite is fragmenting the buffer and needs to be called again with the same buffer. This indicates that rsslWrite was unable to send all fragments with the current call and must continue fragmenting \par
}{\xe \v RSSL_RET_WRITE_FLUSH_FAILED\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_WRITE_FLUSH_FAILED}
{\b {\i RSSL_RET_WRITE_FLUSH_FAILED{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-9) Transport Success: rsslWrite internally attempted to flush data to the connection but was blocked. This is not a failure and the user should not release their buffer \par
}{\xe \v RSSL_RET_BUFFER_NO_BUFFERS\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_BUFFER_NO_BUFFERS}
{\b {\i RSSL_RET_BUFFER_NO_BUFFERS{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-4) Transport Failure: There are no buffers available from the buffer pool, returned from rsslGetBuffer. Use rsslIoctl to increase pool size or use rsslFlush to flush data and return buffers to pool. \par
}{\xe \v RSSL_RET_INIT_NOT_INITIALIZED\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_INIT_NOT_INITIALIZED}
{\b {\i RSSL_RET_INIT_NOT_INITIALIZED{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-3) Transport Failure: Not initialized failure code, returned from transport functions when rsslInitialize did not succeed \par
}{\xe \v RSSL_RET_CHAN_INIT_REFUSED\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_CHAN_INIT_REFUSED}
{\b {\i RSSL_RET_CHAN_INIT_REFUSED{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-2) Transport Failure: Channel initialization failed/connection refused, returned from rsslInitChannel. \par
}{\xe \v RSSL_RET_FAILURE\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_FAILURE}
{\b {\i RSSL_RET_FAILURE{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-1) General Failure: RSSL general failure return code \par
}{\xe \v RSSL_RET_SUCCESS\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_SUCCESS}
{\b {\i RSSL_RET_SUCCESS{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) General Success: RSSL general success return code \par
}{\xe \v RSSL_RET_CHAN_INIT_IN_PROGRESS\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_CHAN_INIT_IN_PROGRESS}
{\b {\i RSSL_RET_CHAN_INIT_IN_PROGRESS{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Transport Success: Channel initialization is In progress, returned from rsslInitChannel. \par
}{\xe \v RSSL_RET_DICT_PART_ENCODED\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_DICT_PART_ENCODED}
{\b {\i RSSL_RET_DICT_PART_ENCODED{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(10) Dictionary Success: Successfully encoded part of a dictionary message, returned from the rssl dictionary processing functions. \par
}{\xe \v RSSL_RET_ENCODE_MSG_KEY_OPAQUE\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_ENCODE_MSG_KEY_OPAQUE}
{\b {\i RSSL_RET_ENCODE_MSG_KEY_OPAQUE{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(11) Codec Success: The user should now encode their msgKey opaque data. \par
}{\xe \v RSSL_RET_ENCODE_EXTENDED_HEADER\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_ENCODE_EXTENDED_HEADER}
{\b {\i RSSL_RET_ENCODE_EXTENDED_HEADER{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(12) Codec Success: The user should now encode their extended header information. \par
}{\xe \v RSSL_RET_ENCODE_CONTAINER\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_ENCODE_CONTAINER}
{\b {\i RSSL_RET_ENCODE_CONTAINER{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(13) Codec Success: The user should encode the container type payload \par
}{\xe \v RSSL_RET_END_OF_CONTAINER\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_END_OF_CONTAINER}
{\b {\i RSSL_RET_END_OF_CONTAINER{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(14) Codec Success: The end of the current container has been reached while decoding \par
}{\xe \v RSSL_RET_BLANK_DATA\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_BLANK_DATA}
{\b {\i RSSL_RET_BLANK_DATA{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(15) Codec Success: Decoded data is a Blank \par
}{\xe \v RSSL_RET_NO_DATA\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_NO_DATA}
{\b {\i RSSL_RET_NO_DATA{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(16) Codec Success: Container was decoded from an empty payload. The user should not try to decode any entries. \par
}{\xe \v RSSL_RET_SET_COMPLETE\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_SET_COMPLETE}
{\b {\i RSSL_RET_SET_COMPLETE{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(17) Codec Success: The encoded entry completed a FieldList or ElementList set. Subsequent entries will be encoded normally. \par
}{\xe \v RSSL_RET_SET_SKIPPED\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_SET_SKIPPED}
{\b {\i RSSL_RET_SET_SKIPPED{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(18) Codec Success: The FieldList or ElementList contains set data and the necessary definition was not provided. Standard entries may still be decoded. \par
}{\xe \v RSSL_RET_SET_DEF_DB_EMPTY\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_SET_DEF_DB_EMPTY}
{\b {\i RSSL_RET_SET_DEF_DB_EMPTY{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(19) Codec Success: A Set Definition Database decoded successfully but contained no definitions. \par
}{\xe \v RSSL_RET_ENCODE_REQMSG_KEY_ATTRIB\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:RSSL_RET_ENCODE_REQMSG_KEY_ATTRIB}
{\b {\i RSSL_RET_ENCODE_REQMSG_KEY_ATTRIB{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(20) Codec Success: The user should now encode their request msgKey attrib data. \par
}}
\par
{
Definition at line 20 of file rsslRetCodes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslRetCodeInfo\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:rsslRetCodeInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\i code})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i code} \cell }{RsslReturnCodes value to obtain extended error information for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid char* containing extended error description \par
}}}
{\xe \v rsslRetCodeToString\:Overview: Transport API Return Codes and Meaning}
{\xe \v Overview: Transport API Return Codes and Meaning\:rsslRetCodeToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\i code})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i code} \cell }{RsslReturnCodes value to convert to string representation \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid char* containing string representation of RsslReturnCodes enumerated value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Overview: Transport API Primitive and Container Type Enumerations\par \pard\plain 
{\tc\tcl2 \v Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This section describes each Transport API primitive and container type enumerated value and refers to each types specific section. These enumerated values are used to indicate which type is being sent or received. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 RsslContainerType}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An 8 bit value that uses an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} enumerated value to specify the type of content. This can be used to specify only container types. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An 8 bit value that uses an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} enumerated value to specify the type of content. This can be used to specify a primitive or container type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An 8 bit value that uses an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} enumerated value to specify the type of content. This can be used to specify only primitive types. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_BASE_PRIMITIVE_MIN}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UNKNOWN}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_INT}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FLOAT}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_DOUBLE}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL}}}
 =  8, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_DATE}}}
 =  9, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_TIME}}}
 =  10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_DATETIME}}}
 =  11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_QOS}}}
 =  12, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_STATE}}}
 =  13, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ENUM}}}
 =  14, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ARRAY}}}
 =  15, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_BUFFER}}}
 =  16, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ASCII_STRING}}}
 =  17, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UTF8_STRING}}}
 =  18, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_RMTES_STRING}}}
 =  19, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAED" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_BASE_PRIMITIVE_MAX}}}
 =  63, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_SET_PRIMITIVE_MIN}}}
 =  64, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_INT_1}}}
 =  64, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT_1}}}
 =  65, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_INT_2}}}
 =  66, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT_2}}}
 =  67, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_INT_4}}}
 =  68, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT_4}}}
 =  69, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_INT_8}}}
 =  70, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT_8}}}
 =  71, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FLOAT_4}}}
 =  72, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_DOUBLE_8}}}
 =  73, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL_4RB}}}
 =  74, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL_8RB}}}
 =  75, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_DATE_4}}}
 =  76, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAES" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_TIME_3}}}
 =  77, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAET" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_TIME_5}}}
 =  78, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_DATETIME_7}}}
 =  79, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_DATETIME_9}}}
 =  80, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_DATETIME_11}}}
 =  81, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_DATETIME_12}}}
 =  82, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_TIME_7}}}
 =  83, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_TIME_8}}}
 =  84, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_SET_PRIMITIVE_MAX}}}
 =  127, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_CONTAINER_TYPE_MIN}}}
 =  128, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_NO_DATA}}}
 =  128, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_OPAQUE}}}
 =  130, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_XML}}}
 =  131, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
 =  132, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ELEMENT_LIST}}}
 =  133, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ANSI_PAGE}}}
 =  134, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FILTER_LIST}}}
 =  135, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_VECTOR}}}
 =  136, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MAP}}}
 =  137, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_SERIES}}}
 =  138, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MSG}}}
 =  141, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_JSON}}}
 =  142, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_CONTAINER_TYPE_MAX}}}
 =  142, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MAX_RESERVED}}}
 =  224, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_LAST}}}
 =  255
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDataTypeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 type)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation for a data type enumeration. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFT" }{}}{\fldrslt {\cs37\ul\cf2 rsslIsContainerType}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 dataType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the passed in type is a valid container type (128 - 255) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 rsslIsPrimitiveType}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 dataType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the passed in type is a valid primitive type (0 - 127) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 rsslPrimitiveTypeSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 dataType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns maximum encoded size for primitiveTypes. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v RsslContainerType\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RsslContainerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 RsslContainerType}}}
}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The valid container types are defined by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} enumeration. This can only be a container type (128 - 255) \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} \par
}}{
Definition at line 109 of file rsslDataTypeEnums.h.}\par
}
{\xe \v RsslDataType\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RsslDataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The valid data types are defined by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} enumeration. This type can be a primitive type (0 - 127) or a container type (128 - 255) \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} \par
}}{
Definition at line 127 of file rsslDataTypeEnums.h.}\par
}
{\xe \v RsslPrimitiveType\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RsslPrimitiveType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The valid primitive types are defined by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} enumeration. This type can only be a primitive type (0 - 127). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} \par
}}{
Definition at line 118 of file rsslDataTypeEnums.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslDataTypes\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RsslDataTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}}
}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_DT_BASE_PRIMITIVE_MIN\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_BASE_PRIMITIVE_MIN}
{\b {\i RSSL_DT_BASE_PRIMITIVE_MIN{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum allowed value for primitive types - used for internal UPA range checking \par \par
}{\xe \v RSSL_DT_UNKNOWN\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_UNKNOWN}
{\b {\i RSSL_DT_UNKNOWN{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Unknown Data Type. This is only valid when decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} type that requires a dictionary look-up. If content is set defined, actual type enum will be present. \par (1) Reserved \par (2) Reserved \par \par
}{\xe \v RSSL_DT_INT\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_INT}
{\b {\i RSSL_DT_INT{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Signed Integer, represents a value of up to 63 bits along with a one bit sign. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFX" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_UINT\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_UINT}
{\b {\i RSSL_DT_UINT{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Unsigned Integer, represents an unsigned value with precision of up to 64 bits. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_FLOAT\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_FLOAT}
{\b {\i RSSL_DT_FLOAT{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) 32 Bit Floating Point, represents the same range of values allowed with the system float type. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_DOUBLE\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_DOUBLE}
{\b {\i RSSL_DT_DOUBLE{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(6) 64 Bit Floating Point, represents the same range of values allowed with the system double type. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble Reference Group}}} for more information. \par (7) Reserved \par \par
}{\xe \v RSSL_DT_REAL\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_REAL}
{\b {\i RSSL_DT_REAL{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(8) Real Numeric, a bandwidth optimized representation of a decimal or fractional value which typically requires less bytes on the wire than float or double types. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGB" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_DATE\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_DATE}
{\b {\i RSSL_DT_DATE{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(9) Date type, contains month, day, and year values. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_TIME\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_TIME}
{\b {\i RSSL_DT_TIME{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(10) Time type, contains hour, minute, second, millisecond, microsecond, and nanosecond values. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_DATETIME\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_DATETIME}
{\b {\i RSSL_DT_DATETIME{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(11) DateTime type, contains all members of RSSL_DT_DATE and RSSL_DT_TIME. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGE" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_QOS\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_QOS}
{\b {\i RSSL_DT_QOS{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(12) Quality of Service, represents quality of service information such as data timeliness (e.g. real time) and rate (e.g. tick by tick). See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGF" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_STATE\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_STATE}
{\b {\i RSSL_DT_STATE{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(13) State type, represents data and stream state information. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGG" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_ENUM\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_ENUM}
{\b {\i RSSL_DT_ENUM{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(14) Enumeration type, represents an enumeration type, defined as an unsigned two byte value. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGH" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_ARRAY\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_ARRAY}
{\b {\i RSSL_DT_ARRAY{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(15) Array type, represents a list of a simple primitive types that can be variable or fixed length. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGI" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_BUFFER\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_BUFFER}
{\b {\i RSSL_DT_BUFFER{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(16) Buffer type, represents a raw byte buffer type with a char* and an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}} length. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_ASCII_STRING\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_ASCII_STRING}
{\b {\i RSSL_DT_ASCII_STRING{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(17) ASCII String, uses the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} type for encoding and decoding. This enum indicates that the content is an ASCII string and should only contain characters that are valid within the ASCII specification. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_UTF8_STRING\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_UTF8_STRING}
{\b {\i RSSL_DT_UTF8_STRING{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(18) UTF8 String, uses the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} type for encoding and decoding. This enum indicates that the content is a UTF8 string and should only contain characters that are valid within the UTF8 encoding standard. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_RMTES_STRING\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_RMTES_STRING}
{\b {\i RSSL_DT_RMTES_STRING{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(19) RMTES String, uses the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} type for encoding and decoding. This enum indicates that the content is a Reuters Multilingual Text Encoding Standard string and should only contain characters that are valid within the RMTES encoding standard. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Reference Group}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 RMTES Decoder Reference Group}}} for more information. \par \par
}{\xe \v RSSL_DT_BASE_PRIMITIVE_MAX\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_BASE_PRIMITIVE_MAX}
{\b {\i RSSL_DT_BASE_PRIMITIVE_MAX{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum allowed value for primitive types - used for internal UPA range checking \par \par
}{\xe \v RSSL_DT_SET_PRIMITIVE_MIN\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_SET_PRIMITIVE_MIN}
{\b {\i RSSL_DT_SET_PRIMITIVE_MIN{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum allowed value for set defined primitive types - used for internal UPA range checking \par \par
}{\xe \v RSSL_DT_INT_1\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_INT_1}
{\b {\i RSSL_DT_INT_1{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(64) 1 byte signed integer, represents a value of up to 7 bits along with a one bit sign. \par \par
}{\xe \v RSSL_DT_UINT_1\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_UINT_1}
{\b {\i RSSL_DT_UINT_1{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(65) 1 byte unsigned integer, represents a value of up to 8 bits. \par \par
}{\xe \v RSSL_DT_INT_2\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_INT_2}
{\b {\i RSSL_DT_INT_2{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(66) 2 byte signed integer, represents a value of up to 15 bits along with a one bit sign. \par \par
}{\xe \v RSSL_DT_UINT_2\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_UINT_2}
{\b {\i RSSL_DT_UINT_2{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(67) 2 byte unsigned integer, represents a value of up to 16 bits. \par \par
}{\xe \v RSSL_DT_INT_4\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_INT_4}
{\b {\i RSSL_DT_INT_4{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(68) 4 byte signed integer, represents a value of up to 31 bits along with a one bit sign. \par \par
}{\xe \v RSSL_DT_UINT_4\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_UINT_4}
{\b {\i RSSL_DT_UINT_4{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(69) 4 byte unsigned integer, represents a value of up to 32 bits. \par \par
}{\xe \v RSSL_DT_INT_8\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_INT_8}
{\b {\i RSSL_DT_INT_8{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(70) 8 byte signed integer, represents a value of up to 63 bits along with a one bit sign. \par \par
}{\xe \v RSSL_DT_UINT_8\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_UINT_8}
{\b {\i RSSL_DT_UINT_8{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(71) 8 byte unsigned integer, represents a value of up to 64 bits. \par \par
}{\xe \v RSSL_DT_FLOAT_4\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_FLOAT_4}
{\b {\i RSSL_DT_FLOAT_4{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(72) 4 byte float value, represents the same range of values allowed with the system float type. \par \par
}{\xe \v RSSL_DT_DOUBLE_8\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_DOUBLE_8}
{\b {\i RSSL_DT_DOUBLE_8{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(73) 8 byte double value, represents the same range of values allowed with the system double type. \par \par
}{\xe \v RSSL_DT_REAL_4RB\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_REAL_4RB}
{\b {\i RSSL_DT_REAL_4RB{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(74) Optimized variable length encoding for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} with value that can range up to but not exceed 31 bits and one sign bit. \par \par
}{\xe \v RSSL_DT_REAL_8RB\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_REAL_8RB}
{\b {\i RSSL_DT_REAL_8RB{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(75) Optimized variable length encoding for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} with value that can range up to 63 bits and one sign bit. \par \par
}{\xe \v RSSL_DT_DATE_4\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_DATE_4}
{\b {\i RSSL_DT_DATE_4{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(76) 4 byte date, includes month, day, and year. \par \par
}{\xe \v RSSL_DT_TIME_3\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_TIME_3}
{\b {\i RSSL_DT_TIME_3{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(77) 3 byte time, includes hours, minutes, and seconds. \par \par
}{\xe \v RSSL_DT_TIME_5\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_TIME_5}
{\b {\i RSSL_DT_TIME_5{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(78) 5 byte time, includes hours, minutes, seconds and milliseconds. \par \par
}{\xe \v RSSL_DT_DATETIME_7\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_DATETIME_7}
{\b {\i RSSL_DT_DATETIME_7{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(79) 7 byte datetime, includes date (month, day, and year), hours, minutes, seconds. \par \par
}{\xe \v RSSL_DT_DATETIME_9\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_DATETIME_9}
{\b {\i RSSL_DT_DATETIME_9{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(80) 9 byte datetime, includes date (month, day, and year), hours, minutes, seconds, milliseconds. \par \par
}{\xe \v RSSL_DT_DATETIME_11\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_DATETIME_11}
{\b {\i RSSL_DT_DATETIME_11{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(81) 11 byte datetime, includes date (month, day, and year), hours, minutes, seconds, milliseconds, and microseconds. \par \par
}{\xe \v RSSL_DT_DATETIME_12\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_DATETIME_12}
{\b {\i RSSL_DT_DATETIME_12{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(82) 12 byte datetime, includes date (month, day, and year), hours, minutes, seconds, milliseconds, microseconds, and nanoseconds. \par \par
}{\xe \v RSSL_DT_TIME_7\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_TIME_7}
{\b {\i RSSL_DT_TIME_7{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(83) 7 byte time, includes hours, minutes, seconds, milliseconds, and microseconds. \par \par
}{\xe \v RSSL_DT_TIME_8\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_TIME_8}
{\b {\i RSSL_DT_TIME_8{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(84) 8 byte time, includes hours, minutes, seconds, milliseconds, microseconds, and nanoseconds. \par \par
}{\xe \v RSSL_DT_SET_PRIMITIVE_MAX\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_SET_PRIMITIVE_MAX}
{\b {\i RSSL_DT_SET_PRIMITIVE_MAX{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum allowed value for set defined primitive types - used for internal UPA range checking \par \par
}{\xe \v RSSL_DT_CONTAINER_TYPE_MIN\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_CONTAINER_TYPE_MIN}
{\b {\i RSSL_DT_CONTAINER_TYPE_MIN{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum allowed value for container types - used for internal UPA range checking \par \par
}{\xe \v RSSL_DT_NO_DATA\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_NO_DATA}
{\b {\i RSSL_DT_NO_DATA{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(128) No Data \par (129) Reserved \par \par
}{\xe \v RSSL_DT_OPAQUE\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_OPAQUE}
{\b {\i RSSL_DT_OPAQUE{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(130) Opaque data, use Non-RWF type encoders. \par \par
}{\xe \v RSSL_DT_XML\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_XML}
{\b {\i RSSL_DT_XML{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(131) XML formatted data, use Non-RWF type encoders. \par \par
}{\xe \v RSSL_DT_FIELD_LIST\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_FIELD_LIST}
{\b {\i RSSL_DT_FIELD_LIST{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(132) Field List container type, used to represent content using fieldID - value pair data. \par \par
}{\xe \v RSSL_DT_ELEMENT_LIST\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_ELEMENT_LIST}
{\b {\i RSSL_DT_ELEMENT_LIST{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(133) Element List container type, used to represent content containing element name, dataType, and value triples. \par \par
}{\xe \v RSSL_DT_ANSI_PAGE\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_ANSI_PAGE}
{\b {\i RSSL_DT_ANSI_PAGE{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(134) ANSI page format, use Non-RWF type encoders. \par \par
}{\xe \v RSSL_DT_FILTER_LIST\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_FILTER_LIST}
{\b {\i RSSL_DT_FILTER_LIST{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(135) Filter List container type, used to represent content using filterID - container type paired entries. \par \par
}{\xe \v RSSL_DT_VECTOR\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_VECTOR}
{\b {\i RSSL_DT_VECTOR{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(136) Vector container type, used to represent index - container type paired entries. \par \par
}{\xe \v RSSL_DT_MAP\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_MAP}
{\b {\i RSSL_DT_MAP{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(137) Map container type, used to represent primitive type key - container type paired entries. \par \par
}{\xe \v RSSL_DT_SERIES\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_SERIES}
{\b {\i RSSL_DT_SERIES{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(138) Series container type, represents row based tabular information where no specific indexing is required. \par \par
}{\xe \v RSSL_DT_MSG\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_MSG}
{\b {\i RSSL_DT_MSG{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(141) {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} container type. This can be used to nest a message inside another message (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} containing an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}) or nesting a message inside of another container entry (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} contains an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}). \par \par
}{\xe \v RSSL_DT_JSON\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_JSON}
{\b {\i RSSL_DT_JSON{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(142) JSON formatted data, use Non-RWF type encoders. \par \par
}{\xe \v RSSL_DT_CONTAINER_TYPE_MAX\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_CONTAINER_TYPE_MAX}
{\b {\i RSSL_DT_CONTAINER_TYPE_MAX{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum supported container type value for this release - used for internal UPA range checking \par \par
}{\xe \v RSSL_DT_MAX_RESERVED\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_MAX_RESERVED}
{\b {\i RSSL_DT_MAX_RESERVED{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(224) Maximum Thomson Reuters reserved value. Values beyond this can be user defined types \par \par
}{\xe \v RSSL_DT_LAST\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:RSSL_DT_LAST}
{\b {\i RSSL_DT_LAST{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(255) Maximum allowed enumeration value - used for internal UPA range checking. \par \par
}}
\par
{
Definition at line 20 of file rsslDataTypeEnums.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDataTypeToString\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:rsslDataTypeToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDataTypeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 {\i type})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} \par
}}}
{\xe \v rsslIsContainerType\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:rsslIsContainerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFT" }{}}{\fldrslt {\cs37\ul\cf2 rsslIsContainerType}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 {\i dataType})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataType} \cell }{RsslDataTypes enumerated value to check \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE if passed in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} enumeration is a valid container type (128 - 255) or RSSL_FALSE if not. \par
}}{
Definition at line 173 of file rsslDataTypeEnums.h.}\par
}
{\xe \v rsslIsPrimitiveType\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:rsslIsPrimitiveType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 rsslIsPrimitiveType}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 {\i dataType})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataType} \cell }{RsslDataTypes enumerated value to check \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE if passed in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}} enumeration is a valid primitive type (0 - 127) or RSSL_FALSE if not. \par
}}{
Definition at line 156 of file rsslDataTypeEnums.h.}\par
}
{\xe \v rsslPrimitiveTypeSize\:Overview: Transport API Primitive and Container Type Enumerations}
{\xe \v Overview: Transport API Primitive and Container Type Enumerations\:rsslPrimitiveTypeSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 rsslPrimitiveTypeSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 {\i dataType})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the passed in type is a valid primitive type (0 - 128)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataType} \cell }{RsslDataTypes enumerated value to return encoded size for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataTypes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}} containing the maximum encoded length when this can be determined. 255 (0xFF) is returned for types that contain buffer content and the length varies based on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}}. 0 is returned for invalid types. \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Overview: Transport API Primitive Type Encode/Decode Interface Functions\par \pard\plain 
{\tc\tcl2 \v Overview: Transport API Primitive Type Encode/Decode Interface Functions}
{\xe \v Overview: Transport API Primitive Type Encode/Decode Interface Functions}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This section contains a listing of the Transport API encode and decode functions available for Primitive Types.\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Signed Integer Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v Signed Integer Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} primitive type allows the user to represent signed integers ranging from -2{\super 63}  to 2{\super 63}  - 1.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeInt()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeInt()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFX" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unsigned Integer Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v Unsigned Integer Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} primitive type allows the user to represent signed integers ranging from 0 to 2{\super 64}  - 1.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeUInt()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeUInt()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Float Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v Float Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} primitive type allows the user to represent 4-byte IEEE-754 floating point values.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFloat()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFloat()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Double Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v Double Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} primitive type allows the user to represent 8-byte IEEE-754 floating point values.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDouble()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDouble()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Buffer and String Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v Buffer and String Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} primitive type allows the user to represent length specified content. This includes various string types (ASCII, RMTES, UTF8) or non-string opaque content.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeBuffer()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} primitive type. This will copy contents into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeBuffer()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} primitive type. This will point to the contents in the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}. For performance purposes, contents will not be copied.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Date Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v Date Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} primitive type allows the user to represent a date containing a month, day, and year.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDate()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDate()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Time Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v Time Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} primitive type allows the user to represent a time containing hour, minute, second, and millisecond information.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeTime()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeTime()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DateTime Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v DateTime Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} primitive type allows the user to represent a date and time containing month, day, year, hour, minute, second, and millisecond information.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDateTime()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDateTime()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGE" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Enum Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v Enum Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} primitive type allows the user to represent unsigned 2-byte value, typically corresponding to an enumerated value that can be cross-referenced with an enum dictionary.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnum()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeEnum()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGH" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Array Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v Array Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} is a uniform primitive type that can contain multiple simple primitive entries. Entries can be either fixed length or variable length.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayInit()}}} - Begins array encoding, initial function to call when encoding an array type. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayComplete()}}} - Completes encoding of array, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry()}}} - Encodes entry into an array. Can be primitive representation or pre-encoded. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArray()}}} - Decodes an array container and provides access to buffer containing all encoded array entries. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArrayEntry()}}} - Decodes array entries and provides access to individual array entries. Primitive decode functions can be used to decode individual array entry into primitive representation. \par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGI" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QoS Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v QoS Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} primitive type allows the user to represent quality of service information, including timeliness (data age) and rate (data's period of change), associated with the content being sent or recieved. {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAII" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeQos()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeQos()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGF" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
State Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v State Encoding/Decoding Interface Function List}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} primitive type allows the user to convey data and stream health information.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeState()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeState()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGG" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Reference Group}}} for more information.\par\par\par\par}
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RMTES Decoding Interface Function List
\par}
{\tc\tcl2 \v RMTES Decoding Interface Function List}
The RMTES decoding interface allows the user to decode and print RMTES encoded data. These functions take in an RsslBuffer which contains encoded RMTES data, and converts the data to a user-readable UTF-8 or UCS2 unicode encoded string.\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESApplyToCache()}}} - Copies the data provided to the cache location. This also will apply any marketfeed update logic to the cache(if present).\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUTF8()}}} - Decodes the provided {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} to a UTF-8 encoded 8-bit character string.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUCS2()}}} - Decodes the provided {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} to a UCS2 encoded 16-bit integer string.\par\par \par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 RMTES Decoder Reference Group}}} for more information.\par\par\par \par}
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Overview: Transport API Container Type Encode/Decode Interface Functions\par \pard\plain 
{\tc\tcl2 \v Overview: Transport API Container Type Encode/Decode Interface Functions}
{\xe \v Overview: Transport API Container Type Encode/Decode Interface Functions}
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This section contains a listing of the Transport API encode and decode functions available for Container Types.\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v RsslFieldList Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} container and provides access to buffer containing all encoded field entries.\par \par}
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
RsslFieldEntry Encoding/Decoding Interface Function List
\par}
{\tc\tcl3 \v RsslFieldEntry Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} is being encoded from a base primitive type passed in via void*, has pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}}, or is blank where void* is NULL and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}} is empty.  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} that houses a non pre-encoded container.  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} entries and provides access to individual field entry content. If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UNKNOWN}}}, type should be determined by looking up {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} in appropriate field dictionary file. If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} is populated, this decoder should be used to continue to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} contents. \par \par}
\par}
\par}
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v RsslElementList Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} container and provides access to buffer containing all encoded element entries.\par \par}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
RsslElementEntry Encoding/Decoding Interface Function List
\par}
{\tc\tcl3 \v RsslElementEntry Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} is being encoded from a base primitive type passed in via void*, has pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}}, or is blank where void* is NULL and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}} is empty.  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} that houses a non pre-encoded container.  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} entries and provides access to individual element entry content. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}} decoder should be used to continue to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} contents. \par \par}
\par}
\par}
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v RsslMap Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}} - Completes encoding of set definitions on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, called after set definitions (if any) are encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be encoded and this function should be called prior to any summary data encoding. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}} - Completes encoding of summary data on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, called after summary data is encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be completed first, followed by any summary data encoding and this function. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} container and provides access to buffer containing all encoded map entries.\par \par}
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
RsslMapEntry Encoding/Decoding Interface Function List
\par}
{\tc\tcl3 \v RsslMapEntry Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} has no payload or has pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encData}}}. Entry key can be passed in and encoded via this function or can be populated in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} if preencoded. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} without pre-encoded payload. Entry key can be passed in and encoded via this function or can be populated in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} if preencoded. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMapEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} entries and provides access to individual map entries and their keys. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} decode functions can be used to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} contents. \par \par}
\par}
\par}
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v RsslVector Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}} - Completes encoding of set definitions on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, called after set definitions (if any) are encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be encoded and this function should be called prior to any summary data encoding. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}} - Completes encoding of summary data on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, called after summary data is encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be completed first, followed by any summary data encoding and this function. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} container and provides access to buffer containing all encoded vector entries.\par \par}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
RsslVectorEntry Encoding/Decoding Interface Function List
\par}
{\tc\tcl3 \v RsslVectorEntry Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} has no payload or has pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::encData}}}. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} without pre-encoded payload.  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVectorEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} entries and provides access to individual map entries and their indexes. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}} decode functions can be used to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} contents. \par \par}
\par}
\par}
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v RsslSeries Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}} - Completes encoding of set definitions on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, called after set definitions (if any) are encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be encoded and this function should be called prior to any summary data encoding. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}} - Completes encoding of summary data on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, called after summary data is encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be completed first, followed by any summary data encoding and this function. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} container and provides access to buffer containing all encoded series entries.\par \par}
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
RsslSeriesEntry Encoding/Decoding Interface Function List
\par}
{\tc\tcl3 \v RsslSeriesEntry Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} has no payload or has pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry::encData}}}. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} without pre-encoded payload.  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeriesEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} entries and provides access to individual series entries. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}} decode functions can be used to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} contents. \par \par}
\par}
\par}
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Encoding/Decoding Interface Function List
\par}
{\tc\tcl2 \v RsslFilterList Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterList()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} container and provides access to buffer containing all encoded filter entries.\par \par}
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
RsslFilterEntry Encoding/Decoding Interface Function List
\par}
{\tc\tcl3 \v RsslFilterEntry Encoding/Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} into an RsslFilter, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} has no payload or has pre-encoded content set in RsslFilterEntryEntry::encData. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} without pre-encoded payload.  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterEntry()}}} - Decodes RsslFilter entries and provides access to individual filter entries. RsslFilter::containerType or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}} decode functions can be used to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} contents. \par \par}
\par}
\par}
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Overview: Transport API Message Encode/Decode Interface Functions\par \pard\plain 
{\tc\tcl2 \v Overview: Transport API Message Encode/Decode Interface Functions}
{\xe \v Overview: Transport API Message Encode/Decode Interface Functions}
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This section contains a listing of the Transport API encode and decode functions available for the Transport API Messages.\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsg Encoding Interface Function List
\par}
{\tc\tcl2 \v RsslMsg Encoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} from a fully populated message structure. If any message key attributes ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}), RsslMsgBase::extendedHeader, or payload ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}) are required, these must be set prior to this function call.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, where header encoding will return control to the user so any message key attributes ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}), RsslMsgBase::extendedHeader, or payload ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}) content can be encoded. When encoding is complete, the user must call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete()}}}. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} - Used invoking {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}}, if the application indicated that message key attributes ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}) should be encoded but did not provide them as pre-encoded. After {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} returns and the application has completed their attribute encoding, this function is called to complete attribute encoding in the message and allow for encoding any further payload or extended header content. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} - Used invoking {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}}, if the application indicated that the extended header should be encoded but did not provide it as pre-encoded. After {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} if needing to encode attributes) returns and the application has completed their extended header encoding, this function is called to complete extended header encoding in the message and allow for encoding any further payload. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete()}}} - Completes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} encoding. This is performed after completing all other portions of message encoding (e.g., after {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} completes and, if needed, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} and/or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} complete. \par \par\par \par}
\par}
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsg Decoding Interface Function List
\par}
{\tc\tcl2 \v RsslMsg Decoding Interface Function List}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg()}}} - Decodes encoded message information into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. Any message key attribute ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}), extended header, and payload ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}) will not be decoded by this function call. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsgKeyAttrib()}}} - If intending to decode any message key attribute ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}) using the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} used when calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg()}}}, this function ensures the iterator is in the proper state to decode the attributes. This is necessary when using the same iterator because the attribute and the payload may have the same type, which introduces ambiguity in the users intent. \par \par\par \par}
\par}
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API\par \pard\plain 
{\tc\tcl2 \v Transport API}
{\xe \v Transport API}
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Transport API provides the interface to a reliable transport that is capable of communicating with other OMM-based components. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceOptions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Trace Options structure used to configure XML Tracing. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Transport Common Data Structures and Enumerations}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Common Data Structures and Enumerations are used by the RSSL API to store information. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Initialization and Uninitialization}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are used to allocate internal memory and boot strap any underlying dependencies used by the RSSL Transport. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Server Operations}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Server structure is used to create and maintain a listening socket that allows the application to accept connections created with rsslConnect. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Channel Operations}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Channel structure is used to represent a connection between two components that can send and receive information across a network. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceCodes}}}
 \{ {\b RSSL_TRACE_READ} =  0x00000001, 
{\b RSSL_TRACE_WRITE} =  0x00000002, 
{\b RSSL_TRACE_PING} =  0x00000004, 
{\b RSSL_TRACE_HEX} =  0x00000008, 
{\b RSSL_TRACE_TO_FILE_ENABLE} =  0x00000010, 
{\b RSSL_TRACE_TO_MULTIPLE_FILES} =  0x00000020, 
{\b RSSL_TRACE_TO_STDOUT} =  0x00000040
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Trace codes used for setting {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceOptions}}} flags. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 rsslBufferToHexDump}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *bufferToHexDump, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *hexDumpOutput, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 valuesPerLine, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Will convert buffer's contents to a formatted hex dump. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 rsslCalculateEncryptedSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *bufferToEncrypt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates necessary buffer size to encrypt content into. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 rsslCalculateHexDumpOutputSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *bufferToHexDump, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 valuesPerLine)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates necessary buffer size to convert the buffer to a hex dump output. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMV" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearTraceOptions}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceOptions}}}
 *traceOptions)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trace Options dynamic initialization. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecryptBuffer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *bufferToDecrypt, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *decryptedOutput, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If possible, will perform decryption of passed in encrypted contents. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncryptBuffer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *bufferToEncrypt, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *encryptedOutput, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If possible, will perform weak encryption of passed in contents. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslQueryTransportLibraryVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
 *pVerInfo)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Programmatically extracts library and product version information that is compiled into this library. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslTraceCodes\:Transport API}
{\xe \v Transport API\:RsslTraceCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceCodes}}}
}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceOptions}}} \par
}}{
Definition at line 1450 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslBufferToHexDump\:Transport API}
{\xe \v Transport API\:rsslBufferToHexDump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 rsslBufferToHexDump}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i bufferToHexDump}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i hexDumpOutput}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i valuesPerLine}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par User populates bufferToHexDump with content they want to encrypt. User calculates necessary size for hex dump output buffer by calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 rsslCalculateHexDumpOutputSize()}}} User will then typically get or create a buffer of this size. Once buffer is obtained, bufferToHexDump and the buffer for the hex dump formatted output can be passed to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 rsslBufferToHexDump()}}}, which will dump the formatted hex.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bufferToHexDump} \cell }{RsslBuffer populated with content the user wants to dump as formatted hex. buffer->length should represent the number of bytes contained in buffer->data and buffer->data should hold unencrypted content. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hexDumpOutput} \cell }{RsslBuffer with appropriate space to dump formatted hex into. buffer->length should represent the number of bytes available in buffer->data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valuesPerLine} \cell }{Numeric value indicating how many hex values to represent per line in the formatted hex dump output. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RsslRet return value indicating success or failure type. \par
}}}
{\xe \v rsslCalculateEncryptedSize\:Transport API}
{\xe \v Transport API\:rsslCalculateEncryptedSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 rsslCalculateEncryptedSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i bufferToEncrypt})}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par User populates bufferToEncrypt with content they want to encrypt. Calling this method will return the size of the buffer needed to contain the encrypted output. User will then typically get or create a buffer of this size. Once buffer is obtained, bufferToEncrypt and the buffer for encrypted output can be passed to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncryptBuffer()}}}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bufferToEncrypt} \cell }{RsslBuffer populated with content the user wants to calculate encrypted size of. buffer->length should represent the number of bytes contained in buffer->data. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslUInt32 Number of bytes needed in an RsslBuffer to encrypt contents into \par
}}}
{\xe \v rsslCalculateHexDumpOutputSize\:Transport API}
{\xe \v Transport API\:rsslCalculateHexDumpOutputSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMU" }{}}{\fldrslt {\cs37\ul\cf2 rsslCalculateHexDumpOutputSize}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i bufferToHexDump}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i valuesPerLine})}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par User populates bufferToHexDump with content they want to dump as hex. Calling this method will return the size of the buffer needed to contain the hex dump output. User will then typically get or create a buffer of this size. Once buffer is obtained, bufferToHexDump and the buffer for the hex dump output can be passed to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 rsslBufferToHexDump()}}}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bufferToHexDump} \cell }{RsslBuffer populated with content the user wants to calculate hex dump size of. buffer->length should represent the number of bytes contained in buffer->data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valuesPerLine} \cell }{Numeric value indicating how many hex values to represent per line in the formatted hex dump output. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslUInt32 Number of bytes needed in an RsslBuffer to successfully dump hex formatted contents into \par
}}}
{\xe \v rsslClearTraceOptions\:Transport API}
{\xe \v Transport API\:rsslClearTraceOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMV" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearTraceOptions}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceOptions}}}
 * {\i traceOptions})}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This initializes the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceOptions}}}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opts} \cell }{traceOptions \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAML" }{}}{\fldrslt {\cs37\ul\cf2 RsslTraceOptions}}} \par
}}{
Definition at line 1479 of file rsslTransport.h.}\par
}
{\xe \v rsslDecryptBuffer\:Transport API}
{\xe \v Transport API\:rsslDecryptBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecryptBuffer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i bufferToDecrypt}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i decryptedOutput}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par User populates bufferToDecrypt with encrypted content they want to decrypt. User will populated a buffer to decrypt into with sufficient space to properly decrypt, generally bufferToDecrypt->length bytes will be sufficient space for decryptedOutput buffer to perform proper decryption. bufferToDecrypt and the buffer for decrypted output can be passed to to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecryptBuffer()}}}, which will attempt decryption. If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} has a valid decryption key and the passed in buffers are valid, contents will be decrypted. If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} does not have a valid decryption key, most likely due to the connection not having the ability to perform proper key exchange, contents will not be decrypted and an error will be returned.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} to decrypt contents for transmission on. Each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} may have a different decryption key, including no decryption key. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bufferToDecrypt} \cell }{RsslBuffer populated with content the user wants to decrypt. buffer->length should represent the number of bytes contained in buffer->data and buffer->data should contain encrypted content. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i decryptedOutput} \cell }{RsslBuffer with appropriate space to decrypt into. buffer->length should represent the number of bytes available in buffer->data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RsslRet return value indicating success or failure type. \par
}}}
{\xe \v rsslEncryptBuffer\:Transport API}
{\xe \v Transport API\:rsslEncryptBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncryptBuffer}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i bufferToEncrypt}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i encryptedOutput}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par User populates bufferToEncrypt with content they want to encrypt. User calculates necessary size for encrypted output buffer by calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 rsslCalculateEncryptedSize()}}} User will then typically get or create a buffer of this size. Once buffer is obtained, bufferToEncrypt and the buffer for encrypted output can be passed to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncryptBuffer()}}}, which will attempt encryption. If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} has a valid encryption key and the passed in buffers are valid, contents will be encrypted. If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} does not have a valid encryption key, most likely due to the connection not having the ability to perform proper key exchange, contents will not be encrypted and an error will be returned.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} to encrypt contents for transmission on. Each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} may have a different encryption key, including no encryption key. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bufferToEncrypt} \cell }{RsslBuffer populated with content the user wants to encrypt. buffer->length should represent the number of bytes contained in buffer->data and buffer->data should hold unencrypted content. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i encryptedOutput} \cell }{RsslBuffer with appropriate space to encrypt into. buffer->length should represent the number of bytes available in buffer->data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RsslRet return value indicating success or failure type. \par
}}}
{\xe \v rsslQueryTransportLibraryVersion\:Transport API}
{\xe \v Transport API\:rsslQueryTransportLibraryVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslQueryTransportLibraryVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
 * {\i pVerInfo})}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User can call this function to programmatically extract version information, or \par query version information externally (via 'strings' command or something similar\par and grep for the following tags:\par 'VERSION' - contains internal library version information such as node number (e.g. rssl1.4.F2)\par 'PRODUCT' - contains product information such as load/package naming (e.g. upa7.0.0.L1)\par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVerInfo} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}} structure to populate with library version information \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Wire Format Codec API\par \pard\plain 
{\tc\tcl2 \v Transport API Wire Format Codec API}
{\xe \v Transport API Wire Format Codec API}
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Wire Format Encoder/Decoder Package manages the binary representation of OMM content, ranging from simple primitive types up through more robust container and message types. This package is required by any application encoding or decoding OMM content. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Codec Common Structures}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Codec Common Structures are used to encode and decode all OMM Messages, Primitives, and Containers. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Wire Format Data Package}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Data Package manages the binary representation of OMM data payload, ranging from simple primitive types through comprehensive hierarchal container types. This package is required by any application encoding or decoding OMM data payloads. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Wire Format Message Package}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Message Package manages the binary representation of OMM messages, ranging from requests and responses to bi-directional generic messages. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 Thomson Reuters Domain Models}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Thomson Reuters Domain Model Package contains the enumerations and data structures used with Thomson Reuters provided domain message models. This content is available through the Thomson Reuters Enterprise Platform, EleKtron, Reuters Data Feed Direct, and various other sources. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Codec Common Structures\par \pard\plain 
{\tc\tcl2 \v Transport API Codec Common Structures}
{\xe \v Transport API Codec Common Structures}
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Codec Common Structures are used to encode and decode all OMM Messages, Primitives, and Containers. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Iterator Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transport API encode and decode iterators are used to manage the process for all RWF encoding and decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Library Version Information Structure}}}
\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Iterator Reference Group\par \pard\plain 
{\tc\tcl2 \v Transport API Iterator Reference Group}
{\xe \v Transport API Iterator Reference Group}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transport API encode and decode iterators are used to manage the process for all RWF encoding and decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Iterator functionality is defined in  "rtr/rsslIterators.h"\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Iterator Overview
\par}
{\tc\tcl2 \v Transport API Iterator Overview}
When encoding or decoding RWF content with Transport API, the user leverages an iterator to manage the encoding or decoding process. Transport API defines a single encode iterator type ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}) and a single decode iterator type ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}). A single instance of this iterator can manage the full depth and breadth of the encoding or decoding process. Alternatly, multiple iterator instances can be used to individually manage separate portions of the encode or decode process. \par\par The Transport API encoder/decoder does not provide any inherent threading or locking capability. Separate iterator and type instances do not cause contention and do not share resources between instances. Any needed threading, locking, or thread-model implementation is at the discretion of the application. Different application threads can encode or decode different messages without requiring a lock; thus each thread must use its own iterator instance and each message should be encoded or decoded using unique and independent buffers. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Though possible, Thomson Reuters recommends that you do not encode or decode related messages (messages flowing on the same stream) on different threads as this can impact the delivery order.\par
}See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 Iterator RWF Protocol Versioning}}} for information about encoding or decoding the correct version of RWF with the iterator.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Decode Iterator}}} for information and examples related to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for information and examples related to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 Iterator RWF Protocol Versioning}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RWF versioning and the iterator. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABE" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Decode Iterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the RsslDecodeIterator. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the RsslEncodeIterator. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ITER_MAX_LEVELS}}}
\~ 16\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encoding or Decoding depth supported with a single RSSL Iterator. If a domain model requires deeper than RSSL_ITER_MAX_LEVELS levels, multiple iterators or pre-encoded data can be used to nest as deep as required. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_ITER_MAX_LEVELS\:Transport API Iterator Reference Group}
{\xe \v Transport API Iterator Reference Group\:RSSL_ITER_MAX_LEVELS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ITER_MAX_LEVELS}}}
\~ 16}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}}{
Definition at line 66 of file rsslIterators.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Iterator RWF Protocol Versioning\par \pard\plain 
{\tc\tcl2 \v Iterator RWF Protocol Versioning}
{\xe \v Iterator RWF Protocol Versioning}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RWF versioning and the iterator. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API iterators help the user to manage version information associated with the RWF content being exchanged. When using the Transport API the protocol type and version information can be exchanged and negotiated on the connection (via the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}}). The Transport API will reject any connection establishment when the protocol type does not match across the connection. If the protocol type does match, an appropriate major and minor version will be determined and this should be the version of RWF encoded or decoded when using this connection. After the connection becomes active, this negotiated version information is available and can then be provided to the iterator to ensure that the proper version is encoded or decoded. If not using the Transport API, the user can determine the desired version of RWF to encode and specify this information on their iterator. Transport API provides RWF protocol type and protocol version values in  "rtr\\rsslIterators.h" for this purpose. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Specifying appropriate version information on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is important to future-proof applications and avoid incompatability if new RWF functionality is added.\par
}{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Iterator Versioning Examples
\par}
{\tc\tcl2 \v Transport API Iterator Versioning Examples}
The following code example demonstrates associating version information with a Transport API iterator. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslEncodeIterator on the stack (this is the same process for RsslDecodeIterator)\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 encIter;\par
    //Clear iterator\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator}}}
(&encIter);\par
    //Associate RWF version (note that the clear function sets this to the \par
    //default version - this only needs to be set if desired encode or decode version is different.\par
    if ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}
(&encIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MAJOR_VERSION}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MINOR_VERSION}}}
) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}}
)\par
    \{\par
        //Handle error appropriatley \par
        return 0;\par
    \}\par
\par
    //--------------------------------------------------------\par
\par
    //Version information is typically negotiated by the Transport API and can be\par
    //obtained from the RsslChannel after it becomes ACTIVE.\par
    if ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}
(&encIter, pChnl->majorVersion, pChnl->minorVersion) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}}
)\par
    \{\par
        //Handle error appropriatley \par
        return 0;\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MAJOR_VERSION}}}
\~ 14\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Version Major number for the version of RWF supported by this Message and Data package. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MAX_SUPPORTED_MAJOR_VERSION}}}
\~ 14\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum supported RWF versions that this library can encode or decode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MIN_SUPPORTED_MAJOR_VERSION}}}
\~ 14\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum supported RWF versions that this library can encode or decode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MINOR_VERSION}}}
\~ 1\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Version Minor number for the version of RWF supported by this Message and Data package. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_PROTOCOL_TYPE}}}
\~ 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protocol type definition for RWF, can be used in conjunction transport layer to indicate protocol being used on the connection. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_RWF_MAJOR_VERSION\:Iterator RWF Protocol Versioning}
{\xe \v Iterator RWF Protocol Versioning\:RSSL_RWF_MAJOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MAJOR_VERSION}}}
\~ 14}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}} \par
}}{
Definition at line 30 of file rsslIterators.h.}\par
}
{\xe \v RSSL_RWF_MAX_SUPPORTED_MAJOR_VERSION\:Iterator RWF Protocol Versioning}
{\xe \v Iterator RWF Protocol Versioning\:RSSL_RWF_MAX_SUPPORTED_MAJOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MAX_SUPPORTED_MAJOR_VERSION}}}
\~ 14}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}} \par
}}{
Definition at line 43 of file rsslIterators.h.}\par
}
{\xe \v RSSL_RWF_MIN_SUPPORTED_MAJOR_VERSION\:Iterator RWF Protocol Versioning}
{\xe \v Iterator RWF Protocol Versioning\:RSSL_RWF_MIN_SUPPORTED_MAJOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MIN_SUPPORTED_MAJOR_VERSION}}}
\~ 14}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}} \par
}}{
Definition at line 48 of file rsslIterators.h.}\par
}
{\xe \v RSSL_RWF_MINOR_VERSION\:Iterator RWF Protocol Versioning}
{\xe \v Iterator RWF Protocol Versioning\:RSSL_RWF_MINOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MINOR_VERSION}}}
\~ 1}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}} \par
}}{
Definition at line 36 of file rsslIterators.h.}\par
}
{\xe \v RSSL_RWF_PROTOCOL_TYPE\:Iterator RWF Protocol Versioning}
{\xe \v Iterator RWF Protocol Versioning\:RSSL_RWF_PROTOCOL_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_PROTOCOL_TYPE}}}
\~ 0}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid rsslConnectOpts, rsslBindOpts, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 rsslBind}}} \par
}}{
Definition at line 24 of file rsslIterators.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Decode Iterator\par \pard\plain 
{\tc\tcl2 \v Transport API Decode Iterator}
{\xe \v Transport API Decode Iterator}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the RsslDecodeIterator. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All RWF decoding requires the use of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}, where a single iterator can manage the full decoding process. For instance, if the application is decoding a message containing an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} can be used to decode the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, all {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, and all types (primitive types or container types) housed in the entries. Seperate iterators can be used as well, depending on the needs of the application. Following the same example, one {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} can be used to decode the message information (up to the beginning of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} payload). Another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} reference can be used to decode the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and entries, and if desired, other iterators can be used to decode the contents of each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}.\par\par Before decoding begins, the iterator should be initialized to ready it for decoding. Initialization consists of several steps. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator()}}} function can be used to initialize (or re-initialize for reuse) the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}. After clearing, an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing the content to decode should be associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}. In addition, RWF version information should be provided to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} so the desired version of RWF is decoded.\par\par{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDecodeIterator Example
\par}
{\tc\tcl2 \v RsslDecodeIterator Example}
The following code example demonstrates creation of the Transport API decode iterator and associating with buffer to decode. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslDecodeIterator on the stack \par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANV" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 decIter;\par
    //Clear iterator, using default wire format version (if not using default version \par
    //this should be set using rsslSetDecodeIteratorRWFVersion()\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator}}}
(&decIter);\par
    //Associate buffer to decode with the iterator\par
    if ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer}}}
(&decIter, &decBuf) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}}
)\par
    \{\par
        //Handle error appropriatley \par
        return 0;\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANV" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator used for RWF decoding. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DECODE_ITERATOR}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} static initialization, defaults to use current version of RWF }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANV" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator used for RWF decoding. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an RsslDecodeIterator, defaults to use current version of RWF. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANY" }{}}{\fldrslt {\cs37\ul\cf2 rsslFinishDecodeEntries}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish decoding a container if application does not want to finish decoding remaining container entries. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to decode from on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} should point to memory to decode, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} should be set to number of bytes pointed to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b rsslSetDecodeIteratorGlobalElementListSetDB} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 *pDb){\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b rsslSetDecodeIteratorGlobalFieldListSetDB} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 *pDb){\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 rwfMajorVersion, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 rwfMinorVersion)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the RWF version to decode with this iterator. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 Iterator RWF Protocol Versioning}}} for more information about RWF versioning. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_DECODE_ITERATOR\:Transport API Decode Iterator}
{\xe \v Transport API Decode Iterator\:RSSL_INIT_DECODE_ITERATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DECODE_ITERATOR}}}
}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MAJOR_VERSION}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MINOR_VERSION}}}
, -1, 0, 0, \{ \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL, \\\par
    RSSL_INIT_DECODING_LEVEL \\\par
\}\}\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
After clearing an iterator, the buffer needs to be set using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer()}}}. If using a different RWF version, this should be set using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion()}}}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Because this clears every member of every level of the iterator, this should not be used to achieve best performance. Use the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator()}}} as it clears only necessary members. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator}}} \par
}}{
Definition at line 422 of file rsslIterators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v RsslDecodeIterator\:Transport API Decode Iterator}
{\xe \v Transport API Decode Iterator\:RsslDecodeIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANV" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator}}}
  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}} \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearDecodeIterator\:Transport API Decode Iterator}
{\xe \v Transport API Decode Iterator\:rsslClearDecodeIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
After clearing an iterator, the buffer needs to be set using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer()}}}. If using a different RWF version, this should be set using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion()}}}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This should be used to achieve the best performance while clearing the iterator. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} to clear \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DECODE_ITERATOR}}} \par
}}{
Definition at line 385 of file rsslIterators.h.}\par
}
{\xe \v rsslFinishDecodeEntries\:Transport API Decode Iterator}
{\xe \v Transport API Decode Iterator\:rsslFinishDecodeEntries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANY" }{}}{\fldrslt {\cs37\ul\cf2 rsslFinishDecodeEntries}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once a user begins decoding a container, typically they must decode all entries in that container before continuing. This function may be used to skip straight to the end of the current container being decoded. \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call the appropriate container decoder(e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList()}}}).\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call the entry decoder until the desired entry is found(e.g. an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} with a particular fieldID).\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANY" }{}}{\fldrslt {\cs37\ul\cf2 rsslFinishDecodeEntries()}}} to complete decoding the container and continue encoding from level above (e.g. next {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} if decoding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} of field lists).\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslDecodeIterator used to decode container \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} when successful. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}}}
{\xe \v rsslSetDecodeIteratorBuffer\:Transport API Decode Iterator}
{\xe \v Transport API Decode Iterator\:rsslSetDecodeIteratorBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuffer})}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} to set buffer on \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to associate with iterator and decode from \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} is successfully associated with iterator, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if not, typically due to invalid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}}. \par
}}{
Definition at line 449 of file rsslIterators.h.}\par
}
{\xe \v rsslSetDecodeIteratorRWFVersion\:Transport API Decode Iterator}
{\xe \v Transport API Decode Iterator\:rsslSetDecodeIteratorRWFVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i rwfMajorVersion}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i rwfMinorVersion})}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid When using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator()}}}, the default RWF versions are set on the iterator. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} to set version information on \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rwfMajorVersion} \cell }{The major version of RWF to be decoded by this iterator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rwfMinorVersion} \cell }{The minor version of RWF to be decoded by this iterator \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MAJOR_VERSION}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MINOR_VERSION}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when version is properly associated with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise, typically if version is outside of this libraries supported values. \par
}}{
Definition at line 478 of file rsslIterators.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Encode Iterator\par \pard\plain 
{\tc\tcl2 \v Transport API Encode Iterator}
{\xe \v Transport API Encode Iterator}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the RsslEncodeIterator. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All RWF encoding requires the use of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, where a single iterator can manage the full encoding process. For instance, if the application is encoding a message containing an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} can be used to encode the message header information, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} information, each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, and the content of each entry (primitive types or container types). Seperate iterators can be used as well, depending on the needs of the application. Following the same example, one {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} can be used to pre-encode an entry's content. This pre-encoded content can then be set on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} and encoded using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that is encoding the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. This encoded field list content can then be set on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} and yet another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} can be used to encode the message and its pre-encoded payload.\par\parBefore encoding begins, the iterator should be initialized to ready it for the encoding process. Initialization consists of several steps. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator()}}} function can be used to initialize (or re-initalize for reuse) the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. After clearing, an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} with ample memory should be associated with the iterator; this will be the buffer that content is encoded into (if using with the Transport API, this is often a buffer obtained from the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetBuffer()}}} function so it can be immediatley written after encoding completes). In addition, RWF version information should be provided to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} so the desired version of RWF is encoded. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When encoding is complete, the user should query the length of encoded content, setting this information in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}}. If encoding fails, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} can be used to roll back content to the last successful encoding point. \par\par}{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEncodeIterator Example
\par}
{\tc\tcl2 \v RsslEncodeIterator Example}
The following code example demonstrates creation of the Transport API encode iterator and associating with buffer to encode into. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslEncodeIterator on the stack \par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 encIter;\par
    //Clear iterator, using default wire format version (if not using default version \par
    //this should be set using rsslSetEncodeIteratorRWFVersion()\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator}}}
(&decIter);\par
    //Associate buffer to encode into with the iterator\par
    if ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer}}}
(&encIter, &encBuf) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}}
)\par
    \{\par
        //Handle error appropriatley \par
        return 0;\par
    \}\par
\par
    //Do encoding using iterator\par
\par
    //Check encoded length and set on buffer after encoding is complete\par
    encBuf.length = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOG" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetEncodedBufferLength}}}
(&encIter);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator used for RWF encoding. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ENCODE_ITERATOR}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} static initialization, defaults to use current version of RWF }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator used for RWF encoding. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an RsslEncodeIterator, defaults to use current version of RWF. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOG" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetEncodedBufferLength}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the length of content encoded by this iterator since the last time it was cleared. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOI" }{}}{\fldrslt {\cs37\ul\cf2 rsslRealignEncodeIteratorBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pNewEncodeBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to associate {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} with a new, larger buffer when encoding requires more space (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}}). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to encode into on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} should point to memory to encode into, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} should be set to number of bytes pointed to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b rsslSetEncodeIteratorGlobalElementListSetDB} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 *pDb){\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b rsslSetEncodeIteratorGlobalFieldListSetDB} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 *pDb){\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 rwfMajorVersion, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 rwfMinorVersion)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the RWF version to encode with this iterator. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 Iterator RWF Protocol Versioning}}} for more information about RWF versioning. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_ENCODE_ITERATOR\:Transport API Encode Iterator}
{\xe \v Transport API Encode Iterator\:RSSL_INIT_ENCODE_ITERATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ENCODE_ITERATOR}}}
}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MAJOR_VERSION}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MINOR_VERSION}}}
, -1, \{ \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL, \\\par
    RSSL_INIT_ENCODING_LEVEL \\\par
\}\}\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
After clearing an iterator, the buffer needs to be set using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer()}}}. If using a different RWF version, this should be set using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Because this clears every member of every level of the iterator, this should not be used to achieve best performance. Use the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator()}}} as it clears only necessary members. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator}}} \par
}}{
Definition at line 231 of file rsslIterators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v RsslEncodeIterator\:Transport API Encode Iterator}
{\xe \v Transport API Encode Iterator\:RsslEncodeIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator}}}
  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}} \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearEncodeIterator\:Transport API Encode Iterator}
{\xe \v Transport API Encode Iterator\:rsslClearEncodeIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
After clearing an iterator, the buffer needs to be set using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer()}}}. If using a different RWF version, this should be set using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion()}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This should be used to achieve the best performance while clearing the iterator. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} to clear \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ENCODE_ITERATOR}}} \par
}}{
Definition at line 210 of file rsslIterators.h.}\par
}
{\xe \v rsslGetEncodedBufferLength\:Transport API Encode Iterator}
{\xe \v Transport API Encode Iterator\:rsslGetEncodedBufferLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOG" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetEncodedBufferLength}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par Can be used to determine the length of the buffer used so far as well as the length of encoded messages, buffers, element lists, etc.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator to return encoded length from \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslUInt32 current encoded length \par
}}{
Definition at line 319 of file rsslIterators.h.}\par
}
{\xe \v rsslRealignEncodeIteratorBuffer\:Transport API Encode Iterator}
{\xe \v Transport API Encode Iterator\:rsslRealignEncodeIteratorBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOI" }{}}{\fldrslt {\cs37\ul\cf2 rsslRealignEncodeIteratorBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pNewEncodeBuffer})}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOI" }{}}{\fldrslt {\cs37\ul\cf2 rsslRealignEncodeIteratorBuffer()}}} with the current {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} and the new larger buffer to complete encoding into.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Finish encoding using the new buffer using the same iterator you were using before.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The user must pass in a newly allocated buffer, and the function does not deallocate the previous buffer. Content from previous buffer will be copied into the new buffer so encoding can continue from where it left off. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} to associate new buffer with. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pNewEncodeBuffer} \cell }{Pointer to the larger {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to continue encoding into. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if new {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} is successfully associated with iterator, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise, typically due to new buffer not being sufficiently populated with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} \par
}}}
{\xe \v rsslSetEncodeIteratorBuffer\:Transport API Encode Iterator}
{\xe \v Transport API Encode Iterator\:rsslSetEncodeIteratorBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuffer})}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} to set buffer on \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to associate with iterator and encode into \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} is successfully associated with iterator, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if not, typically due to invalid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}}. \par
}}{
Definition at line 257 of file rsslIterators.h.}\par
}
{\xe \v rsslSetEncodeIteratorRWFVersion\:Transport API Encode Iterator}
{\xe \v Transport API Encode Iterator\:rsslSetEncodeIteratorRWFVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i rwfMajorVersion}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i rwfMinorVersion})}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid When using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator()}}}, the default RWF versions are set on the iterator. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} to set version information on \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rwfMajorVersion} \cell }{The major version of RWF to be encoded by this iterator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rwfMinorVersion} \cell }{The minor version of RWF to be encoded by this iterator \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MAJOR_VERSION}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RWF_MINOR_VERSION}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when version is properly associated with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise, typically if version is outside of this libraries supported values. \par
}}{
Definition at line 287 of file rsslIterators.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Wire Format Data Package\par \pard\plain 
{\tc\tcl2 \v Transport API Wire Format Data Package}
{\xe \v Transport API Wire Format Data Package}
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Data Package manages the binary representation of OMM data payload, ranging from simple primitive types through comprehensive hierarchal container types. This package is required by any application encoding or decoding OMM data payloads. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOL" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Data Common}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Data Package's common structures contain the necessary structures and helper functions to encode or decode any OMM formatted data. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOM" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Data Primitive Types}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Primitive Types are common typedef and structure definitions used to represent simple content like integers or length specified buffers. These are available for use by other packages and applications alike and are required by the Transport API Data, Transport API Message, Transport API Dictionary and Transport API Transport packages. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAON" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Data Container Structures}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Data Package's container structures are required to encode or decode OMM binary data. These structures are used to encode primitive and container Transport API data structures. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Data Common\par \pard\plain 
{\tc\tcl2 \v Transport API Data Common}
{\xe \v Transport API Data Common}
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Data Package's common structures contain the necessary structures and helper functions to encode or decode any OMM formatted data. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOO" }{}}{\fldrslt {\cs37\ul\cf2 Common Data Helper Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about common data utility helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOP" }{}}{\fldrslt {\cs37\ul\cf2 Common Data Conversion Helper Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about common data conversion helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOQ" }{}}{\fldrslt {\cs37\ul\cf2 Data Package Library Version}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This allows the user to programmatically extract version information about the library. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Common Data Helper Functions\par \pard\plain 
{\tc\tcl2 \v Common Data Helper Functions}
{\xe \v Common Data Helper Functions}
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about common data utility helper functions. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOR" }{}}{\fldrslt {\cs37\ul\cf2 rsslBufferIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuf1, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuf2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare the content of two RsslBuffers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOS" }{}}{\fldrslt {\cs37\ul\cf2 rsslCompareString}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuf1, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuf2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DEPRECATED: Compare two RsslBuffers as strings. Users should migrate to use rsslBufferIsEqual. May be used on strings that are not necessarily null-terminated, making it useful for comparing things like element names. Note: Do not call with null arguments. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOT" }{}}{\fldrslt {\cs37\ul\cf2 rsslCompareStringIgnoreCase}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuf1, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuf2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DEPRECATED: Compare two RsslBuffers as strings(ignoring case). Users should migrate to use rsslBufferIsEqual. May be used on strings that are not necessarily null-terminated, making it useful for comparing things like element names. Note: Do not call with null arguments. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslBufferIsEqual\:Common Data Helper Functions}
{\xe \v Common Data Helper Functions\:rsslBufferIsEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOR" }{}}{\fldrslt {\cs37\ul\cf2 rsslBufferIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuf1}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuf2})}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE if the buffers contain the same data, RSSL_FALSE if not. \par
}}{
Definition at line 30 of file rsslDataUtils.h.}\par
}
{\xe \v rsslCompareString\:Common Data Helper Functions}
{\xe \v Common Data Helper Functions\:rsslCompareString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOS" }{}}{\fldrslt {\cs37\ul\cf2 rsslCompareString}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuf1}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuf2})}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Positive value if pBuf1 is lexically greater, 0 if they are equal, or negative value if pBuf2 is lexically greater. \par
}}{
Definition at line 42 of file rsslDataUtils.h.}\par
}
{\xe \v rsslCompareStringIgnoreCase\:Common Data Helper Functions}
{\xe \v Common Data Helper Functions\:rsslCompareStringIgnoreCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOT" }{}}{\fldrslt {\cs37\ul\cf2 rsslCompareStringIgnoreCase}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuf1}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuf2})}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Positive value if pBuf1 is lexically greater, 0 if they are equal, or negative value if pBuf2 is lexically greater. \par
}}{
Definition at line 66 of file rsslDataUtils.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Common Data Conversion Helper Functions\par \pard\plain 
{\tc\tcl2 \v Common Data Conversion Helper Functions}
{\xe \v Common Data Conversion Helper Functions}
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about common data conversion helper functions. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 {\b rsslPrimitiveBaseType} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 dataType){\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Package Library Version\par \pard\plain 
{\tc\tcl2 \v Data Package Library Version}
{\xe \v Data Package Library Version}
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This allows the user to programmatically extract version information about the library. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOV" }{}}{\fldrslt {\cs37\ul\cf2 rsslQueryDataLibraryVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
 *pVerInfo)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Programmatically extracts library and product version information that is compiled into this library. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslQueryDataLibraryVersion\:Data Package Library Version}
{\xe \v Data Package Library Version\:rsslQueryDataLibraryVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOV" }{}}{\fldrslt {\cs37\ul\cf2 rsslQueryDataLibraryVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
 * {\i pVerInfo})}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User can call this function to programmatically extract version information, or \par query version information externally (via 'strings' command or something similar\par and grep for the following tags:\par 'VERSION' - contains internal library version information such as node number (e.g. rssl1.4.F2)\par 'PRODUCT' - contains product information such as load/package naming (e.g. upa7.0.0.L1)\par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVerInfo} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}} structure to populate with library version information \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Data Primitive Types\par \pard\plain 
{\tc\tcl2 \v Transport API Data Primitive Types}
{\xe \v Transport API Data Primitive Types}
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Primitive Types are common typedef and structure definitions used to represent simple content like integers or length specified buffers. These are available for use by other packages and applications alike and are required by the Transport API Data, Transport API Message, Transport API Dictionary and Transport API Transport packages. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOW" }{}}{\fldrslt {\cs37\ul\cf2 System Types}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The system types are platform independent representations of system types (e.g. 8 bit signed integer, 16 bit unsigned integer, etc.). \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOX" }{}}{\fldrslt {\cs37\ul\cf2 Transport API System Primitive Encoder Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are used to encode selected system primitive types using an RsslEncodeIterator . \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOY" }{}}{\fldrslt {\cs37\ul\cf2 Generic Primitive Type Utilities}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about generic functions that can help encode, decode, or convert many primitive types. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFX" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The integer primitive type allows the user to represent signed integer content ranging from -2{\super 63}  to 2{\super 63}  - 1. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The unsigned integer primitive type allows the user to represent unsigned integer values ranging from 0 to 2{\super 64}  - 1. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGB" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} Primitive Type is an optimized wire representation of a decimal or fractional value. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The float primitive type allows the user to represent 4-byte IEEE-754 floating point values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The double primitive type allows the user to represent 8-byte IEEE-754 floating point values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The buffer primitive type allows the user to represent length specified content. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} Primitive Type is an optimized wire representation of date that can contain month, day, and year. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} Primitive Type is an optimized wire representation of time that can contain hour, minute, second, and millisecond. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGE" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} Primitive Type is an optimized wire representation of time that can contain month, day, year, hour, minute, second, and millisecond. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGH" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The enum primitive type allows the user to represent an unsigned 2-byte value, typically corresponding to an enumerated value that can be cross-referenced with an enum dictionary. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGI" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Array primitive type allows the user to represent a uniform list of simple primitive types. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGF" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The quality-of-service primitive type can be used to indicate the quality of associated content using timliness and rate characteristics. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGG" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The state primitive type can be used to convey data and stream health information. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 RMTES Decoder Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RMTES(Reuters Multilingual Text Encoding Standard) Decoder can be used to decode RMTES content into UTF8 or UCS2 Unicode strings for display or machine parsing purposes. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
System Types\par \pard\plain 
{\tc\tcl2 \v System Types}
{\xe \v System Types}
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The system types are platform independent representations of system types (e.g. 8 bit signed integer, 16 bit unsigned integer, etc.). }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These definitions leverage some common platform type defines contained in  "rtr/os.h" which is a header file used to streamline cross-platform development. The system types are provided for use with Transport API interfaces and internal implementation. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Some system types may not have a specific corresponding RWF type for encoding or decoding. \par
}}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
\~ 0\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Boolean value for False. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
\~ 1\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Boolean value for True. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrInt8 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple Boolean value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef rtrInt16 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Field Identifier type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrInt16 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt16}}}
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System signed 16 bit integer value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrInt32 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System signed 32 bit integer value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrInt64 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt64}}}
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System signed 64 bit integer value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrInt8 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt8}}}
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System signed 8 bit integer value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrUInt16 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System unsigned 16 bit integer value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrUInt32 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System unsigned 32 bit integer value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrUInt64 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System unsigned 64 bit integer value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrUInt8 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System unsigned 8 bit integer value. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_FALSE\:System Types}
{\xe \v System Types\:RSSL_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
\~ 0}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}} \par
}}{
Definition at line 155 of file rsslTypes.h.}\par
}
{\xe \v RSSL_TRUE\:System Types}
{\xe \v System Types\:RSSL_TRUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
\~ 1}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}} \par
}}{
Definition at line 149 of file rsslTypes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v RsslFieldId\:System Types}
{\xe \v System Types\:RsslFieldId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef rtrInt16 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, RsslFieldListField \par
}}{
Definition at line 162 of file rsslTypes.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API System Primitive Encoder Functions\par \pard\plain 
{\tc\tcl2 \v Transport API System Primitive Encoder Functions}
{\xe \v Transport API System Primitive Encoder Functions}
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are used to encode selected system primitive types using an RsslEncodeIterator . }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeNonRWFDataTypeComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complete encoding of a Non-RWF type (e.g. AnsiPage, Opaque, XML, etc) This allows a user to complete encoding of a Non-RWF type. User must set buffer.length to the amount of data encoded or copied into the buffer.data. Typical use:\par }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeNonRWFDataTypeInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begin encoding of a Non-RWF type (e.g. AnsiPage, Opaque, XML, etc) This allows a user to obtain a starting position to encode from as well as length of data left in the buffer to encode into. User can then leverage non-RWF encoding functions/APIs or memcpy routines to nest non-RWF data into the buffer. Typical use:\par }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeNonRWFDataTypeComplete\:Transport API System Primitive Encoder Functions}
{\xe \v Transport API System Primitive Encoder Functions\:rsslEncodeNonRWFDataTypeComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeNonRWFDataTypeComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Use your rssl Init function (e.g. rsslEncodeMsgInit, rsslEncodeMapEntryInit) for the container you intend to nest non-RWF data into\par\par}
Call rsslEncodeNonRWFDataTypeInit with the iterator being used for encoding and a RsslBuffer structure.\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab rsslEncodeNonRWFDataTypeInit will populate the pBuffer->data with the address where encoding should begin and the pBuffer->length with the amount of space left to encode into\par{
\par
\pard\plain \s92\fi-360\li1080\widctlpar\fs20\cgrid 
1.\tab When NonRWF encoding is complete, set pBuffer->length to actual number of bytes encoded and pass pIter and pBuffer to rsslEncodeNonRWFDataTypeComplete\par\par}
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Finish RWF container encoding (e.g. message, map entry, etc). \par Note: User should ensure not to encode or copy more than pBuffer->length indicates is available \par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator used for encoding container \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{RsslBuffer obtained from rsslEncodeNonRWFDataTypeInit. pBuffer->length should be set to number of bytes put into pBuffer->data. pBuffer->data must remain unchanged. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{if RSSL_TRUE, encoding was successful and RSSL will complete transfer of data. If RSSL_FALSE, RSSL will roll back to last successful encoding prior to Non-RWF Init call. \cell }
{\row }
}
\par}
}}
{\xe \v rsslEncodeNonRWFDataTypeInit\:Transport API System Primitive Encoder Functions}
{\xe \v Transport API System Primitive Encoder Functions\:rsslEncodeNonRWFDataTypeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeNonRWFDataTypeInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuffer})}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Use your rssl Init function (e.g. rsslEncodeMsgInit, rsslEncodeMapEntryInit) for the container you intend to nest non-RWF data into\par\par}
Call rsslEncodeNonRWFDataTypeInit with the iterator being used for encoding and a RsslBuffer structure.\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab rsslEncodeNonRWFDataTypeInit will populate the pBuffer->data with the address where encoding should begin and the pBuffer->length with the amount of space left to encode into\par{
\par
\pard\plain \s92\fi-360\li1080\widctlpar\fs20\cgrid 
1.\tab When NonRWF encoding is complete, set pBuffer->length to actual number of bytes encoded and pass pIter and pBuffer to rsslEncodeNonRWFDataTypeComplete\par\par}
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Finish RWF container encoding (e.g. message, map entry, etc). \par Note: User should ensure not to encode or copy more than pBuffer->length indicates is available \par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator used for encoding container \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{RsslBuffer to populate with pointer to encode to and available length to encode into \cell }
{\row }
}
\par}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generic Primitive Type Utilities\par \pard\plain 
{\tc\tcl2 \v Generic Primitive Type Utilities}
{\xe \v Generic Primitive Type Utilities}
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about generic functions that can help encode, decode, or convert many primitive types. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This functionality is defined in  "rtr/rsslPrimitiveEncoders.h" and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generic Primitive Type Encoding Functions
\par}
{\tc\tcl2 \v Generic Primitive Type Encoding Functions}
The following function can be used to encode nearly any primitive type.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPK" }{}}{\fldrslt {\cs37\ul\cf2 Generic Primitive Type Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodePrimitiveType()}}} - Encodes any primitive type other than {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generic Primitive Type Decoding Functions
\par}
{\tc\tcl2 \v Generic Primitive Type Decoding Functions}
The following function can be used to decode nearly any primitive type.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPN" }{}}{\fldrslt {\cs37\ul\cf2 Generic Primitive Type Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodePrimitiveType()}}} - Decodes any primitive type other than {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generic Primitive Type Utility & Conversion Functions
\par}
{\tc\tcl2 \v Generic Primitive Type Utility & Conversion Functions}
Transport API C Edition provides several common conversion helpers for primitive types.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPQ" }{}}{\fldrslt {\cs37\ul\cf2 Generic Primitive Type Utility & Conversion Functions}}} for more detailed information.\par\par \par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPK" }{}}{\fldrslt {\cs37\ul\cf2 Generic Primitive Type Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about generic primitive type encoding functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPN" }{}}{\fldrslt {\cs37\ul\cf2 Generic Primitive Type Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about generic primitive type decoding functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPQ" }{}}{\fldrslt {\cs37\ul\cf2 Generic Primitive Type Utility & Conversion Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about generic primitive type utility and conversion helper functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generic Primitive Type Encoding\par \pard\plain 
{\tc\tcl2 \v Generic Primitive Type Encoding}
{\xe \v Generic Primitive Type Encoding}
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about generic primitive type encoding functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Details for encoding a specific primitive type can be found in that type's respective section.\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generic Primitive Type Encoding Example
\par}
{\tc\tcl2 \v Generic Primitive Type Encoding Example}
The following example demonstrates generic encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslReal with 654.23\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 rReal = \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_2}}}
, 65423\};\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodePrimitiveType() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodePrimitiveType}}}
(&encIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL}}}
, (void*)&rReal)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodePrimitiveType.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodePrimitiveType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 primitiveType, const void *pData)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode any primitive type (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}) into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. This function cannot be used for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} encoding. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodePrimitiveType\:Generic Primitive Type Encoding}
{\xe \v Generic Primitive Type Encoding\:rsslEncodePrimitiveType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodePrimitiveType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 {\i primitiveType}, const void * {\i pData})}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i primitiveType} \cell }{RsslPrimitiveType enumeration corresponding to the primitive type to encode (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL}}}) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pData} \cell }{void pointer to primitive type representation to encode from (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if invalid parameter or invalid primitive type is passed \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generic Primitive Type Decoding\par \pard\plain 
{\tc\tcl2 \v Generic Primitive Type Decoding}
{\xe \v Generic Primitive Type Decoding}
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about generic primitive type decoding functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Details for decoding a specific primitive type can be found in that type's respective section. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned and the value is populated based on the blanking rules defined in each type's respective section.\par
}{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generic Primitive Type Decoding Example
\par}
{\tc\tcl2 \v Generic Primitive Type Decoding Example}
The following example demonstrates generic decoding. This assumes the type was already known or looked up in a field dictionary. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 rInt; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodePrimitiveType}}}
(&decIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_INT}}}
, &rInt);\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodePrimitiveType.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodePrimitiveType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 primitiveType, void *oValue)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to decode any primitive type (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}) from buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}. This function cannot be used for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} decoding. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodePrimitiveType\:Generic Primitive Type Decoding}
{\xe \v Generic Primitive Type Decoding\:rsslDecodePrimitiveType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodePrimitiveType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 {\i primitiveType}, void * {\i oValue})}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. * \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i primitiveType} \cell }{primitive type contained in iterator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i primitiveType} \cell }{RsslPrimitiveType enumeration corresponding to the primitive type to decode (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL}}}) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oValue} \cell }{void pointer to primitive type representation to decode into (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if decoding success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if decoding failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if decoding success and primitive type is blank value, , {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if invalid parameter or invalid primitive type is passed \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generic Primitive Type Utility & Conversion Functions\par \pard\plain 
{\tc\tcl2 \v Generic Primitive Type Utility & Conversion Functions}
{\xe \v Generic Primitive Type Utility & Conversion Functions}
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about generic primitive type utility and conversion helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There are several helper and conversion functions provided for use with Transport API. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodedPrimitiveToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 primitiveType, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *oBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encoded Primitive Data To String. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPV" }{}}{\fldrslt {\cs37\ul\cf2 rsslPrimitiveToString}}}
 (void *pType, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 primitiveType, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *oBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primitive To String. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodedPrimitiveToString\:Generic Primitive Type Utility & Conversion Functions}
{\xe \v Generic Primitive Type Utility & Conversion Functions\:rsslEncodedPrimitiveToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodedPrimitiveToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 {\i primitiveType}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i oBuffer})}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslDecodeIterator with buffer to decode and convert from. Iterator should also have appropriate version information set \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i primitiveType} \cell }{type of input buffer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oBuffer} \cell }{Output Buffer to put string into \cell }
{\row }
}
}}
{\xe \v rsslPrimitiveToString\:Generic Primitive Type Utility & Conversion Functions}
{\xe \v Generic Primitive Type Utility & Conversion Functions\:rsslPrimitiveToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPV" }{}}{\fldrslt {\cs37\ul\cf2 rsslPrimitiveToString}}}
 (void * {\i pType}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 {\i primitiveType}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i oBuffer})}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pType} \cell }{the primitive object to convert to a string. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i primitiveType} \cell }{type of the object \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oBuffer} \cell }{Output Buffer to put string into \cell }
{\row }
}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslInt Reference Group}
{\xe \v RsslInt Reference Group}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The integer primitive type allows the user to represent signed integer content ranging from -2{\super 63}  to 2{\super 63}  - 1. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} functionality is defined in  "rtr/rsslTypes.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Primitive Type Overview
\par}
{\tc\tcl2 \v RsslInt Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} primitive type allows the user to represent signed integers ranging from -2{\super 63}  to 2{\super 63}  - 1. This is defined as a type definition to the system's native 64-bit signed type.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPX" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Encoding Functions
\par}
{\tc\tcl2 \v RsslInt Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeInt()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Decoding Functions
\par}
{\tc\tcl2 \v RsslInt Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeInt()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPX" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslInt encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslInt decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslInt Primitive Type}
{\xe \v RsslInt Primitive Type}
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} primitive type allows the user to represent signed integers ranging from from -2{\super 63}  to 2{\super 63}  - 1. This is defined as a type definition to the system's native 64-bit signed type.\par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When represented as standard data (e.g. not set defined) in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, this type can be represented as blank. When encoding as set defined this cannot be blank. See documentation of those types for detailed information about how to encode or decode blank entries.\par
}{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Creation Examples
\par}
{\tc\tcl2 \v RsslInt Creation Examples}
The following code example demonstrates stack creation and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}. Because this is a simple primitive type, there is no initializer or clear function required. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslInt on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 rInt = 42;\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rssl Signed Integer type. }{
}\par
}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Encoding\par \pard\plain 
{\tc\tcl2 \v RsslInt Encoding}
{\xe \v RsslInt Encoding}
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslInt encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}, only the number of bytes necessary to represent the contained value will be encoded.\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Encoding Example
\par}
{\tc\tcl2 \v RsslInt Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslInt\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 rInt = -123456;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeInt() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeInt}}}
(&encIter, &rInt)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeInt.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeInt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 *pInt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeInt\:RsslInt Encoding}
{\xe \v RsslInt Encoding\:rsslEncodeInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeInt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 * {\i pInt})}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pInt} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} value to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Decoding\par \pard\plain 
{\tc\tcl2 \v RsslInt Decoding}
{\xe \v RsslInt Decoding}
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslInt decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}, although fewer bytes may be on the wire, the full signed integer value is reconstructed into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned.\par
}{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInt Decoding Example
\par}
{\tc\tcl2 \v RsslInt Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 rInt; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeInt}}}
(&decIter, &rInt)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeInt.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeInt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeInt\:RsslInt Decoding}
{\xe \v RsslInt Decoding\:rsslDecodeInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeInt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} primitive type to put decoded data into \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if decoding success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if decoding failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if decoding success and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} is blank value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslUInt Reference Group}
{\xe \v RsslUInt Reference Group}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The unsigned integer primitive type allows the user to represent unsigned integer values ranging from 0 to 2{\super 64}  - 1. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} functionality is defined in  "rtr/rsslTypes.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Primitive Type Overview
\par}
{\tc\tcl2 \v RsslUInt Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} primitive type allows the user to represent unsigned integers ranging from from 0 to 2{\super 64}  - 1. This is defined as a type definition to the system's native 64-bit unsigned type.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Encoding Functions
\par}
{\tc\tcl2 \v RsslUInt Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQI" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeUInt()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Decoding Functions
\par}
{\tc\tcl2 \v RsslUInt Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQK" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeUInt()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQI" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslUInt encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQK" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslUInt decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslUInt Primitive Type}
{\xe \v RsslUInt Primitive Type}
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} primitive type allows the user to represent unsigned integers ranging from from 0 to 2{\super 63}  - 1. This is defined as a type definition to the system's native 64-bit signed type.\par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When represented as standard data (e.g. not set defined) in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, this type can be represented as blank. When encoding as set defined this cannot be blank. See documentation of those types for detailed information about how to encode or decode blank entries.\par
}{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Creation Examples
\par}
{\tc\tcl2 \v RsslUInt Creation Examples}
The following code example demonstrates stack creation and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}. Because this is a simple primitive type, there is no initializer or clear function required. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslUInt on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 rUInt = 14002;\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rssl Unsigned Integer type. }{
}\par
}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Encoding\par \pard\plain 
{\tc\tcl2 \v RsslUInt Encoding}
{\xe \v RsslUInt Encoding}
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslUInt encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}, only the number of bytes necessary to represent the contained value will be encoded.\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Encoding Example
\par}
{\tc\tcl2 \v RsslUInt Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslUInt\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 rUInt = 65535;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeUInt() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeUInt}}}
(&encIter, &rUInt)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeUInt.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeUInt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 *pUInt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeUInt\:RsslUInt Encoding}
{\xe \v RsslUInt Encoding\:rsslEncodeUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeUInt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 * {\i pUInt})}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUInt} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} value to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Decoding\par \pard\plain 
{\tc\tcl2 \v RsslUInt Decoding}
{\xe \v RsslUInt Decoding}
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslUInt decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}, although fewer bytes may be on the wire, the full unsigned integer value is reconstructed into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned.\par
}{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUInt Decoding Example
\par}
{\tc\tcl2 \v RsslUInt Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 rUInt; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeUInt}}}
(&decIter, &rUInt)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeUInt.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeUInt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeUInt\:RsslUInt Decoding}
{\xe \v RsslUInt Decoding\:rsslDecodeUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeUInt}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} primitive type to put decoded data into \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if decoding success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if decoding failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if decoding success and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} is blank value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslReal Reference Group}
{\xe \v RsslReal Reference Group}
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} Primitive Type is an optimized wire representation of a decimal or fractional value. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} functionality is defined in  "rtr/rsslReal.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Primitive Type Overview
\par}
{\tc\tcl2 \v RsslReal Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} Primitive Type is an optimized wire representation of a decimal or fractional value. Through the use of a formatting hint that conveys decimal point location or fractional denominator information, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} generally requires less bytes on the wire than float or double types. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} primitive type allows the user to represent signed values ranging from -2{\super 63}  to 2{\super 63}  - 1. This can be combined with hint values to add or remove up to seven trailing zeros, fourteen decimal places, or fractional denominators up to 256.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Encoding Functions
\par}
{\tc\tcl2 \v RsslReal Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeReal()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Decoding Functions
\par}
{\tc\tcl2 \v RsslReal Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQU" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeReal()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Utility & Conversion Functions
\par}
{\tc\tcl2 \v RsslReal Utility & Conversion Functions}
Transport API C Edition provides several common conversion helpers for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}. These can help with converting between {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} and double, float, and numeric strings.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQX" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Utility & Conversion Functions}}} for more detailed information.\par\par \par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQP" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQR" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQU" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQX" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Utility & Conversion Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} utility and conversion helper functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type}
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} Primitive Type is an optimized wire representation of a decimal or fractional value. Through the use of a formatting hint that conveys decimal point location or fractional denominator information, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} generally requires less bytes on the wire than float or double types. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} primitive type allows the user to represent signed values ranging from -2{\super 63}  to 2{\super 63}  - 1. This can be combined with hint values to add or remove up to seven trailing zeros, fourteen decimal places, or fractional denominators up to 256.\par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} initializer or clear functions, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}} is set to {\b 14} , which corresponds to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT0}}}. The user should ensure that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}} is populated appropriatley in correspondance to the value being encoded. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} type can be represented as blank when sent as standard and set-defined data when contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par}
}{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Creation Examples
\par}
{\tc\tcl2 \v RsslReal Creation Examples}
The following code example demonstrates stack creation, initialization, and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslReal on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 rReal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REAL}}}
;\par
    //Populate RsslReal with value 123.45\par
    rReal.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = 12345;\par
    rReal.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 hint}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_2}}}
;\par
    \par
    //------------------------------------------\par
\par
    //We can clear the RsslReal for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 rReal;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearReal}}}
(&rReal);\par
    //Populate RsslReal with value 29/32\par
    rReal.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = 29;\par
    rReal.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 hint}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_32}}}
;\par
\par
    //--------------------------------------------\par
 \par
    //Alternatly, we can create and populate the RsslReal in a single line\par
    //Populate real with 2956000\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 rReal = \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT3}}}
, 2956 \};\par
\par
    //--------------------------------------------\par
\par
    //To send an RsslReal as blank, set the isBlank Boolean\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 rReal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REAL}}}
;\par
    rReal.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 isBlank}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
;\par
\par
    //--------------------------------------------\par
\par
    //or use the provided blank helper function\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 rReal;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARH" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankReal}}}
(&rReal);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} allows the user to represent fractional or decimal values, with minimal conversion overhead, by using an RsslInt and a format hint. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_REAL}}}
\~ \{1, 0, 0\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer that sets {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} structure to blank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REAL}}}
\~ \{0, 14, 0\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRealHints}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_MIN_EXP}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_14}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_13}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_12}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_11}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_10}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_9}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_8}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_7}}}
 =  7, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAART" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_6}}}
 =  8, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_5}}}
 =  9, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_4}}}
 =  10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_3}}}
 =  11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_2}}}
 =  12, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_1}}}
 =  13, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT0}}}
 =  14, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT1}}}
 =  15, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT2}}}
 =  16, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT3}}}
 =  17, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT4}}}
 =  18, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT5}}}
 =  19, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT6}}}
 =  20, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT7}}}
 =  21, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_MAX_EXP}}}
 =  21, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_MIN_DIVISOR}}}
 =  22, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}}
 =  22, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_2}}}
 =  23, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_4}}}
 =  24, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_8}}}
 =  25, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_16}}}
 =  26, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_32}}}
 =  27, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_64}}}
 =  28, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_128}}}
 =  29, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_256}}}
 =  30, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_MAX_DIVISOR}}}
 =  30, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_INFINITY}}}
 =  33, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_NEG_INFINITY}}}
 =  34, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_NOT_A_NUMBER}}}
 =  35
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} format hint enumeration values. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARH" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *pReal)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blanks an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *pReal)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} structure. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_BLANK_REAL\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_BLANK_REAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_REAL}}}
\~ \{1, 0, 0\}}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARH" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankReal}}} \par
}}{
Definition at line 55 of file rsslReal.h.}\par
}
{\xe \v RSSL_INIT_REAL\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_INIT_REAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REAL}}}
\~ \{0, 14, 0\}}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearReal}}} \par
}}{
Definition at line 48 of file rsslReal.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslRealHints\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RsslRealHints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRealHints}}}
}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical Use:\par Conversion of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to double/float is performed by the following formula.\par if ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal.hint}}} < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}})\par \{\par \~ \~  //multiply the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::value}}} by 10{\super scaled {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}}}  \par \~ \~  outputValue = rsslReal.value*(pow(10,({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal.hint}}} - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT0}}})));\par \}\par else\par \{\par \~ \~  //divide the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::value}}} by 2{\super scaled {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}}}  \par \~ \~  outputValue = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal.value}}}*(pow(2,({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal.hint}}} - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}})));\par \}\par \par Conversion of double/float to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} is performed by the following formula.\par if (inputHint < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}})\par \{\par \~ \~  //divide the double by 10{\super scaled {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}}} , add 0.5 and take the floor \par \~ \~  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal.value}}} = floor(((inputValue)/(pow(10,(inputHint - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT0}}})))) + 0.5);\par \}\par else\par \{\par \~ \~  //multiply the double by 2{\super scaled {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}}}  \par \~ \~  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal.value}}} = (inputValue)/(pow(2,(inputHint - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}})));\par \}\par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_RH_MIN_EXP\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_MIN_EXP}
{\b {\i RSSL_RH_MIN_EXP{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum exponent format hint value \par
}{\xe \v RSSL_RH_EXPONENT_14\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_14}
{\b {\i RSSL_RH_EXPONENT_14{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -14 power. Shifts decimal by 14 positions. \par
}{\xe \v RSSL_RH_EXPONENT_13\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_13}
{\b {\i RSSL_RH_EXPONENT_13{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -13 power. Shifts decimal by 13 positions. \par
}{\xe \v RSSL_RH_EXPONENT_12\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_12}
{\b {\i RSSL_RH_EXPONENT_12{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -12 power. Shifts decimal by 12 positions. \par
}{\xe \v RSSL_RH_EXPONENT_11\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_11}
{\b {\i RSSL_RH_EXPONENT_11{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -11 power. Shifts decimal by 11 positions. \par
}{\xe \v RSSL_RH_EXPONENT_10\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_10}
{\b {\i RSSL_RH_EXPONENT_10{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -10 power. Shifts decimal by 10 positions. \par
}{\xe \v RSSL_RH_EXPONENT_9\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_9}
{\b {\i RSSL_RH_EXPONENT_9{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -9 power. Shifts decimal by 9 positions. \par
}{\xe \v RSSL_RH_EXPONENT_8\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_8}
{\b {\i RSSL_RH_EXPONENT_8{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -8 power. Shifts decimal by 8 positions. \par
}{\xe \v RSSL_RH_EXPONENT_7\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_7}
{\b {\i RSSL_RH_EXPONENT_7{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -7 power. Shifts decimal by 7 positions. \par
}{\xe \v RSSL_RH_EXPONENT_6\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_6}
{\b {\i RSSL_RH_EXPONENT_6{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -6 power. Shifts decimal by 6 positions. \par
}{\xe \v RSSL_RH_EXPONENT_5\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_5}
{\b {\i RSSL_RH_EXPONENT_5{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -5 power. Shifts decimal by 5 positions. \par
}{\xe \v RSSL_RH_EXPONENT_4\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_4}
{\b {\i RSSL_RH_EXPONENT_4{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -4 power. Shifts decimal by 4 positions. \par
}{\xe \v RSSL_RH_EXPONENT_3\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_3}
{\b {\i RSSL_RH_EXPONENT_3{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -3 power. Shifts decimal by 3 positions. \par
}{\xe \v RSSL_RH_EXPONENT_2\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_2}
{\b {\i RSSL_RH_EXPONENT_2{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -2 power. Shifts decimal by 2 positions. \par
}{\xe \v RSSL_RH_EXPONENT_1\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT_1}
{\b {\i RSSL_RH_EXPONENT_1{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the -1 power. Shifts decimal by 1 position. \par
}{\xe \v RSSL_RH_EXPONENT0\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT0}
{\b {\i RSSL_RH_EXPONENT0{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the power 0. Value undergoes no change. \par
}{\xe \v RSSL_RH_EXPONENT1\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT1}
{\b {\i RSSL_RH_EXPONENT1{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the power 1. Adds or removes 1 trailing zero. \par
}{\xe \v RSSL_RH_EXPONENT2\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT2}
{\b {\i RSSL_RH_EXPONENT2{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the power 2. Adds or removes 2 trailing zeros. \par
}{\xe \v RSSL_RH_EXPONENT3\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT3}
{\b {\i RSSL_RH_EXPONENT3{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the power 3. Adds or removes 3 trailing zeros. \par
}{\xe \v RSSL_RH_EXPONENT4\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT4}
{\b {\i RSSL_RH_EXPONENT4{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the power 4. Adds or removes 4 trailing zeros. \par
}{\xe \v RSSL_RH_EXPONENT5\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT5}
{\b {\i RSSL_RH_EXPONENT5{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the power 5. Adds or removes 5 trailing zeros. \par
}{\xe \v RSSL_RH_EXPONENT6\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT6}
{\b {\i RSSL_RH_EXPONENT6{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the power 6. Adds or removes 6 trailing zeros. \par
}{\xe \v RSSL_RH_EXPONENT7\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_EXPONENT7}
{\b {\i RSSL_RH_EXPONENT7{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value raised to the power 7. Adds or removes 7 trailing zeros. \par
}{\xe \v RSSL_RH_MAX_EXP\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_MAX_EXP}
{\b {\i RSSL_RH_MAX_EXP{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum exponent format hint value \par
}{\xe \v RSSL_RH_MIN_DIVISOR\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_MIN_DIVISOR}
{\b {\i RSSL_RH_MIN_DIVISOR{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum fraction format hint value \par
}{\xe \v RSSL_RH_FRACTION_1\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_FRACTION_1}
{\b {\i RSSL_RH_FRACTION_1{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractional denominator operation, equivalent to 1/1. Value undergoes no change. \par
}{\xe \v RSSL_RH_FRACTION_2\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_FRACTION_2}
{\b {\i RSSL_RH_FRACTION_2{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractional denominator operation, equivalent to 1/2. Adds or removes a denominator of 2. \par
}{\xe \v RSSL_RH_FRACTION_4\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_FRACTION_4}
{\b {\i RSSL_RH_FRACTION_4{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractional denominator operation, equivalent to 1/4. Adds or removes a denominator of 4. \par
}{\xe \v RSSL_RH_FRACTION_8\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_FRACTION_8}
{\b {\i RSSL_RH_FRACTION_8{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractional denominator operation, equivalent to 1/8. Adds or removes a denominator of 8. \par
}{\xe \v RSSL_RH_FRACTION_16\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_FRACTION_16}
{\b {\i RSSL_RH_FRACTION_16{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractional denominator operation, equivalent to 1/16. Adds or removes a denominator of 16. \par
}{\xe \v RSSL_RH_FRACTION_32\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_FRACTION_32}
{\b {\i RSSL_RH_FRACTION_32{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractional denominator operation, equivalent to 1/32. Adds or removes a denominator of 32. \par
}{\xe \v RSSL_RH_FRACTION_64\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_FRACTION_64}
{\b {\i RSSL_RH_FRACTION_64{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractional denominator operation, equivalent to 1/64. Adds or removes a denominator of 64. \par
}{\xe \v RSSL_RH_FRACTION_128\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_FRACTION_128}
{\b {\i RSSL_RH_FRACTION_128{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractional denominator operation, equivalent to 1/128. Adds or removes a denominator of 128. \par
}{\xe \v RSSL_RH_FRACTION_256\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_FRACTION_256}
{\b {\i RSSL_RH_FRACTION_256{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractional denominator operation, equivalent to 1/256. Adds or removes a denominator of 256. \par
}{\xe \v RSSL_RH_MAX_DIVISOR\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_MAX_DIVISOR}
{\b {\i RSSL_RH_MAX_DIVISOR{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum fraction format hint value \par
}{\xe \v RSSL_RH_INFINITY\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_INFINITY}
{\b {\i RSSL_RH_INFINITY{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} represents infinity \par
}{\xe \v RSSL_RH_NEG_INFINITY\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_NEG_INFINITY}
{\b {\i RSSL_RH_NEG_INFINITY{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} representes negative infinity \par
}{\xe \v RSSL_RH_NOT_A_NUMBER\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:RSSL_RH_NOT_A_NUMBER}
{\b {\i RSSL_RH_NOT_A_NUMBER{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} is not a number (NaN) \par
}}
\par
{
Definition at line 112 of file rsslReal.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslBlankReal\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:rsslBlankReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARH" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i pReal})}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pReal} \cell }{Pointer to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to set to blank \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_REAL}}} \par
}}{
Definition at line 75 of file rsslReal.h.}\par
}
{\xe \v rsslClearReal\:RsslReal Primitive Type}
{\xe \v RsslReal Primitive Type\:rsslClearReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i pReal})}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pReal} \cell }{Pointer to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to clear \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REAL}}} \par
}}{
Definition at line 62 of file rsslReal.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Encoding\par \pard\plain 
{\tc\tcl2 \v RsslReal Encoding}
{\xe \v RsslReal Encoding}
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, only the number of bytes necessary to represent the contained value will be encoded. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid If sending {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} as blank, set the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::isBlank}}} to RSSL_TRUE.\par
}{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Encoding Example
\par}
{\tc\tcl2 \v RsslReal Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslReal with 654.23\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 rReal = \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_2}}}
, 65423\};\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeReal() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeReal}}}
(&encIter, &rReal)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeReal.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *pReal)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeReal\:RsslReal Encoding}
{\xe \v RsslReal Encoding\:rsslEncodeReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i pReal})}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pReal} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} value to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Decoding\par \pard\plain 
{\tc\tcl2 \v RsslReal Decoding}
{\xe \v RsslReal Decoding}
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, although fewer bytes may be on the wire, the full value is reconstructed into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned and the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::isBlank}}} is set to RSSL_TRUE.\par
}{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Decoding Example
\par}
{\tc\tcl2 \v RsslReal Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 rReal; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeReal}}}
(&decIter, &rReal);\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeReal.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeReal\:RsslReal Decoding}
{\xe \v RsslReal Decoding\:rsslDecodeReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to decode content into. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if data is blank/zero length. \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Utility & Conversion Functions\par \pard\plain 
{\tc\tcl2 \v RsslReal Utility & Conversion Functions}
{\xe \v RsslReal Utility & Conversion Functions}
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} utility and conversion helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There are several helper and conversion functions provided for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}. These can help determine equality of two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} structures and aid in conversion between {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} and double, float, and numeric strings. A user can also use the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::value}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}} to manually perform the conversion calculation. See the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASU" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal Conversion Example}}} for details.\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Conversion Example
\par}
{\tc\tcl2 \v RsslReal Conversion Example}
This example assumes that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} is not blank and is populated with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::value}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}} that corresponds to one of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRealHints}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid The conversion calculations shown require use of the {\b pow}  and {\b floor}  function, included in the math system library.\par
}{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //To convert from a populated RsslReal to a double, the following calculation can be performed:\par
    double outputValue;\par
    if (rsslReal.hint < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}}
)\par
    \{\par
        //RsslReal represents a decimal value\par
        //multiply the RsslReal::value by 10^(scaled RsslReal::hint)\par
        outputValue = rsslReal.value*(pow(10, (rsslReal.hint - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT0}}}
)));\par
    \}\par
    else\par
    \{\par
        //RsslReal represents a fractional value\par
        //divide the RsslReal::value by 2^(scaled RsslReal::hint)\par
        outputValue = rsslReal.value/(pow(2, (rsslReal.hint - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}}
)));\par
    \}\par
\par
    //To convert from a double to an RsslReal, the following calculation can be performed:\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 outReal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REAL}}}
;\par
    //Note that this conversion requires the RsslReal::hint to be known and does not determine the best hint to use\par
    outReal.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 hint}}}
 = inHint;\par
    if (inHint < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}}
)\par
    \{\par
        //RsslReal will represent a decimal value\par
        //divide the double by 10^(scaled RsslReal::hint), add 0.5 and take the floor\par
        outReal.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = floor((doubleVal/(pow(10, (inHint - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT0}}}
)))) + 0.5);\par
    \}\par
    else\par
    \{\par
        //RsslReal will represent a fractional value\par
        //multiply the double by 2^(scaled RsslReal::hint)\par
        outReal.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
 = doubleVal*(pow(2, (inHint - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}}
)));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDoubleToReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *oReal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 *iValue, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 iHint)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert double to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASW" }{}}{\fldrslt {\cs37\ul\cf2 rsslFloatToReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *oReal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 *iValue, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 iHint)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert float to a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASX" }{}}{\fldrslt {\cs37\ul\cf2 rsslNumericStringToDouble}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 *oValue, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *iNumericString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert numeric string to double. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASY" }{}}{\fldrslt {\cs37\ul\cf2 rsslNumericStringToReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *oReal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *iNumericString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a numeric string to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, similar to atof, but with support for fractions and decimals. No null termination required. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRealIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *lhs, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check equality of two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} types. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATA" }{}}{\fldrslt {\cs37\ul\cf2 rsslRealToDouble}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 *oValue, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *iReal)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to a double. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATB" }{}}{\fldrslt {\cs37\ul\cf2 rsslRealToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *buffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 *iReal)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to a numeric string. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDoubleToReal\:RsslReal Utility & Conversion Functions}
{\xe \v RsslReal Utility & Conversion Functions\:rsslDoubleToReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDoubleToReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i oReal}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 * {\i iValue}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i iHint})}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oReal} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to populate with hint and value from double \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iValue} \cell }{double to convert to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iHint} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRealHints}}} enumeration hint value to use for converting double \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful conversion occurs; {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if unable to convert, typically due to invalie hint value \par
}}}
{\xe \v rsslFloatToReal\:RsslReal Utility & Conversion Functions}
{\xe \v RsslReal Utility & Conversion Functions\:rsslFloatToReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASW" }{}}{\fldrslt {\cs37\ul\cf2 rsslFloatToReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i oReal}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 * {\i iValue}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i iHint})}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oReal} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to populate with hint and value from float \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iValue} \cell }{float to convert to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iHint} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRealHints}}} enumeration hint value to use for converting float \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful conversion; {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if unable to convert, typically due to invalid hint value \par
}}}
{\xe \v rsslNumericStringToDouble\:RsslReal Utility & Conversion Functions}
{\xe \v RsslReal Utility & Conversion Functions\:rsslNumericStringToDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASX" }{}}{\fldrslt {\cs37\ul\cf2 rsslNumericStringToDouble}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 * {\i oValue}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i iNumericString})}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oValue} \cell }{double to convert into \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iNumericString} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to convert to double, where {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} points to memory populated with a numeric string and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} indicates number of bytes pointed to \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful conversion; {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INVALID_DATA}}} if numeric string is invalid \par
}}}
{\xe \v rsslNumericStringToReal\:RsslReal Utility & Conversion Functions}
{\xe \v RsslReal Utility & Conversion Functions\:rsslNumericStringToReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASY" }{}}{\fldrslt {\cs37\ul\cf2 rsslNumericStringToReal}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i oReal}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i iNumericString})}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oReal} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to convert string into \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iNumericString} \cell }{Populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to convert into {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, where {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} points to memory populated with a numeric string and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} indicates number of bytes pointed to \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful conversion; {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INVALID_DATA}}} if numeric string is invalid \par
}}}
{\xe \v rsslRealIsEqual\:RsslReal Utility & Conversion Functions}
{\xe \v RsslReal Utility & Conversion Functions\:rsslRealIsEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRealIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i lhs}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i rhs})}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lhs} \cell }{Pointer to the left hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} structure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rhs} \cell }{Pointer to the right hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} structure. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if equal; RSSL_FALSE - if not equal. \par
}}{
Definition at line 170 of file rsslReal.h.}\par
}
{\xe \v rsslRealToDouble\:RsslReal Utility & Conversion Functions}
{\xe \v RsslReal Utility & Conversion Functions\:rsslRealToDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATA" }{}}{\fldrslt {\cs37\ul\cf2 rsslRealToDouble}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 * {\i oValue}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i iReal})}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oValue} \cell }{double to convert into \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iReal} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to convert to double \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful conversion; {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if unable to convert, typically because passed in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} is blank or due to invalid hint value \par
}}}
{\xe \v rsslRealToString\:RsslReal Utility & Conversion Functions}
{\xe \v RsslReal Utility & Conversion Functions\:rsslRealToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATB" }{}}{\fldrslt {\cs37\ul\cf2 rsslRealToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i buffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}
 * {\i iReal})}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to use for string representation. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} should point to some amount of memory and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} specifies size of memory. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iReal} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to convert into a numeric string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful conversion; {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INVALID_DATA}}} if numeric string is invalid; {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if passed in buffer does not have sufficient length for conversion \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslFloat Reference Group}
{\xe \v RsslFloat Reference Group}
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The float primitive type allows the user to represent 4-byte IEEE-754 floating point values. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} functionality is defined in  "rtr/rsslTypes.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Primitive Type Overview
\par}
{\tc\tcl2 \v RsslFloat Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} primitive type allows the user to represent IEEE-754 floating point values. This is defined as a type definition to the system's native float type.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATD" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Encoding Functions
\par}
{\tc\tcl2 \v RsslFloat Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat Encoding}}} for more detailed information.\par\par {
\par}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFloat()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par  \par\par \par}
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Decoding Functions
\par}
{\tc\tcl2 \v RsslFloat Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFloat()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATD" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslFloat encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslFloat decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslFloat Primitive Type}
{\xe \v RsslFloat Primitive Type}
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} primitive type allows the user to represent IEEE-754 floating point values. This is defined as a type definition to the system's native float type.\par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When represented as standard data (e.g. not set defined) in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, this type can be represented as blank. When encoding as set defined this cannot be blank. See documentation of those types for detailed information about how to encode or decode blank entries.\par
}{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Creation Examples
\par}
{\tc\tcl2 \v RsslFloat Creation Examples}
The following code example demonstrates stack creation and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}. Because this is a simple primitive type, there is no initializer or clear function required. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslFloat on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 rFloat = 3.14159;\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrFloat {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rssl 4-byte floating point value. }{
}\par
}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Encoding\par \pard\plain 
{\tc\tcl2 \v RsslFloat Encoding}
{\xe \v RsslFloat Encoding}
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslFloat encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} follows the IEEE-754 specification.\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Encoding Example
\par}
{\tc\tcl2 \v RsslFloat Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslFloat\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 rFloat = 6.02;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeFloat() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFloat}}}
(&encIter, &rFloat)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeFloat.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFloat}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 *pFloat)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeFloat\:RsslFloat Encoding}
{\xe \v RsslFloat Encoding\:rsslEncodeFloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFloat}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 * {\i pFloat})}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFloat} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} value to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Decoding\par \pard\plain 
{\tc\tcl2 \v RsslFloat Decoding}
{\xe \v RsslFloat Decoding}
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslFloat decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}, the floating point value on the wire is reconstructured into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned.\par
}{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFloat Decoding Example
\par}
{\tc\tcl2 \v RsslFloat Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 rFloat; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFloat}}}
(&decIter, &rFloat)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeFloat.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFloat}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeFloat\:RsslFloat Decoding}
{\xe \v RsslFloat Decoding\:rsslDecodeFloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFloat}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}} primitive type to put decoded data into \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if decoding success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if decoding failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if decoding success and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} is blank value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslDouble Reference Group}
{\xe \v RsslDouble Reference Group}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The double primitive type allows the user to represent 8-byte IEEE-754 floating point values. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} functionality is defined in  "rtr/rsslTypes.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Primitive Type Overview
\par}
{\tc\tcl2 \v RsslDouble Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} primitive type allows the user to represent 8-byte IEEE-754 floating point values. This is defined as a type definition to the system's native double type.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATM" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Encoding Functions
\par}
{\tc\tcl2 \v RsslDouble Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATO" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDouble()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Decoding Functions
\par}
{\tc\tcl2 \v RsslDouble Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDouble()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATM" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATO" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslDouble encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslDouble decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslDouble Primitive Type}
{\xe \v RsslDouble Primitive Type}
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} primitive type allows the user to represent 8-byte IEEE-754 floating point values. This is defined as a type definition to the system's native double type.\par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When represented as standard data (e.g. not set defined) in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, this type can be represented as blank. When encoding as set defined this cannot be blank. See documentation of those types for detailed information about how to encode or decode blank entries.\par
}{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Creation Examples
\par}
{\tc\tcl2 \v RsslDouble Creation Examples}
The following code example demonstrates stack creation and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}. Because this is a simple primitive type, there is no initializer or clear function required. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslDouble on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFloat}}}
 rFloat = 867.5309;\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrDouble {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rssl 8-byte floating point value. }{
}\par
}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Encoding\par \pard\plain 
{\tc\tcl2 \v RsslDouble Encoding}
{\xe \v RsslDouble Encoding}
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslDouble encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} follows the IEEE-754 specification.\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Encoding Example
\par}
{\tc\tcl2 \v RsslDouble Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslDouble\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 rDouble = 12345.6789;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeDouble() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDouble}}}
(&encIter, &rDouble)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeDouble.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDouble}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 *pDouble)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeDouble\:RsslDouble Encoding}
{\xe \v RsslDouble Encoding\:rsslEncodeDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDouble}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 * {\i pDouble})}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pDouble} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} value to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Decoding\par \pard\plain 
{\tc\tcl2 \v RsslDouble Decoding}
{\xe \v RsslDouble Decoding}
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslDouble decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}, the floating point value on the wire is reconstructured into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned.\par
}{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDouble Decoding Example
\par}
{\tc\tcl2 \v RsslDouble Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 rDouble; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDouble}}}
(&decIter, &rDouble)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeDouble.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDouble}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeDouble\:RsslDouble Decoding}
{\xe \v RsslDouble Decoding\:rsslDecodeDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDouble}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDouble}}} primitive type to put decoded data into \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if decoding success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if decoding failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if decoding success and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} is blank value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslBuffer Reference Group}
{\xe \v RsslBuffer Reference Group}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The buffer primitive type allows the user to represent length specified content. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RsslBuffer functionality is defined in  "rtr/rsslTypes.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Structure Overview
\par}
{\tc\tcl2 \v RsslBuffer Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} primitive type allows the user to represent length specified content. This includes various string types (ASCII, RMTES, UTF8) or non-string opaque content. The buffer consists of a length and a pointer, where the pointer is used to refer to the content and the length indicates the number of bytes referred to.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATV" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Encoding Functions
\par}
{\tc\tcl2 \v RsslBuffer Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeBuffer()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} primitive type. This will copy contents into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Decoding Functions
\par}
{\tc\tcl2 \v RsslBuffer Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeBuffer()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} primitive type. This will point to the contents in the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}. For performance purposes, contents will not be copied.\par \par}
\par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATV" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RsslBuffer structure and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RsslBuffer encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RsslBuffer decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslBuffer Primitive Type}
{\xe \v RsslBuffer Primitive Type}
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RsslBuffer structure and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} primitive type allows the user to represent length specified content. This includes various string types (ASCII, RMTES, UTF8) or non-string opaque content. The buffer consists of a length and a pointer, where the pointer is used to refer to the content and the length indicates the number of bytes referred to. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When sending string types, a NULL terminator is typically not sent or included in the length. The length should be used to determine where the buffer contents end. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} type can be represented as blank when sent as standard and set-defined data when contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par}
}{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Creation Examples
\par}
{\tc\tcl2 \v RsslBuffer Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} along with use of the clear function to reuse the array. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslBuffer on the stack and use static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 buffer = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
;\par
    //Populate buffer\par
    buffer.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "ABCD";\par
    buffer.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 4;\par
    \par
    //------------------------------------------\par
\par
    //We can clear the buffer for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 buffer;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearBuffer}}}
(&buffer);\par
    //Populate buffer\par
    buffer.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "ABCD";\par
    buffer.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 4;\par
\par
    //--------------------------------------------\par
 \par
    //Alternatly, we can create and populate the buffer in a single line\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 buffer = \{4, "ABCD"\};\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
\~ \{0, 0\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslBuffer static initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearBuffer}}}
(pBuffer)\~ rwfClearBuffer(pBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an RsslBuffer structure. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RwfBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslBuffer structure. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_BUFFER\:RsslBuffer Primitive Type}
{\xe \v RsslBuffer Primitive Type\:RSSL_INIT_BUFFER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
\~ \{0, 0\}}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearBuffer}}} \par
}}{
Definition at line 218 of file rsslTypes.h.}\par
}
{\xe \v rsslClearBuffer\:RsslBuffer Primitive Type}
{\xe \v RsslBuffer Primitive Type\:rsslClearBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearBuffer}}}
( pBuffer)\~ rwfClearBuffer(pBuffer)}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{Pointer to RsslBuffer to clear \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}} \par
}}{
Definition at line 227 of file rsslTypes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v RsslBuffer\:RsslBuffer Primitive Type}
{\xe \v RsslBuffer Primitive Type\:RsslBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RwfBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This buffer contains a data member that points to the first byte of char* data and a RsslUInt32 length that describes the length of the data buffer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeBuffer}}} \par
}}{
Definition at line 212 of file rsslTypes.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Encoding\par \pard\plain 
{\tc\tcl2 \v RsslBuffer Encoding}
{\xe \v RsslBuffer Encoding}
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RsslBuffer encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} should point to content to be encoded and the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} should indicate the number of bytes being pointed to. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} will result in the contents being copied into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par
}{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Encoding Example
\par}
{\tc\tcl2 \v RsslBuffer Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the buffer, no need to clear since setting both members.\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 buf = \{3, "TRI"\};\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeBuffer() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeBuffer}}}
(&encIter, &buf)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeBuffer.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeBuffer\:RsslBuffer Encoding}
{\xe \v RsslBuffer Encoding\:rsslEncodeBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuffer})}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to encode, where {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} points to the content and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} indicates the length of content. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Decoding\par \pard\plain 
{\tc\tcl2 \v RsslBuffer Decoding}
{\xe \v RsslBuffer Decoding}
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RsslBuffer decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} will point to the decoded content and the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} will indicate the number of bytes pointed to. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When decoding an RsslBuffer, contents are not copied for performance purposes. If content needs to be modified or requires a longer life span, users can copy content. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned and the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} is set to 0.\par}
}{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Decoding Example
\par}
{\tc\tcl2 \v RsslBuffer Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 buf; //No need to clear since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeBuffer}}}
(&decIter, &buf)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeBuffer.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeBuffer\:RsslBuffer Decoding}
{\xe \v RsslBuffer Decoding\:rsslDecodeBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} to decode content into. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} will point to contents in iterator's buffer and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} will indicate length of content. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if data is blank/zero length. \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslDate Reference Group}
{\xe \v RsslDate Reference Group}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} Primitive Type is an optimized wire representation of date that can contain month, day, and year. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} functionality is defined in  "rtr/rsslDateTime.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Primitive Type Overview
\par}
{\tc\tcl2 \v RsslDate Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} Primitive Type is an optimized wire representation of a date containing month, day, and year. This type allows for representing the entire date or individual portions as blank, for example having a valid month and year but a blank day. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Encoding Functions
\par}
{\tc\tcl2 \v RsslDate Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDate()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Decoding Functions
\par}
{\tc\tcl2 \v RsslDate Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUL" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDate()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Utility & Conversion Functions
\par}
{\tc\tcl2 \v RsslDate Utility & Conversion Functions}
Transport API C Edition provides several common conversion helpers for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}. These can help with comparing and converting between {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} and various date strings.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUN" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Utility & Conversion Functions}}} for more detailed information.\par\par \par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUL" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUN" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate Utility & Conversion Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} utility and conversion helper functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslDate Primitive Type}
{\xe \v RsslDate Primitive Type}
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} Primitive Type is an optimized wire representation of a date containing month, day, and year. This type allows for representing the entire date or individual portions as blank, for example having a valid month and year but a blank day. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} initializer or clear functions, all values are set to {\b 0} , essentially setting the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} to blank. The user should ensure that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} is populated appropriatley in correspondance to the actual date value being encoded, if not sending a blank date. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} type can be represented as blank when sent as standard and set-defined data when contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par}
}{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Creation Examples
\par}
{\tc\tcl2 \v RsslDate Creation Examples}
The following code example demonstrates stack creation, initialization, and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslDate on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 rDate = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATE}}}
;\par
    //Populate RsslDate with a month, day, and year\par
    rDate.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 month}}}
 = 10;\par
    rDate.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUR" }{}}{\fldrslt {\cs37\ul\cf2 day}}}
 = 21;\par
    rDate.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 year}}}
 = 1978;\par
    \par
    //------------------------------------------\par
\par
    //We can clear the RsslDate for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 rDate;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDate}}}
(&rDate);\par
    //Populate RsslDate with just a month and year, day was cleared and set to 0 so it is already blank\par
    rDate.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 month}}}
 = 3;\par
    rDate.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 year}}}
 = 2012;\par
\par
    //--------------------------------------------\par
 \par
    //Alternatly, we can create and populate the RsslDate in a single line\par
    //Populate RsslDate with day, month, and year\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 rDate = \{ 25, 12, 2012 \};\par
\par
    //--------------------------------------------\par
\par
    //To send an RsslDate as blank, we can use the static blank initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 rDate = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATE}}}
;\par
\par
    //--------------------------------------------\par
\par
    //or use the provided blank helper function\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 rDate;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUV" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankDate}}}
(&rDate);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} type allows for bandwidth optimized representation of a date value containing month, day, and year information. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATE}}}
\~ \{0, 0, 0\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A blank {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}, same as initialized or cleared {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATE}}}
\~ \{0, 0, 0\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUV" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 *pDate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} to blank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 *pDate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_BLANK_DATE\:RsslDate Primitive Type}
{\xe \v RsslDate Primitive Type\:RSSL_BLANK_DATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATE}}}
\~ \{0, 0, 0\}}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} \par
}}{
Definition at line 38 of file rsslDateTime.h.}\par
}
{\xe \v RSSL_INIT_DATE\:RsslDate Primitive Type}
{\xe \v RsslDate Primitive Type\:RSSL_INIT_DATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATE}}}
\~ \{0, 0, 0\}}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDate}}} \par
}}{
Definition at line 32 of file rsslDateTime.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslBlankDate\:RsslDate Primitive Type}
{\xe \v RsslDate Primitive Type\:rsslBlankDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUV" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 * {\i pDate})}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pDate} \cell }{Pointer to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} structure to set to blank \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATE}}} \par
}}{
Definition at line 57 of file rsslDateTime.h.}\par
}
{\xe \v rsslClearDate\:RsslDate Primitive Type}
{\xe \v RsslDate Primitive Type\:rsslClearDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 * {\i pDate})}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pDate} \cell }{Pointer to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} structure to clear \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATE}}} \par
}}{
Definition at line 45 of file rsslDateTime.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Encoding\par \pard\plain 
{\tc\tcl2 \v RsslDate Encoding}
{\xe \v RsslDate Encoding}
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}, only the number of bytes necessary to represent the contained value will be encoded. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid If sending {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} as blank, use one of the blank initializers. If sending only a portion of the date as blank (e.g. blank day), set the corresponding member to {\b 0} .\par
}{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Encoding Example
\par}
{\tc\tcl2 \v RsslDate Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslDate with a day, month, and year.\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 rDate = \{9, 7, 2011\};\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeDate() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDate}}}
(&encIter, &rDate)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeDate.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 *pDate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeDate\:RsslDate Encoding}
{\xe \v RsslDate Encoding\:rsslEncodeDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 * {\i pDate})}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pDate} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} value to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Decoding\par \pard\plain 
{\tc\tcl2 \v RsslDate Decoding}
{\xe \v RsslDate Decoding}
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}, although fewer bytes may be on the wire, the full value is reconstructed into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned and the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUR" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate::day}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate::month}}}, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate::year}}} are set to {\b 0} \par
}{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Decoding Example
\par}
{\tc\tcl2 \v RsslDate Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 rDate; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDate}}}
(&decIter, &rDate);\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeDate.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeDate\:RsslDate Decoding}
{\xe \v RsslDate Decoding\:rsslDecodeDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} to decode content into. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if data is blank value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Utility & Conversion Functions\par \pard\plain 
{\tc\tcl2 \v RsslDate Utility & Conversion Functions}
{\xe \v RsslDate Utility & Conversion Functions}
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} utility and conversion helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There are several helper and conversion functions provided for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}. These can help with comparing and converting between {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} and various date strings. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 *lhs, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 *rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks equality of two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} structures. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateIsValid}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 *iDate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifies that day, month, and year information is valid (e.g. values that correspond to actual month or day information) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVA" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateStringToDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 *oDate, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *iDateString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts string date in strftime()'s "%d %b %Y" format (e.g. 01 JUN 2003) or "%m/%d/%y" to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDateIsEqual\:RsslDate Utility & Conversion Functions}
{\xe \v RsslDate Utility & Conversion Functions\:rsslDateIsEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 * {\i lhs}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 * {\i rhs})}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lhs} \cell }{Pointer to the left hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} structure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rhs} \cell }{Pointer to the right hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} structure. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} structures are equal, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} \par
}}{
Definition at line 226 of file rsslDateTime.h.}\par
}
{\xe \v rsslDateIsValid\:RsslDate Utility & Conversion Functions}
{\xe \v RsslDate Utility & Conversion Functions\:rsslDateIsValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateIsValid}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 * {\i iDate})}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iDate} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} to check for validity \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if validly populated, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} \par
}}}
{\xe \v rsslDateStringToDate\:RsslDate Utility & Conversion Functions}
{\xe \v RsslDate Utility & Conversion Functions\:rsslDateStringToDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVA" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateStringToDate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 * {\i oDate}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i iDateString})}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oDate} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} structure to populate from string \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iDateString} \cell }{RsslBuffer containing an appropriately formatted string to convert from. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} should point to date string, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} should indicate the number of bytes pointed to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL_RET_SUCCESS if successful, RSSL_RET_FAILURE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslTime Reference Group}
{\xe \v RsslTime Reference Group}
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} Primitive Type is an optimized wire representation of time that can contain hour, minute, second, and millisecond. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} functionality is defined in  "rtr/rsslDateTime.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Primitive Type Overview
\par}
{\tc\tcl2 \v RsslTime Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} Primitive Type is an optimized wire representation of a time containing hour, minute, second, and millisecond. This type allows for representing the entire time or individual portions as blank, for example having a valid hour and minute but blank second and millisecond. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVC" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Encoding Functions
\par}
{\tc\tcl2 \v RsslTime Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVE" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeTime()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Decoding Functions
\par}
{\tc\tcl2 \v RsslTime Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVG" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeTime()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Utility & Conversion Functions
\par}
{\tc\tcl2 \v RsslTime Utility & Conversion Functions}
Transport API C Edition provides several common conversion helpers for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}. These can help with comparing and converting between {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} and various time strings.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVI" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Utility & Conversion Functions}}} for more detailed information.\par\par \par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVC" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVE" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVG" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVI" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime Utility & Conversion Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} utility and conversion helper functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslTime Primitive Type}
{\xe \v RsslTime Primitive Type}
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} Primitive Type is an optimized wire representation of a time containing hour, minute, second, and millisecond. This type allows for representing the entire time or individual portions as blank, for example having a hour and minute but blank second and millisecond. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} initializer or clear functions, all values are set to {\b 0} . This differs from a blank time where hour, minute, and second are set to {\b 255}  and millisecond is set to {\b 65535} . The user should ensure that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} is populated appropriatley in correspondance to the actual time value being encoded, if not sending a blank time. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} type can be represented as blank when sent as standard and set-defined data when contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par}
}{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Creation Examples
\par}
{\tc\tcl2 \v RsslTime Creation Examples}
The following code example demonstrates stack creation, initialization, and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslTime on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 rTime = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_TIME}}}
;\par
    //Populate RsslTime with hour and minute\par
    rTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVL" }{}}{\fldrslt {\cs37\ul\cf2 hour}}}
 = 9;\par
    rTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVM" }{}}{\fldrslt {\cs37\ul\cf2 minute}}}
 = 20;\par
    \par
    //------------------------------------------\par
\par
    //We can clear the RsslTime for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 rTime;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearTime}}}
(&rTime);\par
    //Populate RsslTime with hour, minute, and second.\par
    rTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVL" }{}}{\fldrslt {\cs37\ul\cf2 hour}}}
 = 11;\par
    rTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVM" }{}}{\fldrslt {\cs37\ul\cf2 minute}}}
 = 45;\par
    rTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 second}}}
 = 3;\par
\par
    //--------------------------------------------\par
 \par
    //Alternatly, we can create and populate the RsslTime in a single line\par
    //Populate RsslTime with hour, minute, second, and millisecond\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 rTime = \{ 10, 15, 52, 0 \};\par
\par
    //--------------------------------------------\par
\par
    //To send an RsslTime as blank, we can use the static blank initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 rTime = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_TIME}}}
;\par
\par
    //--------------------------------------------\par
\par
    //or use the provided blank helper function\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 rTime;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankTime}}}
(&rTime);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} type allows for bandwidth optimized representation of a time value containing hour, minute, second, millisecond, microsecond, and nanosecond information. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_TIME}}}
\~ \{255, 255, 255, 65535, 2047, 2047\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} static blank initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_TIME}}}
\~ \{0, 0, 0, 0, 0, 0\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 *pTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} structure to blank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 *pTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} structure. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_BLANK_TIME\:RsslTime Primitive Type}
{\xe \v RsslTime Primitive Type\:RSSL_BLANK_TIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_TIME}}}
\~ \{255, 255, 255, 65535, 2047, 2047\}}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankTime}}} \par
}}{
Definition at line 101 of file rsslDateTime.h.}\par
}
{\xe \v RSSL_INIT_TIME\:RsslTime Primitive Type}
{\xe \v RsslTime Primitive Type\:RSSL_INIT_TIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_TIME}}}
\~ \{0, 0, 0, 0, 0, 0\}}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearTime}}} \par
}}{
Definition at line 95 of file rsslDateTime.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslBlankTime\:RsslTime Primitive Type}
{\xe \v RsslTime Primitive Type\:rsslBlankTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 * {\i pTime})}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} structure to set to blank \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_TIME}}} \par
}}{
Definition at line 123 of file rsslDateTime.h.}\par
}
{\xe \v rsslClearTime\:RsslTime Primitive Type}
{\xe \v RsslTime Primitive Type\:rsslClearTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 * {\i pTime})}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} structure to clear \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_TIME}}} \par
}}{
Definition at line 108 of file rsslDateTime.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Encoding\par \pard\plain 
{\tc\tcl2 \v RsslTime Encoding}
{\xe \v RsslTime Encoding}
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}, only the number of bytes necessary to represent the contained value will be encoded. Any trailing {\b 0}  values (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVR" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime::millisecond}}} is set to {\b 0} ) will be inferred. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid If sending {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} as blank, use one of the blank initializers. If sending only a portion of the time as blank (e.g. blank day), set the corresponding member to its appropriate blank value ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVL" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime::hour}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVM" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime::minute}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime::second}}} use {\b 255}  to indicate blank, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVR" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime::millisecond}}} uses {\b 65535} ).\par
}{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Encoding Example
\par}
{\tc\tcl2 \v RsslTime Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslTime with an hour and minute.\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 rTime = \{10, 21, 0, 0\};\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeTime() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeTime}}}
(&encIter, &rTime)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeTime.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 *pTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeTime\:RsslTime Encoding}
{\xe \v RsslTime Encoding\:rsslEncodeTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 * {\i pTime})}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pTime} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} value to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Decoding\par \pard\plain 
{\tc\tcl2 \v RsslTime Decoding}
{\xe \v RsslTime Decoding}
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}, although fewer bytes may be on the wire, the full value is reconstructed into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned and the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVL" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime::hour}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVM" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime::minute}}}, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime::second}}} are set to {\b 255}  and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVR" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime::millisecond}}} is set to {\b 65535} \par
}{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Decoding Example
\par}
{\tc\tcl2 \v RsslTime Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 rTime; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeTime}}}
(&decIter, &rTime);\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeTime.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeTime\:RsslTime Decoding}
{\xe \v RsslTime Decoding\:rsslDecodeTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} to decode content into. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if data is blank value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Utility & Conversion Functions\par \pard\plain 
{\tc\tcl2 \v RsslTime Utility & Conversion Functions}
{\xe \v RsslTime Utility & Conversion Functions}
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} utility and conversion helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There are several helper and conversion functions provided for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}. These can help with comparing and converting between {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} and various time strings. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVU" }{}}{\fldrslt {\cs37\ul\cf2 rsslTimeIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 *lhs, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 *rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks equality of two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} structures. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVV" }{}}{\fldrslt {\cs37\ul\cf2 rsslTimeIsValid}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 *iTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifies that hour, minute, second, and millisecond information is valid (e.g. values that correspond to actual time information). Allows seconds to be set up to 60 to account for periodic leap seconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVW" }{}}{\fldrslt {\cs37\ul\cf2 rsslTimeStringToTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 *oTime, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *iTimeString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts string time in strftime()'s "%H:%M" or "%H:%M:%S" format (e.g. 13:01 or 15:23:54) to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslTimeIsEqual\:RsslTime Utility & Conversion Functions}
{\xe \v RsslTime Utility & Conversion Functions\:rsslTimeIsEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVU" }{}}{\fldrslt {\cs37\ul\cf2 rsslTimeIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 * {\i lhs}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 * {\i rhs})}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lhs} \cell }{Pointer to the left hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} structure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rhs} \cell }{Pointer to the right hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} structure. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} structures are equal, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} \par
}}{
Definition at line 271 of file rsslDateTime.h.}\par
}
{\xe \v rsslTimeIsValid\:RsslTime Utility & Conversion Functions}
{\xe \v RsslTime Utility & Conversion Functions\:rsslTimeIsValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVV" }{}}{\fldrslt {\cs37\ul\cf2 rsslTimeIsValid}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 * {\i iTime})}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} to check validity \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if validly populated, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} \par
}}}
{\xe \v rsslTimeStringToTime\:RsslTime Utility & Conversion Functions}
{\xe \v RsslTime Utility & Conversion Functions\:rsslTimeStringToTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVW" }{}}{\fldrslt {\cs37\ul\cf2 rsslTimeStringToTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 * {\i oTime}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i iTimeString})}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} structure to have populated from string \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iTimeString} \cell }{RsslBuffer containing an appropriately formatted string to convert from. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} should point to time string, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} should indicate the number of bytes pointed to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslDateTime Reference Group}
{\xe \v RsslDateTime Reference Group}
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} Primitive Type is an optimized wire representation of time that can contain month, day, year, hour, minute, second, and millisecond. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} functionality is defined in  "rtr/rsslDateTime.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Primitive Type Overview
\par}
{\tc\tcl2 \v RsslDateTime Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} Primitive Type is an optimized wire representation of a date and time containing month, day, year, hour, minute, second, and millisecond. This type allows for representing the entire date and time or individual portions as blank, for example having a valid month, year, hour and minute but blank day, second and millisecond. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVY" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Encoding Functions
\par}
{\tc\tcl2 \v RsslDateTime Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDateTime()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Decoding Functions
\par}
{\tc\tcl2 \v RsslDateTime Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDateTime()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Utility & Conversion Functions
\par}
{\tc\tcl2 \v RsslDateTime Utility & Conversion Functions}
Transport API C Edition provides several common conversion helpers for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}. These can help with comparing and converting between {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} and various date and time strings.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWE" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Utility & Conversion Functions}}} for more detailed information.\par\par \par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVY" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWE" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime Utility & Conversion Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} utility and conversion helper functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslDateTime Primitive Type}
{\xe \v RsslDateTime Primitive Type}
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} Primitive Type is an optimized wire representation of a date and time containing day, month, year, hour, minute, second, and millisecond. This type allows for representing the entire date and time or individual portions as blank, for example having a month, year, hour and minute but blank day, second and millisecond. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} initializer or clear functions, all values are set to {\b 0} . This differs from a blank date and time where month, day, and year are set to {\b 0} , hour, minute, and second are set to {\b 255}  and millisecond is set to {\b 65535} . The user should ensure that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} is populated appropriatley in correspondance to the actual date and time value being encoded, if not sending a blank date and time. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} type can be represented as blank when sent as standard and set-defined data when contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par}
}{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Creation Examples
\par}
{\tc\tcl2 \v RsslDateTime Creation Examples}
The following code example demonstrates stack creation, initialization, and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslDateTime on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 rDateTime = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATETIME}}}
;\par
    //Populate RsslDateTime with month, day, year, hour and minute\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWH" }{}}{\fldrslt {\cs37\ul\cf2 date}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 month}}}
 = 10;\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWH" }{}}{\fldrslt {\cs37\ul\cf2 date}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUR" }{}}{\fldrslt {\cs37\ul\cf2 day}}}
 = 21;\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWH" }{}}{\fldrslt {\cs37\ul\cf2 date}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 year}}}
 = 2012;\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWI" }{}}{\fldrslt {\cs37\ul\cf2 time}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVL" }{}}{\fldrslt {\cs37\ul\cf2 hour}}}
 = 9;\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWI" }{}}{\fldrslt {\cs37\ul\cf2 time}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVM" }{}}{\fldrslt {\cs37\ul\cf2 minute}}}
 = 20;\par
    \par
    //------------------------------------------\par
\par
    //We can clear the RsslDateTime for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 rDateTime;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDateTime}}}
(&rDateTime);\par
    //Populate RsslDateTime with day, month, year, hour, minute, and second.\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWH" }{}}{\fldrslt {\cs37\ul\cf2 date}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 month}}}
 = 3;\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWH" }{}}{\fldrslt {\cs37\ul\cf2 date}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUR" }{}}{\fldrslt {\cs37\ul\cf2 day}}}
 = 25;\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWH" }{}}{\fldrslt {\cs37\ul\cf2 date}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 year}}}
 = 2012;\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWI" }{}}{\fldrslt {\cs37\ul\cf2 time}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVL" }{}}{\fldrslt {\cs37\ul\cf2 hour}}}
 = 11;\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWI" }{}}{\fldrslt {\cs37\ul\cf2 time}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVM" }{}}{\fldrslt {\cs37\ul\cf2 minute}}}
 = 45;\par
    rDateTime.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWI" }{}}{\fldrslt {\cs37\ul\cf2 time}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 second}}}
 = 3;\par
\par
    //--------------------------------------------\par
 \par
    //Alternatly, we can create and populate the RsslDateTime in a single line\par
    //Populate RsslDateTime with day, month, year, hour, minute, second, and millisecond\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 rDateTime = \{ \{ 27, 7, 2013\}, \{10, 15, 52, 0\} \};\par
\par
    //--------------------------------------------\par
\par
    //To send an RsslDateTime as blank, we can use the static blank initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 rDateTime = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATETIME}}}
;\par
\par
    //--------------------------------------------\par
\par
    //or use the provided blank helper function\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 rDateTime;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWL" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankDateTime}}}
(&rDateTime);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} type allows for bandwidth optimized representation of both a date and a time value containing month, day, year, hour, minute, second, millisecond, microsecond, and nanosecond information. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATETIME}}}
\~ \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_TIME}}}
\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} static blank initializer function, sets all date values to 0, time hour/minute/second to 255 and millisecond to 65535. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATETIME}}}
\~ \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_TIME}}}
\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} static initializer, sets all values to 0. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWL" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *pDateTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure to blank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *pDateTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_BLANK_DATETIME\:RsslDateTime Primitive Type}
{\xe \v RsslDateTime Primitive Type\:RSSL_BLANK_DATETIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATETIME}}}
\~ \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_TIME}}}
\}}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWL" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankDateTime}}} \par
}}{
Definition at line 163 of file rsslDateTime.h.}\par
}
{\xe \v RSSL_INIT_DATETIME\:RsslDateTime Primitive Type}
{\xe \v RsslDateTime Primitive Type\:RSSL_INIT_DATETIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATETIME}}}
\~ \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_TIME}}}
\}}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDateTime}}} \par
}}{
Definition at line 157 of file rsslDateTime.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslBlankDateTime\:RsslDateTime Primitive Type}
{\xe \v RsslDateTime Primitive Type\:rsslBlankDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWL" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i pDateTime})}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pDateTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure to set to blank \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATETIME}}} \par
}}{
Definition at line 189 of file rsslDateTime.h.}\par
}
{\xe \v rsslClearDateTime\:RsslDateTime Primitive Type}
{\xe \v RsslDateTime Primitive Type\:rsslClearDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i pDateTime})}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pDateTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure to clear \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATETIME}}} \par
}}{
Definition at line 171 of file rsslDateTime.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Encoding\par \pard\plain 
{\tc\tcl2 \v RsslDateTime Encoding}
{\xe \v RsslDateTime Encoding}
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}, only the number of bytes necessary to represent the contained value will be encoded. Any trailing {\b 0}  values (e.g. RsslDateTime::time::millisecond is set to {\b 0} ) will be inferred. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid If sending {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} as blank, use one of the blank initializers. If sending only a portion of the date and time as blank (e.g. blank day), set the corresponding member to its appropriate blank value (RsslDateTime::date::day, RsslDateTime::date::month, RsslDateTime::date::year use {\b 0} , RsslDateTime::time::hour, RsslDateTime::time::minute, RsslDateTime::time::second use {\b 255}  to indicate blank, RsslDateTime::time::millisecond uses {\b 65535} ).\par
}{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Encoding Example
\par}
{\tc\tcl2 \v RsslDateTime Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslDateTime with a month, day, year, hour and minute.\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 rDateTime = \{ \{21, 10, 2013\}, \{11, 24, 0, 0\} \};\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeDateTime() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeTime}}}
(&encIter, &rDateTime)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeDateTime.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *pDateTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode a datetime into a buffer. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeDateTime\:RsslDateTime Encoding}
{\xe \v RsslDateTime Encoding\:rsslEncodeDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i pDateTime})}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator with buffer to encode into. Iterator should also have appropriate version information set \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pDateTime} \cell }{datetime value to encode \cell }
{\row }
}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Decoding\par \pard\plain 
{\tc\tcl2 \v RsslDateTime Decoding}
{\xe \v RsslDateTime Decoding}
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}, although fewer bytes may be on the wire, the full value is reconstructed into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned and the RsslDateTime::time::hour, RsslDateTime::time::minute, RsslDateTime::time::second are set to {\b 255} , RsslDateTime::time::millisecond is set to {\b 65535} , RsslDateTime::date::day, RsslDateTime::date::month, RsslDateTime::date::year are set to {\b 0} \par
}{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Decoding Example
\par}
{\tc\tcl2 \v RsslDateTime Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 rDateTime; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDateTime}}}
(&decIter, &rDateTime);\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeDateTime.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode DateTime. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeDateTime\:RsslDateTime Decoding}
{\xe \v RsslDateTime Decoding\:rsslDecodeDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslDecodeIterator with buffer to decode from and appropriate version information set \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{dataType to put decoded data into \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_RET_SUCCESS if success, RSSL_RET_INCOMPLETE_DATA if failure, RSSL_RET_BLANK_DATA if data is blank value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Utility & Conversion Functions\par \pard\plain 
{\tc\tcl2 \v RsslDateTime Utility & Conversion Functions}
{\xe \v RsslDateTime Utility & Conversion Functions}
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} utility and conversion helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There are several helper and conversion functions provided for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}. These can help with comparing and converting between {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} and various date and time strings. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeGmtTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *oDateTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} to now/current time and date in GMT. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWP" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *lhs, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *rhs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks equality of two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structures. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeIsValid}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *iDateTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifies that day, month, year, hour, minute, second, and millisecond information is valid (e.g. values that correspond to actual date and time information) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeLocalTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *oDateTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} to now/current time and date in the local time zone. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWS" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeStringToDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *oDateTime, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *iDateTimeString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts DateTime string to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}, expects date before time, where date is formatted in in strftime()'s "%d %b %Y" format (e.g. 01 JUN 2003) or "%m/%d/%y" and time is formatted in strftime()'s "%H:%M" or "%H:%M:%S" format (e.g. 13:01 or 15:23:54). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWT" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *oBuffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 dataType, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 *iDateTime)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure to a string. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDateTimeGmtTime\:RsslDateTime Utility & Conversion Functions}
{\xe \v RsslDateTime Utility & Conversion Functions\:rsslDateTimeGmtTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeGmtTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i oDateTime})}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oDateTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure to populate with GMT time \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} \par
}}}
{\xe \v rsslDateTimeIsEqual\:RsslDateTime Utility & Conversion Functions}
{\xe \v RsslDateTime Utility & Conversion Functions\:rsslDateTimeIsEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWP" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i lhs}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i rhs})}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lhs} \cell }{Pointer to the left hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rhs} \cell }{Pointer to the right hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structures are equal, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} \par
}}{
Definition at line 317 of file rsslDateTime.h.}\par
}
{\xe \v rsslDateTimeIsValid\:RsslDateTime Utility & Conversion Functions}
{\xe \v RsslDateTime Utility & Conversion Functions\:rsslDateTimeIsValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeIsValid}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i iDateTime})}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iDateTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} to check validity \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if validly populated, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} \par
}}}
{\xe \v rsslDateTimeLocalTime\:RsslDateTime Utility & Conversion Functions}
{\xe \v RsslDateTime Utility & Conversion Functions\:rsslDateTimeLocalTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeLocalTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i oDateTime})}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oDateTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure to populate with local time \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} \par
}}}
{\xe \v rsslDateTimeStringToDateTime\:RsslDateTime Utility & Conversion Functions}
{\xe \v RsslDateTime Utility & Conversion Functions\:rsslDateTimeStringToDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWS" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeStringToDateTime}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i oDateTime}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i iDateTimeString})}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oDateTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure to populate from string \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iDateTimeString} \cell }{RsslBuffer containing an appropriately formatted string to convert from \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} \par
}}}
{\xe \v rsslDateTimeToString\:RsslDateTime Utility & Conversion Functions}
{\xe \v RsslDateTime Utility & Conversion Functions\:rsslDateTimeToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWT" }{}}{\fldrslt {\cs37\ul\cf2 rsslDateTimeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i oBuffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i dataType}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}
 * {\i iDateTime})}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oBuffer} \cell }{RsslBuffer to populate with string. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} should point memory to convert into where {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} indicates the number of bytes available in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataType} \cell }{Either RSSL_DT_DATE, RSSL_DT_TIME or RSSL_DT_DATETIME depending on which portion(s) to convert to string \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i iDateTime} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} structure to convert to string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslEnum Reference Group}
{\xe \v RsslEnum Reference Group}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The enum primitive type allows the user to represent an unsigned 2-byte value, typically corresponding to an enumerated value that can be cross-referenced with an enum dictionary. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RsslEnunm functionality is defined in  "rtr/rsslTypes.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Primitive Type Overview
\par}
{\tc\tcl2 \v RsslEnum Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} primitive type allows the user to represent an unsigned 2-byte value, typically corresponding to an enumerated value that can be cross-referenced with an enum dictionary. This is defined as a type definition to the system's native unsigned short type.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWV" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Encoding Functions
\par}
{\tc\tcl2 \v RsslEnum Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWX" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnum()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Decoding Functions
\par}
{\tc\tcl2 \v RsslEnum Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeEnum()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWV" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWX" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslEnum encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslEnum decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslEnum Primitive Type}
{\xe \v RsslEnum Primitive Type}
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} primitive type allows the user to represent an unsigned 2-byte value, typically corresponding to an enumerated value that can be cross-referenced with an enum dictionary. This is defined as a type definition to the system's native unsigned short type.\par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When represented as standard data (e.g. not set defined) in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, this type can be represented as blank. When encoding as set defined this cannot be blank. See documentation of those types for detailed information about how to encode or decode blank entries.\par
}{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Creation Examples
\par}
{\tc\tcl2 \v RsslEnum Creation Examples}
The following code example demonstrates stack creation and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}. Because this is a simple primitive type, there is no initializer or clear function required. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslEnum on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 rEnum = 127;\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef rtrUInt16 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumerated Value type. }{
}\par
}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Encoding\par \pard\plain 
{\tc\tcl2 \v RsslEnum Encoding}
{\xe \v RsslEnum Encoding}
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslEnum encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} is a 2-byte unsigned short.\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Encoding Example
\par}
{\tc\tcl2 \v RsslEnum Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslEnum\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 rEnum = 3500;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Invoke rsslEncodeEnum() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnum}}}
(&encIter, &rEnum)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeEnum.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 *pEnum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeEnum\:RsslEnum Encoding}
{\xe \v RsslEnum Encoding\:rsslEncodeEnum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 * {\i pEnum})}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pEnum} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} to encode. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Decoding\par \pard\plain 
{\tc\tcl2 \v RsslEnum Decoding}
{\xe \v RsslEnum Decoding}
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about  RsslEnum decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}, the enum value on the wire is reconstructured into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned.\par
}{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnum Decoding Example
\par}
{\tc\tcl2 \v RsslEnum Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 rEnum; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeEnum}}}
(&decIter, &rEnum)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeEnum.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeEnum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeEnum\:RsslEnum Decoding}
{\xe \v RsslEnum Decoding\:rsslDecodeEnum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeEnum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}} to decode content into. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if data is blank value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslArray Reference Group}
{\xe \v RsslArray Reference Group}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Array primitive type allows the user to represent a uniform list of simple primitive types. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} functionality include  "rtr/rsslArray.h"\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Structure Overview
\par}
{\tc\tcl2 \v RsslArray Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} primitive type allows the user to represent a uniform list of simple primitive types (e.g. all primitives with the exception of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}). All primitive types contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} are the same, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::primitiveType}}}. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} can house variable length content, indicated with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::itemLength}}} of {\b 0} , or fixed length content, indicated with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::itemLength}}} that is {\b non-zero} .\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXG" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Encoding Functions
\par}
{\tc\tcl2 \v RsslArray Encoding Functions}
The following functions are used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} and its entries. Entries can be encoded from a native primitive representation (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}) or from pre-encoded primitive content.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXI" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayInit()}}} - Begins array encoding, initial function to call when encoding an array type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayComplete()}}} - Completes encoding of array, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry()}}} - Encodes entry into an array. Can be primitive representation or pre-encoded.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Decoding Functions
\par}
{\tc\tcl2 \v RsslArray Decoding Functions}
The following functions are used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} and its entries. Once at the individual entry level, a primitive type representation can be obtained by calling the specific primitive decode function.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXK" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArray()}}} - Decodes an array container and provides access to buffer containing all encoded array entries.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArrayEntry()}}} - Decodes array entries and provides access to individual array entries. Primitive decode functions can be used to decode individual array entry into primitive representation. \par \par}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXG" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} structure and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXI" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXK" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslArray Primitive Type}
{\xe \v RsslArray Primitive Type}
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} structure and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} primitive type allows the user to represent a uniform list of simple primitive types (e.g. all primitives with the exception of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}). All primitive types contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} are the same, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::primitiveType}}}. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} can house variable length content, indicated with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::itemLength}}} of {\b 0} , or fixed length content, indicated with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::itemLength}}} that is {\b non-zero} . \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When represented as standard data (e.g. not set defined) in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, this type can be represented as blank. This type has no set defined data counterpart. See documentation of those types for detailed information about how to encode or decode blank entries.\par
}{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Creation Examples
\par}
{\tc\tcl2 \v RsslArray Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} along with use of the clear function to reuse the array. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslArray on the stack and use static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 rsslArray = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ARRAY}}}
;\par
    //Set primitive type and leave length as 0 to encode as variable length\par
    rsslArray.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 primitiveType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_QOS}}}
;\par
    //Now invoke other array encoding functions\par
    \par
    //------------------------------------------\par
\par
    //We can clear the array for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 rsslArray;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearArray}}}
(&rsslArray);\par
    //Set primitive type and set length to positive integer to encode as that fixed length\par
    rsslArray.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 primitiveType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ASCII_STRING}}}
;\par
    rsslArray.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 itemLength}}}
 = 3; //Will result in fixed length, 3 byte ASCII strings\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} is a uniform primitive type that can contain multiple simple primitive entries. Entries can be either fixed length or variable length. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ARRAY}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearArray}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 *pArray)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_ARRAY\:RsslArray Primitive Type}
{\xe \v RsslArray Primitive Type\:RSSL_INIT_ARRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ARRAY}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearArray}}} \par
}}{
Definition at line 34 of file rsslArray.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearArray\:RsslArray Primitive Type}
{\xe \v RsslArray Primitive Type\:rsslClearArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearArray}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 * {\i pArray})}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ARRAY}}} \par
}}{
Definition at line 40 of file rsslArray.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Encoding\par \pard\plain 
{\tc\tcl2 \v RsslArray Encoding}
{\xe \v RsslArray Encoding}
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}, the encoding process begins with a call to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayInit()}}}. Entries can be encoded from a native primitive representation or from pre-encoded primitive content by calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry()}}}. If encoding from a native primitive representation (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}), pass NULL as the pEncData {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} and provide pointer to primitive type as void* parameter. If encoding an entry from pre-encoded content, populate the pEncData {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} and pass NULL as the void*. When all entries are encoded, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayComplete()}}} will finish {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} encoding. \par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Encoding Example
\par}
{\tc\tcl2 \v RsslArray Encoding Example}
The following example demonstrates encoding a fixed-length {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} that contains unsigned integers.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create the success parameter for completing the array.  \par
    //If any error occurs, this becomes false so rsslEncodeArrayComplete will roll back to last successful encoding\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
    //Create and initialize array structure\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 rsslArray = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ARRAY}}}
;\par
    //Set desired primitive type that array will contain\par
    rsslArray.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 primitiveType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT}}}
;\par
    //Set up array to send integers as fixed length of 2 bytes each.  \par
    //If set to 0, array contents are variable length and each integer would be sent as number of bytes required to represent it's value \par
    rsslArray.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 itemLength}}}
 = 2;\par
\par
    //Initialize array encoding, handle any error\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayInit}}}
(&encIter, &rsslArray)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        printf("Error %s (%d) encountered with rsslEncodeArrayInit.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
    else\par
    \{\par
        //Create and populate integer, pass it as void* parameter since it is not pre-encoded\par
        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 uInt = 23456;\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry}}}
(&encIter, NULL, &uInt); \par
        if (retVal < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeArrayEntry.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        \}\par
    \par
        //Encode second entry.\par
        uInt = 61585;\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry}}}
(&encIter, NULL, &uInt); \par
        if (retVal < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeArrayEntry.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        \}\par
    \par
        //Encode third entry.  Because the RsslArray is using a fixed length encoding,\par
        //this will be sent as 2 bytes even though the value can be represented in less than 2 bytes.\par
        uInt = 123;\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry}}}
(&encIter, NULL, &uInt); \par
        if (retVal < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeArrayEntry.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        \}\par
\par
    \}\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayComplete}}}
(&encIter, success);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes array encoding. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pEncData, const void *pData)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Perform array item encoding (item can only be simple primitive type such as {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} and not another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} or container type) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 *pArray)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begin encoding process for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} primitive type. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeArrayComplete\:RsslArray Encoding}
{\xe \v RsslArray Encoding\:rsslEncodeArrayComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}.\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry()}}} for each item in the array\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayComplete()}}}\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encoder iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the aggregate, if false - remove the aggregate from the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeArrayEntry\:RsslArray Encoding}
{\xe \v RsslArray Encoding\:rsslEncodeArrayEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pEncData}, const void * {\i pData})}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes entries in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}.\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry()}}} for each item in the array\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayComplete()}}}\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Only one of pEncBuffer or pData should be supplied.\par
If specifying {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::itemLength}}} and an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::primitiveType}}} of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ASCII_STRING}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_BUFFER}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_RMTES_STRING}}}, or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UTF8_STRING}}}, the length of the buffer should be less than or equal to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::itemLength}}}. If content is longer, it will be truncated. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{encode iterator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pEncData} \cell }{A pointer to pre-encoded data, if the user wishes to copy pre-encoded data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pData} \cell }{A pointer to the primitive, if the user wishes to encode it. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeArrayInit\:RsslArray Encoding}
{\xe \v RsslArray Encoding\:rsslEncodeArrayInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 * {\i pArray})}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}.\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAID" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayEntry()}}} for each item in the array\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeArrayComplete()}}}\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encoder iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pArray} \cell }{partially populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} structure to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Decoding\par \pard\plain 
{\tc\tcl2 \v RsslArray Decoding}
{\xe \v RsslArray Decoding}
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}, each entry is returned as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing the encoded content. Further decoding of an entry's content can be achieved by using the appropriate primitive type decoder (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeReal()}}}). If desired, decoding of an entry's content can be skipped by invoking the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArrayEntry()}}} function to move to the next entry. \par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Decoding Example
\par}
{\tc\tcl2 \v RsslArray Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 rsslArray; //No need to clear since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 entryBuffer; //Buffer to expose individual array entry contents through\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArray}}}
(&decIter, &rsslArray)) >= {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        //decode each array entry\par
        while ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArrayEntry}}}
(&decIter, &entryBuffer)) != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}}
)\par
        \{\par
            //handle failure cases\par
            if (retVal < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
            \{\par
                //handle error as needed\par
                printf("Error %s (%d) encountered while decoding array entries.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            \}\par
            else\par
            \{\par
                //now decode primitive types\par
                switch(rsslArray.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 primitiveType}}}
)\par
                \{\par
                    //handle appropriate primitive types and do something with data\par
                    case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT}}}
:\par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 uInt;\par
                        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeInt}}}
(&decIter, &uInt);\par
                    break;\par
                    ...\par
                \}\par
            \}\par
        \}\par
    \}\par
    else\par
    \{\par
        //initial array decode failed\par
        printf("Error %s (%d) encountered while decoding array.  Error text: %s\\n",\par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArray}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 *pArray)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} primitive type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArrayEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes and returns a single {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} entry from within RsslArray::encEntries. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeArray\:RsslArray Decoding}
{\xe \v RsslArray Decoding\:rsslDecodeArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArray}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}
 * {\i pArray})}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArray()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeArrayEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pArray} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} structure to populate with decoded contents. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::encData}}} will point to encoded array content. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArrayEntry}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslDecodeArrayEntry\:RsslArray Decoding}
{\xe \v RsslArray Decoding\:rsslDecodeArrayEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArrayEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuffer})}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArray()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeArrayEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{RsslBuffer to decode content into. User can continue to decode into primitive by calling appropriate primitive type decoder, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray::primitiveType}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArray}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslQos Reference Group}
{\xe \v RsslQos Reference Group}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The quality-of-service primitive type can be used to indicate the quality of associated content using timliness and rate characteristics. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} functionality is defined in  "rtr/rsslQos.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Primitive Type Overview
\par}
{\tc\tcl2 \v RsslQos Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} primitive type can be used to indicate the quality of service associated with content. This is broken into two dimensions: {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Timeliness (defined by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXS" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosTimeliness}}}) indicates information about the age of content, for example whether it is real time or delayed. \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Rate (defined by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXT" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosRates}}}) indicates the content's period of change, for example whether it is tick-by-tick or conflated.\par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXU" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Encoding Functions
\par}
{\tc\tcl2 \v RsslQos Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXW" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAII" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeQos()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Decoding Functions
\par}
{\tc\tcl2 \v RsslQos Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXY" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeQos()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Utility & Conversion Functions
\par}
{\tc\tcl2 \v RsslQos Utility & Conversion Functions}
Transport API C Edition provides several common conversion helpers for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYA" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Utility & Conversion Functions}}} for more detailed information.\par\par \par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXU" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXW" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXY" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYA" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos Utility & Conversion Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} utility and conversion helper functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type}
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} primitive type can be used to indicate the quality of service associated with content. This is broken into two dimensions: {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Timeliness (defined by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXS" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosTimeliness}}}) indicates information about the age of content, for example whether it is real time or delayed. \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Rate (defined by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXT" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosRates}}}) indicates the content's period of change, for example whether it is tick-by-tick or conflated.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When represented as standard data (e.g. not set defined) in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, this type can be represented as blank. When encoding as set defined this cannot be blank. See documentation of those types for detailed information about how to encode or decode blank entries.\par
}{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Creation Examples
\par}
{\tc\tcl2 \v RsslQos Creation Examples}
The following code example demonstrates stack creation and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} initializer or clear functions, all values are set to {\b 0} . This results in having an unspecified QoS, which is not supported. The user should ensure that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} is populated appropriatley in correspondance to the actual quality of service information being encoded. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} type can be represented as blank when sent only as standard data when contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par}
}\par}
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Creation Examples
\par}
{\tc\tcl2 \v RsslQos Creation Examples}
The following code example demonstrates stack creation, initialization, and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslQos on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 rQos = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
;\par
    //Populate RsslQos with a real time/tick-by-tick qos.  No rate or time info.\par
    rQos.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 rate}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TICK_BY_TICK}}}
;\par
    rQos.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 timeliness}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_REALTIME}}}
;\par
    \par
    //------------------------------------------\par
\par
    //We can clear the RsslQos for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 rQos;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearQos}}}
(&rQos);\par
    //Populate RsslQos with delayed, tick by tick data.  RsslQos::timeInfo indicates delay information.\par
    rQos.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 rate}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TICK_BY_TICK}}}
; // delayed data is still full tick\par
    rQos.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 timeliness}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_DELAYED}}}
;\par
    rQos.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYJ" }{}}{\fldrslt {\cs37\ul\cf2 timeInfo}}}
 = 15;\par
\par
    //--------------------------------------------\par
 \par
    //Alternatly, we can create and populate the RsslQos in a single line\par
    //Populate RsslQos with timeliness, rate, dynamic, timeInfo, rateInfo\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 rQos = \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_REALTIME}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_JIT_CONFLATED}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 0, 0 \};\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} can be used to indicate the quality of service associated with content. This includes timeliness (e.g. age) and rate (e.g. period of change) information. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
\~ \{ 0, 0, 0, 0, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} static initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearQos}}}
(pQos)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} structure. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXT" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosRates}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_UNSPECIFIED}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TICK_BY_TICK}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_JIT_CONFLATED}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TIME_CONFLATED}}}
 =  3
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} Rate enumerations, used to convey information about the data\'92s period of change. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXS" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosTimeliness}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_UNSPECIFIED}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_REALTIME}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_DELAYED_UNKNOWN}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_DELAYED}}}
 =  3
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} Timeliness enumerations, used to convey information about the age of the data. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_QOS\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RSSL_INIT_QOS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
\~ \{ 0, 0, 0, 0, 0 \}}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearQos}}} \par
}}{
Definition at line 37 of file rsslQos.h.}\par
}
{\xe \v rsslClearQos\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:rsslClearQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearQos}}}
( pQos)}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( void )( (pQos)->timeliness = 0, \\\par
                            (pQos)->rate = 0, \\\par
                            (pQos)->dynamic = 0, \\\par
                            (pQos)->timeInfo = 0, \\\par
                            (pQos)->rateInfo = 0  )\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}} \par
}}{
Definition at line 43 of file rsslQos.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslQosRates\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RsslQosRates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXT" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosRates}}}
}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_QOS_RATE_UNSPECIFIED\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RSSL_QOS_RATE_UNSPECIFIED}
{\b {\i RSSL_QOS_RATE_UNSPECIFIED{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rate is Unspecified, indicates initialized structure and not intended to be encoded \par
}{\xe \v RSSL_QOS_RATE_TICK_BY_TICK\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RSSL_QOS_RATE_TICK_BY_TICK}
{\b {\i RSSL_QOS_RATE_TICK_BY_TICK{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rate is Tick By Tick, indicates every change to information is conveyed \par
}{\xe \v RSSL_QOS_RATE_JIT_CONFLATED\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RSSL_QOS_RATE_JIT_CONFLATED}
{\b {\i RSSL_QOS_RATE_JIT_CONFLATED{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rate is Just In Time Conflated, indicates extreme bursts of data may be conflated \par
}{\xe \v RSSL_QOS_RATE_TIME_CONFLATED\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RSSL_QOS_RATE_TIME_CONFLATED}
{\b {\i RSSL_QOS_RATE_TIME_CONFLATED{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rate is conflated by a specific amount of time (in ms), where conflation time is provided in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYP" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::rateInfo}}} \par
}}
\par
{
Definition at line 63 of file rsslQos.h.}\par
}
{\xe \v RsslQosTimeliness\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RsslQosTimeliness}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXS" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosTimeliness}}}
}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_QOS_TIME_UNSPECIFIED\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RSSL_QOS_TIME_UNSPECIFIED}
{\b {\i RSSL_QOS_TIME_UNSPECIFIED{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timeliness is unspecified, indicates initialized structure and not intended to be encoded. \par
}{\xe \v RSSL_QOS_TIME_REALTIME\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RSSL_QOS_TIME_REALTIME}
{\b {\i RSSL_QOS_TIME_REALTIME{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timeliness is Realtime, indicates information is updated as soon as new information becomes available \par
}{\xe \v RSSL_QOS_TIME_DELAYED_UNKNOWN\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RSSL_QOS_TIME_DELAYED_UNKNOWN}
{\b {\i RSSL_QOS_TIME_DELAYED_UNKNOWN{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timeliness is delayed, but delay time info is unknown \par
}{\xe \v RSSL_QOS_TIME_DELAYED\:RsslQos Primitive Type}
{\xe \v RsslQos Primitive Type\:RSSL_QOS_TIME_DELAYED}
{\b {\i RSSL_QOS_TIME_DELAYED{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timeliness is delayed by a specific amount of time, where amount is provided in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::timeInfo}}} \par
}}
\par
{
Definition at line 53 of file rsslQos.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Encoding\par \pard\plain 
{\tc\tcl2 \v RsslQos Encoding}
{\xe \v RsslQos Encoding}
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}, only the number of bytes necessary to represent the contained value will be encoded. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} containing {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_UNSPECIFIED}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_UNSPECIFIED}}} is not supported. These values are intended as structure initializer values and not for providing or consuming. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::timeInfo}}} is applicable only when specifying an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::timeliness}}} value of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_DELAYED}}}. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYP" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::rateInfo}}} is applicable only when specifying an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::rate}}} value of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TIME_CONFLATED}}}.\par}
}{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Encoding Example
\par}
{\tc\tcl2 \v RsslQos Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslQos\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 rQos = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    rQos.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 rate}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TICK_BY_TICK}}}
;\par
    rQos.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 timeliness}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_REALTIME}}}
;\par
\par
    //Invoke rsslEncodeQos() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAII" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeQos}}}
(&encIter, &rQos)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeQos.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAII" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *pQos)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeQos\:RsslQos Encoding}
{\xe \v RsslQos Encoding\:rsslEncodeQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAII" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i pQos})}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pQos} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} value to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Decoding\par \pard\plain 
{\tc\tcl2 \v RsslQos Decoding}
{\xe \v RsslQos Decoding}
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}, although fewer bytes may be on the wire, the full signed integer value is reconstructed into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
If an unspecified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} is recieved (e.g. sent by a version of a component that was released prior to unspecified QoS being restricted on the wire), this will be interpredted by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} decode functionality as a QoS of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_REALTIME}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TICK_BY_TICK}}}\par}
}{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Decoding Example
\par}
{\tc\tcl2 \v RsslQos Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 rQos; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeQos}}}
(&decIter, &rInt)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeQos.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeQos\:RsslQos Decoding}
{\xe \v RsslQos Decoding\:rsslDecodeQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} to decode content into. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if data is blank/zero length. \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Utility & Conversion Functions\par \pard\plain 
{\tc\tcl2 \v RsslQos Utility & Conversion Functions}
{\xe \v RsslQos Utility & Conversion Functions}
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} utility and conversion helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There are several helper and conversion functions provided for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYS" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *targetQos, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *sourceQos)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies source QoS into target QoS. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYT" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosIsBetter}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *newQos, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *oldQos)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the new QoS is better than the old QoS, where real-time is more desirable than delayed, tick-by-tick is more desirable than conflated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYU" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *qos1, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *qos2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks equality of two {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} structures. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYV" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosIsInRange}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *bestQos, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *worstQos, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *Qos)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the QoS is in the range defined using the best and worst QoS. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYW" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosRateToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::rate}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYX" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosTimelinessToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::timeliness}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYY" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *oBuffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 *pQos)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}, including all {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} members. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslCopyQos\:RsslQos Utility & Conversion Functions}
{\xe \v RsslQos Utility & Conversion Functions\:rsslCopyQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYS" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i targetQos}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i sourceQos})}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i targetQos} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} to copy into \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sourceQos} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} to copy from \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} \par
}}{
Definition at line 189 of file rsslQos.h.}\par
}
{\xe \v rsslQosIsBetter\:RsslQos Utility & Conversion Functions}
{\xe \v RsslQos Utility & Conversion Functions\:rsslQosIsBetter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYT" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosIsBetter}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i newQos}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i oldQos})}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newQos} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} representing the new quality of service. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oldQos} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} representing the old quality of service. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if newQos is better, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} \par
}}}
{\xe \v rsslQosIsEqual\:RsslQos Utility & Conversion Functions}
{\xe \v RsslQos Utility & Conversion Functions\:rsslQosIsEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYU" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosIsEqual}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i qos1}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i qos2})}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i qos1} \cell }{Pointer to the left hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} structure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i qos2} \cell }{Pointer to the right hand side {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} structure. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} structures are equal, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} \par
}}{
Definition at line 152 of file rsslQos.h.}\par
}
{\xe \v rsslQosIsInRange\:RsslQos Utility & Conversion Functions}
{\xe \v RsslQos Utility & Conversion Functions\:rsslQosIsInRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYV" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosIsInRange}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i bestQos}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i worstQos}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i Qos})}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bestQos} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} representing the best QoS within the desired range \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i worstQos} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} representing the worst QoS within the desired range \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Qos} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} to check against the specified QoS range \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if Qos is within the range, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} \par
}}}
{\xe \v rsslQosRateToString\:RsslQos Utility & Conversion Functions}
{\xe \v RsslQos Utility & Conversion Functions\:rsslQosRateToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYW" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosRateToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i value})}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXT" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosRates}}} enumeration to convert to string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid const char* representation of corresponding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXT" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosRates}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXT" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosRates}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} \par
}}{
Definition at line 104 of file rsslQos.h.}\par
}
{\xe \v rsslQosTimelinessToString\:RsslQos Utility & Conversion Functions}
{\xe \v RsslQos Utility & Conversion Functions\:rsslQosTimelinessToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYX" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosTimelinessToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i value})}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXS" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosTimeliness}}} enumeration to convert to string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid const char* representation of corresponding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXS" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosTimeliness}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXS" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosTimeliness}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} \par
}}{
Definition at line 86 of file rsslQos.h.}\par
}
{\xe \v rsslQosToString\:RsslQos Utility & Conversion Functions}
{\xe \v RsslQos Utility & Conversion Functions\:rsslQosToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYY" }{}}{\fldrslt {\cs37\ul\cf2 rsslQosToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i oBuffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 * {\i pQos})}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oBuffer} \cell }{RsslBuffer to populate with string. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} should point memory to convert into where {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} indicates the number of bytes available in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pQos} \cell }{Fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} structure \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} \par
}}{
Definition at line 123 of file rsslQos.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslState Reference Group}
{\xe \v RsslState Reference Group}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The state primitive type can be used to convey data and stream health information. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} functionality is defined in  "rtr/rsslState.h",  "rtr/rsslPrimitiveEncoders.h", and  "rtr/rsslPrimitiveDecoders.h"\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Primitive Type Overview
\par}
{\tc\tcl2 \v RsslState Primitive Type Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} primitive type can be used to convey data and stream health information. {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Data State (defined by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}}) indicates whether the data is ok or suspect. \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stream State (defined by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}}) indicates whether the stream is open, closed, closed but recoverable, redirected, or non-streaming.\par}
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZC" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Primitive Type}}} for more detailed information. \par \par\par\par}
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Encoding Functions
\par}
{\tc\tcl2 \v RsslState Encoding Functions}
The following function is used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZE" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeState()}}} - Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} primitive type. This will perform any necessary byte swapping when encoding into the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Decoding Functions
\par}
{\tc\tcl2 \v RsslState Decoding Functions}
The following function is used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZG" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeState()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} primitive type. This will perform any necessary byte swapping when decoding from the buffer referred to by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}.\par \par}
\par\par \par}
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Utility & Conversion Functions
\par}
{\tc\tcl2 \v RsslState Utility & Conversion Functions}
Transport API C Edition provides several common conversion helpers for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZI" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Utility & Conversion Functions}}} for more detailed information.\par\par \par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZC" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} type. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZE" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZG" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZI" }{}}{\fldrslt {\cs37\ul\cf2 RsslState Utility & Conversion Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} utility and conversion helper functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslState Primitive Type}
{\xe \v RsslState Primitive Type}
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} type. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} primitive type can be used to convey data and stream health information. {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Data State (defined by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}}) indicates whether the data is ok or suspect. \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stream State (defined by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}}) indicates whether the stream is open, closed, closed but recoverable, redirected, or non-streaming.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When represented as standard data (e.g. not set defined) in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, this type can be represented as blank. When encoding as set defined this cannot be blank. See documentation of those types for detailed information about how to encode or decode blank entries.\par
}{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Creation Examples
\par}
{\tc\tcl2 \v RsslState Creation Examples}
The following code example demonstrates stack creation and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} initializer or clear functions, all values are set to {\b 0} . This results in having an unspecified stream state, which is not supported. The user should ensure that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} is populated appropriatley in correspondance to the actual state information being encoded. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} type can be represented as blank when sent only as standard data when contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par}
}\par}
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Creation Examples
\par}
{\tc\tcl2 \v RsslState Creation Examples}
The following code example demonstrates stack creation, initialization, and population of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslState on the stack\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 rState = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}}
;\par
    //Populate RsslState with an open/ok state and no state code.\par
    rState.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZL" }{}}{\fldrslt {\cs37\ul\cf2 streamState}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_OPEN}}}
;\par
    rState.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 dataState}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_OK}}}
;\par
    \par
    //------------------------------------------\par
\par
    //We can clear the RsslState for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 rState;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZP" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearState}}}
(&rState);\par
    //Populate RsslState with Closed Recover, Suspect, and state code\par
    rState.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZL" }{}}{\fldrslt {\cs37\ul\cf2 streamState}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_CLOSED_RECOVER}}}
;\par
    rState.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 dataState}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_SUSPECT}}}
;\par
    rState.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZS" }{}}{\fldrslt {\cs37\ul\cf2 code}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_TOO_MANY_ITEMS}}}
;\par
    rState.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZU" }{}}{\fldrslt {\cs37\ul\cf2 text}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "Too many open items.";\par
    rState.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZU" }{}}{\fldrslt {\cs37\ul\cf2 text}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 20;\par
\par
    //--------------------------------------------\par
 \par
    //Alternatly, we can create and populate the RsslState in a single line\par
    //Populate RsslState with stream state, data state, state code, and text\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 rState = \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_OPEN}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_OK}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NONE}}}
, \{0, 0\} \};\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
State structure, contains information used to convey data and stream health information. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_UNSPECIFIED}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_SUSPECT}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NONE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} static initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZP" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearState}}}
(pState)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} structure. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_NO_CHANGE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_OK}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_SUSPECT}}}
 =  2
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} Data States provide information on the health of the data flowing within a stream. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NONE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NOT_FOUND}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_TIMEOUT}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NOT_ENTITLED}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_INVALID_ARGUMENT}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_USAGE_ERROR}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_PREEMPTED}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_JIT_CONFLATION_STARTED}}}
 =  7, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_REALTIME_RESUMED}}}
 =  8, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_FAILOVER_STARTED}}}
 =  9, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_FAILOVER_COMPLETED}}}
 =  10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_GAP_DETECTED}}}
 =  11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NO_RESOURCES}}}
 =  12, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_TOO_MANY_ITEMS}}}
 =  13, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_ALREADY_OPEN}}}
 =  14, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_SOURCE_UNKNOWN}}}
 =  15, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NOT_OPEN}}}
 =  16, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NON_UPDATING_ITEM}}}
 =  19, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_UNSUPPORTED_VIEW_TYPE}}}
 =  20, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_INVALID_VIEW}}}
 =  21, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_FULL_VIEW_PROVIDED}}}
 =  22, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_UNABLE_TO_REQUEST_AS_BATCH}}}
 =  23, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NO_BATCH_VIEW_SUPPORT_IN_REQ}}}
 =  26, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_EXCEEDED_MAX_MOUNTS_PER_USER}}}
 =  27, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_ERROR}}}
 =  28, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_DACS_DOWN}}}
 =  29, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_USER_UNKNOWN_TO_PERM_SYS}}}
 =  30, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_DACS_MAX_LOGINS_REACHED}}}
 =  31, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_DACS_USER_ACCESS_TO_APP_DENIED}}}
 =  32, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_GAP_FILL}}}
 =  34, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_APP_AUTHORIZATION_FAILED}}}
 =  35, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_MAX_RESERVED}}}
 =  127
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} State Codes provide additional information about the current state. Applications should typically not trigger behavior off of this information. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_UNSPECIFIED}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_OPEN}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_NON_STREAMING}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_CLOSED_RECOVER}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_CLOSED}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_REDIRECTED}}}
 =  5
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} Stream States provide information on the health of the stream. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_STATE\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_INIT_STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_UNSPECIFIED}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_SUSPECT}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NONE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZP" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearState}}} \par
}}{
Definition at line 107 of file rsslState.h.}\par
}
{\xe \v rsslClearState\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:rsslClearState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZP" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearState}}}
( pState)}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ( void )( (pState)->streamState = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_UNSPECIFIED}}}
, \\\par
                         (pState)->dataState   = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_SUSPECT}}}
, \\\par
                         (pState)->code        = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SC_NONE}}}
, \\\par
                         rsslClearBuffer( &(pState)->text ) )\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}} \par
}}{
Definition at line 113 of file rsslState.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslDataStates\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RsslDataStates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}}
}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_DATA_NO_CHANGE\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_DATA_NO_CHANGE}
{\b {\i RSSL_DATA_NO_CHANGE{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) No change to the data state. (Typically used when code and text need to be conveyed, for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, actual state of OK or SUSPECT should be used when available) \par
}{\xe \v RSSL_DATA_OK\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_DATA_OK}
{\b {\i RSSL_DATA_OK{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Data is Ok (indicates that all data associated with the stream is healthy and current) \par
}{\xe \v RSSL_DATA_SUSPECT\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_DATA_SUSPECT}
{\b {\i RSSL_DATA_SUSPECT{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Data is Suspect (similar to a stale data state, indicates that the health of some or all data associated with the stream is out of date or cannot be confirmed that it is current ) \par
}}
\par
{
Definition at line 50 of file rsslState.h.}\par
}
{\xe \v RsslStateCodes\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RsslStateCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}}
}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_SC_NONE\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_NONE}
{\b {\i RSSL_SC_NONE{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) No state code \par
}{\xe \v RSSL_SC_NOT_FOUND\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_NOT_FOUND}
{\b {\i RSSL_SC_NOT_FOUND{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Not found (indicates that requested information was not found, it may become available at a later time or by changing some of the requested parameters) \par
}{\xe \v RSSL_SC_TIMEOUT\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_TIMEOUT}
{\b {\i RSSL_SC_TIMEOUT{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Timeout (indicates that a timeout has occurred somewhere in the system while processing requested information) \par
}{\xe \v RSSL_SC_NOT_ENTITLED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_NOT_ENTITLED}
{\b {\i RSSL_SC_NOT_ENTITLED{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Not entitled (indicates that the request has been denied due to a permissioning issue) \par
}{\xe \v RSSL_SC_INVALID_ARGUMENT\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_INVALID_ARGUMENT}
{\b {\i RSSL_SC_INVALID_ARGUMENT{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Invalid argument (indicates that a parameter on the request was invalid or unrecognized somewhere within the system) \par
}{\xe \v RSSL_SC_USAGE_ERROR\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_USAGE_ERROR}
{\b {\i RSSL_SC_USAGE_ERROR{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Usage Error (indicates an invalid usage within the system) \par
}{\xe \v RSSL_SC_PREEMPTED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_PREEMPTED}
{\b {\i RSSL_SC_PREEMPTED{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(6) Preempted (indicates the stream has been pre-empted, possibly by a caching device) \par
}{\xe \v RSSL_SC_JIT_CONFLATION_STARTED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_JIT_CONFLATION_STARTED}
{\b {\i RSSL_SC_JIT_CONFLATION_STARTED{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(7) Conflation started (indicates that Just-In-Time Conflation has begun on the stream, user should be notified when JIT Conflation ends via an RSSL_SC_REALTIME_RESUMED code) \par
}{\xe \v RSSL_SC_REALTIME_RESUMED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_REALTIME_RESUMED}
{\b {\i RSSL_SC_REALTIME_RESUMED{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(8) Realtime resumed (indicates that Just-In-Time Conflation has completed on the stream) \par
}{\xe \v RSSL_SC_FAILOVER_STARTED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_FAILOVER_STARTED}
{\b {\i RSSL_SC_FAILOVER_STARTED{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(9) Failover started (indicates that a component has begun recovery due to a failover condition, user should be notified when recovery due to failover is completed via an RSSL_SC_FAILOVER_COMPLETED code) \par
}{\xe \v RSSL_SC_FAILOVER_COMPLETED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_FAILOVER_COMPLETED}
{\b {\i RSSL_SC_FAILOVER_COMPLETED{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(10) Failover completed (indicates that recovery from failover condition has been completed) \par
}{\xe \v RSSL_SC_GAP_DETECTED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_GAP_DETECTED}
{\b {\i RSSL_SC_GAP_DETECTED{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(11) Gap detected (indicates that gap has been detected between messages, this may have been detected via an external reliability mechanism (e.g. transport) or may have been detected using the seqNum present on the UPA messages) \par
}{\xe \v RSSL_SC_NO_RESOURCES\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_NO_RESOURCES}
{\b {\i RSSL_SC_NO_RESOURCES{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(12) No resources (indicates that there are no resources available to accommodate the stream) \par
}{\xe \v RSSL_SC_TOO_MANY_ITEMS\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_TOO_MANY_ITEMS}
{\b {\i RSSL_SC_TOO_MANY_ITEMS{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(13) Too many items open (indicates that a request cannot be processed because there are too many other streams already open) \par
}{\xe \v RSSL_SC_ALREADY_OPEN\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_ALREADY_OPEN}
{\b {\i RSSL_SC_ALREADY_OPEN{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(14) Item already open (indicates that a stream is already open on the connection for the requested information) \par
}{\xe \v RSSL_SC_SOURCE_UNKNOWN\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_SOURCE_UNKNOWN}
{\b {\i RSSL_SC_SOURCE_UNKNOWN{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(15) Unknown source (indicates that requested service is not known, service may become available at a later point in time) \par
}{\xe \v RSSL_SC_NOT_OPEN\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_NOT_OPEN}
{\b {\i RSSL_SC_NOT_OPEN{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(16) Not open (indicates that the stream is not opened) (17) Reserved (18) Reserved \par
}{\xe \v RSSL_SC_NON_UPDATING_ITEM\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_NON_UPDATING_ITEM}
{\b {\i RSSL_SC_NON_UPDATING_ITEM{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(19) Item was requested as streaming but does not update \par
}{\xe \v RSSL_SC_UNSUPPORTED_VIEW_TYPE\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_UNSUPPORTED_VIEW_TYPE}
{\b {\i RSSL_SC_UNSUPPORTED_VIEW_TYPE{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(20) View Type requested is not supported for this domain \par
}{\xe \v RSSL_SC_INVALID_VIEW\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_INVALID_VIEW}
{\b {\i RSSL_SC_INVALID_VIEW{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(21) An invalid view was requested \par
}{\xe \v RSSL_SC_FULL_VIEW_PROVIDED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_FULL_VIEW_PROVIDED}
{\b {\i RSSL_SC_FULL_VIEW_PROVIDED{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(22) Although a view was requested, the full view is being provided \par
}{\xe \v RSSL_SC_UNABLE_TO_REQUEST_AS_BATCH\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_UNABLE_TO_REQUEST_AS_BATCH}
{\b {\i RSSL_SC_UNABLE_TO_REQUEST_AS_BATCH{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(23) Although a batch of items were requested, the batch was split into individual request messages (24) Reserved (25) Reserved \par
}{\xe \v RSSL_SC_NO_BATCH_VIEW_SUPPORT_IN_REQ\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_NO_BATCH_VIEW_SUPPORT_IN_REQ}
{\b {\i RSSL_SC_NO_BATCH_VIEW_SUPPORT_IN_REQ{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(26) Request does not support batch and view \par
}{\xe \v RSSL_SC_EXCEEDED_MAX_MOUNTS_PER_USER\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_EXCEEDED_MAX_MOUNTS_PER_USER}
{\b {\i RSSL_SC_EXCEEDED_MAX_MOUNTS_PER_USER{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(27) Login rejected, exceeded maximum number of mounts per user \par
}{\xe \v RSSL_SC_ERROR\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_ERROR}
{\b {\i RSSL_SC_ERROR{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(28) Internal error from sender. \par
}{\xe \v RSSL_SC_DACS_DOWN\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_DACS_DOWN}
{\b {\i RSSL_SC_DACS_DOWN{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(29) A21: Connection to DACS down, users are not allowed to connect" \par
}{\xe \v RSSL_SC_USER_UNKNOWN_TO_PERM_SYS\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_USER_UNKNOWN_TO_PERM_SYS}
{\b {\i RSSL_SC_USER_UNKNOWN_TO_PERM_SYS{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(30) User unknown to permissioning system, it could be DACS, AAA or EED \par
}{\xe \v RSSL_SC_DACS_MAX_LOGINS_REACHED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_DACS_MAX_LOGINS_REACHED}
{\b {\i RSSL_SC_DACS_MAX_LOGINS_REACHED{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(31) Maximum logins reached. \par
}{\xe \v RSSL_SC_DACS_USER_ACCESS_TO_APP_DENIED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_DACS_USER_ACCESS_TO_APP_DENIED}
{\b {\i RSSL_SC_DACS_USER_ACCESS_TO_APP_DENIED{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(32) The application is denied access to the system (33) Reserved \par
}{\xe \v RSSL_SC_GAP_FILL\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_GAP_FILL}
{\b {\i RSSL_SC_GAP_FILL{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(34) Content is intended to fill a recognized gap \par
}{\xe \v RSSL_SC_APP_AUTHORIZATION_FAILED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_APP_AUTHORIZATION_FAILED}
{\b {\i RSSL_SC_APP_AUTHORIZATION_FAILED{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(35) Application Authorization Failed \par
}{\xe \v RSSL_SC_MAX_RESERVED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_SC_MAX_RESERVED}
{\b {\i RSSL_SC_MAX_RESERVED{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(127) Max reserved value \par
}}
\par
{
Definition at line 62 of file rsslState.h.}\par
}
{\xe \v RsslStreamStates\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RsslStreamStates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}}
}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_STREAM_UNSPECIFIED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_STREAM_UNSPECIFIED}
{\b {\i RSSL_STREAM_UNSPECIFIED{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Unspecified (Used as a structure initialization value and is not intended to be encoded or decoded) \par
}{\xe \v RSSL_STREAM_OPEN\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_STREAM_OPEN}
{\b {\i RSSL_STREAM_OPEN{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Stream is open (typically implies that information will be streaming, as information changes updated information will be sent on the stream, after final {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}) \par
}{\xe \v RSSL_STREAM_NON_STREAMING\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_STREAM_NON_STREAMING}
{\b {\i RSSL_STREAM_NON_STREAMING{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Request was non-streaming (after final {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} is received, the stream will be closed and no updated information will be delivered without subsequent re-request) \par
}{\xe \v RSSL_STREAM_CLOSED_RECOVER\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_STREAM_CLOSED_RECOVER}
{\b {\i RSSL_STREAM_CLOSED_RECOVER{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Closed, the applications may attempt to re-open the stream later (can occur via either an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} or an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}) \par
}{\xe \v RSSL_STREAM_CLOSED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_STREAM_CLOSED}
{\b {\i RSSL_STREAM_CLOSED{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Closed (indicates that the data is not available on this service/connection and is not likely to become available) \par
}{\xe \v RSSL_STREAM_REDIRECTED\:RsslState Primitive Type}
{\xe \v RsslState Primitive Type\:RSSL_STREAM_REDIRECTED}
{\b {\i RSSL_STREAM_REDIRECTED{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Closed and Redirected (indicates that the current stream has been closed and has new identifying information, the user can issue a new request for the data using the new message key information contained in the redirect message) \par
}}
\par
{
Definition at line 36 of file rsslState.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Encoding\par \pard\plain 
{\tc\tcl2 \v RsslState Encoding}
{\xe \v RsslState Encoding}
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}, only the number of bytes necessary to represent the contained value will be encoded. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} containing {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_UNSPECIFIED}}} is not supported. This value is intended as a structure initializer value and not for providing or consuming.\par
}{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Encoding Example
\par}
{\tc\tcl2 \v RsslState Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create and populate the RsslState\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 rState = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    rState.stream = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_OPEN}}}
;\par
    rState.data = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_OK}}}
;\par
\par
    //Invoke rsslEncodeState() function to encode content\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeState}}}
(&encIter, &rState)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered with rsslEncodeState.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 *pState)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to encode an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} into buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeState\:RsslState Encoding}
{\xe \v RsslState Encoding\:rsslEncodeState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 * {\i pState})}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} that has been populated with a buffer to encode into, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pState} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} value to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} for successful encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} contents exceed length of encode buffer referred to by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Decoding\par \pard\plain 
{\tc\tcl2 \v RsslState Decoding}
{\xe \v RsslState Decoding}
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}, although fewer bytes may be on the wire, the full signed integer value is reconstructed into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} type. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
When decoding a blank value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} is returned. \par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
If an unspecified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} is recieved (e.g. sent by a version of a component that was released prior to unspecified QoS being restricted on the wire), this will be interpredted by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} decode functionality as a QoS of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_REALTIME}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TICK_BY_TICK}}}\par}
}{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Decoding Example
\par}
{\tc\tcl2 \v RsslState Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 rState; //No need to initialize since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeState}}}
(&decIter, &rInt)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        //handle error as needed\par
        switch(retVal)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}}
:\par
                //Decoded content was blank\par
            break;\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
:\par
                //Decoding was successful, do something with content\par
                ...\par
            break;\par
            default:\par
                printf("Error %s (%d) encountered with rsslDecodeState.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 *value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} buffer's contents into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeState\:RsslState Decoding}
{\xe \v RsslState Decoding\:rsslDecodeState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 * {\i value})}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} that has been populated with a buffer to decode from, along with appropriate version information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} to decode content into. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if success, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INCOMPLETE_DATA}}} if failure, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BLANK_DATA}}} if data is blank/zero length. \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Utility & Conversion Functions\par \pard\plain 
{\tc\tcl2 \v RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions}
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} utility and conversion helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There are several helper and conversion functions provided for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}. \par
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDataStateInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation of meaning associated with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 RsslState::dataState}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBL" }{}}{\fldrslt {\cs37\ul\cf2 rsslDataStateToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 RsslState::dataState}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBM" }{}}{\fldrslt {\cs37\ul\cf2 rsslIsFinalState}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 *pState)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks is the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} is a final state (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_CLOSED}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_CLOSED_RECOVER}}}, or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_REDIRECTED}}}) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBN" }{}}{\fldrslt {\cs37\ul\cf2 rsslStateCodeDescription}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string description for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZS" }{}}{\fldrslt {\cs37\ul\cf2 RsslState::code}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBO" }{}}{\fldrslt {\cs37\ul\cf2 rsslStateCodeInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation of meaning associated with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZS" }{}}{\fldrslt {\cs37\ul\cf2 RsslState::code}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBP" }{}}{\fldrslt {\cs37\ul\cf2 rsslStateCodeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZS" }{}}{\fldrslt {\cs37\ul\cf2 RsslState::code}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslStateToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *oBuffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 *pState)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}, including all {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} members. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBR" }{}}{\fldrslt {\cs37\ul\cf2 rsslStreamStateInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation of meaning associated with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState::streamState}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBS" }{}}{\fldrslt {\cs37\ul\cf2 rsslStreamStateToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 code)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provide string representation for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState::streamState}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDataStateInfo\:RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions\:rsslDataStateInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDataStateInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i code})}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i code} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}} enumeration to provide meaning as string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid const char* representation of meaning for corresponding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}}
{\xe \v rsslDataStateToString\:RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions\:rsslDataStateToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBL" }{}}{\fldrslt {\cs37\ul\cf2 rsslDataStateToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i code})}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}} enumeration to convert to string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid const char* representation of corresponding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}}
{\xe \v rsslIsFinalState\:RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions\:rsslIsFinalState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBM" }{}}{\fldrslt {\cs37\ul\cf2 rsslIsFinalState}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 * {\i pState})}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pState} \cell }{Populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} to check \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBool RSSL_TRUE if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} is final, RSSL_FALSE otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}{
Definition at line 209 of file rsslState.h.}\par
}
{\xe \v rsslStateCodeDescription\:RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions\:rsslStateCodeDescription}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBN" }{}}{\fldrslt {\cs37\ul\cf2 rsslStateCodeDescription}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i code})}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}} enumeration to provide description for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid const char* description of corresponding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}}
{\xe \v rsslStateCodeInfo\:RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions\:rsslStateCodeInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBO" }{}}{\fldrslt {\cs37\ul\cf2 rsslStateCodeInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i code})}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i code} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}} enumeration to provide meaning as string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid const char* representation of meaning for corresponding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}}
{\xe \v rsslStateCodeToString\:RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions\:rsslStateCodeToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBP" }{}}{\fldrslt {\cs37\ul\cf2 rsslStateCodeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i code})}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}} enumeration to convert to string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid const char* representation of corresponding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}}
{\xe \v rsslStateToString\:RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions\:rsslStateToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslStateToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i oBuffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 * {\i pState})}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oBuffer} \cell }{RsslBuffer to populate with string. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}} should point memory to convert into where {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} indicates the number of bytes available in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::data}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pState} \cell }{Fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} structure \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if successful, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} otherwise \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}}
{\xe \v rsslStreamStateInfo\:RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions\:rsslStreamStateInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBR" }{}}{\fldrslt {\cs37\ul\cf2 rsslStreamStateInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i code})}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i code} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}} enumeration to provide meaning as string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid const char* representation of meaning for corresponding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}}
{\xe \v rsslStreamStateToString\:RsslState Utility & Conversion Functions}
{\xe \v RsslState Utility & Conversion Functions\:rsslStreamStateToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBS" }{}}{\fldrslt {\cs37\ul\cf2 rsslStreamStateToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i code})}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}} enumeration to convert to string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid const char* representation of corresponding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RMTES Decoder Reference Group\par \pard\plain 
{\tc\tcl2 \v RMTES Decoder Reference Group}
{\xe \v RMTES Decoder Reference Group}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RMTES(Reuters Multilingual Text Encoding Standard) Decoder can be used to decode RMTES content into UTF8 or UCS2 Unicode strings for display or machine parsing purposes. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RMTES Decoding functionality is defined in  "rtr/rsslRmtes.h".\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRmtesCacheBuffer Structure Overview
\par}
{\tc\tcl2 \v RsslRmtesCacheBuffer Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} primitive type allows the user to cache an encoded RMTES string for decoding into UTF8 or UCS2 Uncode. See RsslRmtesCacheBufferStruct for more detailed information. \par The buffer consists of an allocated length, a used length, and a pointer. The pointer is used to refer to the content. The allocated length is used to represent the total allocated length of the buffer, and the used length is used to represent the total amount of used data in the cache buffer.\par \par\par\par}
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRmtesCacheBuffer Storage Functions
\par}
{\tc\tcl2 \v RsslRmtesCacheBuffer Storage Functions}
The following function is used to fill an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}'s data.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBV" }{}}{\fldrslt {\cs37\ul\cf2 Rssl RMTES Decoding Functions and Helpers}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESApplyToCache()}}} - This will apply the encoded RMTES data to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}. In addition, this will apply any partial update commands contained within the given RsslBuffer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}. \par \par}
\par\par\par}
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslU16Buffer Structure Overview
\par}
{\tc\tcl2 \v RsslU16Buffer Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}} primitive type allows the user to store a UCS2 Unicode string. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBY" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer Primitive Type}}} for more detailed information. \par The buffer consists of a length, and a pointer. The pointer is used to refer to the content. The length is used to represent the total length of the data contained in the buffer.\par \par\par\par}
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslU16Buffer Usage Functions
\par}
{\tc\tcl2 \v RsslU16Buffer Usage Functions}
The following function is used to fill an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}'s data.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBV" }{}}{\fldrslt {\cs37\ul\cf2 Rssl RMTES Decoding Functions and Helpers}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUCS2()}}} - This will convert the RMTES data contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} to UCS2 Unicode.\par \par}
\par\par\par}
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Rssl RMTES Helper Functions
\par}
{\tc\tcl2 \v Rssl RMTES Helper Functions}
The following function is used to determine if an RMTES-encoded string contains a partial update command.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBV" }{}}{\fldrslt {\cs37\ul\cf2 Rssl RMTES Decoding Functions and Helpers}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCB" }{}}{\fldrslt {\cs37\ul\cf2 rsslHasPartialRMTESUpdate()}}} - Checks the given RsslBuffer for the presence of a partial update command. \par \par}
\par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCC" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} structure and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBY" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer Primitive Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RsslBuffer structure and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBV" }{}}{\fldrslt {\cs37\ul\cf2 Rssl RMTES Decoding Functions and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the Rssl RMTES decoding interface. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRmtesCacheBuffer Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslRmtesCacheBuffer Primitive Type}
{\xe \v RsslRmtesCacheBuffer Primitive Type}
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} structure and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} is used to store RMTES-encoded data for translation to UCS-2 or UTF-8 unicode strings. This is used by the RMTES Decoder interface to apply any Marketfeed semantics to the stored cache. The buffer consists of an used length, an allocated length, and a pointer. The pointer is used to refer to the content. The allocated length is used to represent the lengh of the cache's character buffer, and the used length is used to represent the length of the used data in the cache buffer.\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRmtesCacheBuffer Creation Example
\par}
{\tc\tcl2 \v RsslRmtesCacheBuffer Creation Example}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} along with use of the clear function to reuse the array. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}. After {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESApplyToCache()}}} is called, the data will be copied into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}'s data pointer. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //We can clear the buffer for initial use (or reuse) using the clear function\par
    char cacheMem[100];\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 buffer;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
(&buffer);\par
    //Populate buffer\par
    buffer.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = cacheMem;\par
    // The total used length is 0 after initialization.\par
    buffer.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCF" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 0;      \par
    buffer.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 allocatedLength}}}
 = 100;\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} structure. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRmtesCacheBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 *pBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} structure. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearRmtesCacheBuffer\:RsslRmtesCacheBuffer Primitive Type}
{\xe \v RsslRmtesCacheBuffer Primitive Type\:rsslClearRmtesCacheBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRmtesCacheBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 * {\i pBuffer})}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{Pointer to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} to clear \cell }
{\row }
}
}{
Definition at line 41 of file rsslRmtes.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslU16Buffer Primitive Type\par \pard\plain 
{\tc\tcl2 \v RsslU16Buffer Primitive Type}
{\xe \v RsslU16Buffer Primitive Type}
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about RsslBuffer structure and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}} primitive type allows the user to represent length specified unsigned 16-bit wide character strings. This is used by the RMTES Decoder interface to provider the user with a UCS2 unicode string, and is not sent on the wire. The buffer consists of a length and a pointer, where the pointer is used to refer to the content and the length indicates the number of unsigned 16-bit integers referred to. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
The RMTES decoder interface does not apply a NULL terminator after decoding to a UCS2 string. The length should be used to determine where the buffer contents end.\par
\par}
}{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBuffer Creation Examples
\par}
{\tc\tcl2 \v RsslBuffer Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}} along with use of the clear function to reuse the array. This is typical usage prior to decoding RMTES data into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //We can clear the buffer for initial use (or reuse) using the clear function\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 cacheMem[100];\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}
 buffer;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearU16Buffer}}}
(&buffer);\par
    //Populate buffer\par
    buffer.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCK" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = cacheMem;\par
    buffer.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCL" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 100;\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}} structure. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearU16Buffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}
 *pBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}} structure. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearU16Buffer\:RsslU16Buffer Primitive Type}
{\xe \v RsslU16Buffer Primitive Type\:rsslClearU16Buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearU16Buffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}
 * {\i pBuffer})}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{Pointer to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}} to clear \cell }
{\row }
}
}{
Definition at line 80 of file rsslRmtes.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Rssl RMTES Decoding Functions and Helpers\par \pard\plain 
{\tc\tcl2 \v Rssl RMTES Decoding Functions and Helpers}
{\xe \v Rssl RMTES Decoding Functions and Helpers}
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the Rssl RMTES decoding interface. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The decoding process for RMTES data starts after receiving an RMTES-encoded string. The data is copied into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESApplyToCache()}}}, which applies any marketfeed semantics to the buffer. Then, the user calls either {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUCS2()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUTF8()}}} to convert the string to the appropriate unicode format.\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Rssl RMTES Decoding Example
\par}
{\tc\tcl2 \v Rssl RMTES Decoding Example}
The Rssl RMTES Decoder is capable of decoding an encoded RMTES string into UCS2 or UTF8 encoded data. The first code snippet illustrates decoding RMTES data into UCS2 Unicode.\par{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 inputBuf; //Input buffer, already has been populated.\par
    char cache[100];\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 rmtesCache; // Cache buffer, used to apply any partial updates\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 ucsString[100];\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}
 U16StringBuf; //Unsigned 16-bit integer buffer, used to get the UCS2 encoded string\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    // Setup the cache and U16 string buffers\par
    rmtesCache.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = cache;\par
    rmtesCache.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCF" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 0;  //This is the used length of the buffer.  Since the cache is empty, this is 0\par
    rmtesCache.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 allocatedLength}}}
 = 100;\par
\par
    U16StringBuf.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCK" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = ucsString;\par
    U16StringBuf.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCL" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 100;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESApplyToCache}}}
(&inputBuf, &rmtesCache)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered while applying buffer to RMTES cache.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUCS2}}}
(&rmtesCache, &U16StringBuf)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered while converting buffer from RMTES encoded data to UCS2.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
\par
This second code snippet illustrates decoding RMTES data into UTF8:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 inputBuf; //Input buffer, already has been populated.\par
    char cache[100];\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 rmtesCache; // Cache buffer, used to apply any partial updates\par
    unsigned char utfString[100];\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 charStringBuf;   //character buffer, used to get the UTF8 encoded string\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    // Setup the cache and U16 string buffers\par
    rmtesCache.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = cache;\par
    rmtesCache.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCF" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 0;  //This is the used length of the buffer.  Since the cache is empty, this is 0\par
    rmtesCache.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 allocatedLength}}}
 = 100;\par
\par
    charStringBuf.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = utfString;\par
    charStringBuf.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 100;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESApplyToCache}}}
(&inputBuf, &rmtesCache)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
        \{\par
        printf("Error %s (%d) encountered while applying buffer to RMTES cache.  Error text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUTF8}}}
(&rmtesCache, &charStringBuf)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        printf("Error %s (%d) encountered while converting buffer from RMTES encoded data to UTF8.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}                   \par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCB" }{}}{\fldrslt {\cs37\ul\cf2 rsslHasPartialRMTESUpdate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of partial update commands in the buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESApplyToCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *inBuffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 *cacheBuf)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the buffer to cache. Also parses any marketfeed commands, including partial update and repeat commands. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUCS2}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 *pRmtesBuffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}
 *shortBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the given cache to UCS2 Unicode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUTF8}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 *pRmtesBuffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *charBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the given cache to UTF8 Unicode. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslHasPartialRMTESUpdate\:Rssl RMTES Decoding Functions and Helpers}
{\xe \v Rssl RMTES Decoding Functions and Helpers\:rsslHasPartialRMTESUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCB" }{}}{\fldrslt {\cs37\ul\cf2 rsslHasPartialRMTESUpdate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pBuffer})}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pBuffer} \cell }{Pointer to the RsslBuffer to check \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE if a partial update command is present; RSSL_FALSE if not. \par
}}}
{\xe \v rsslRMTESApplyToCache\:Rssl RMTES Decoding Functions and Helpers}
{\xe \v Rssl RMTES Decoding Functions and Helpers\:rsslRMTESApplyToCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESApplyToCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i inBuffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 * {\i cacheBuf})}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Allocate memory for the cache buffer.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab After decoding the payload buffer, call rsslRMTESApplyToCache to copy the data to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call appropriate unicode decoding function to display the RMTES data.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inBuffer} \cell }{Input rsslBuffer that contains RMTES data \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}} \cell }{Cache buffer, this is populated after the function is complete \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet code indicating success or failure:\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if the operation completes\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INVALID_ARGUMENT}}} if the input buffer has not been allocated\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if the cache buffer is too small\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if the operation is unable to complete due to invalid data\par \par
}}}
{\xe \v rsslRMTESToUCS2\:Rssl RMTES Decoding Functions and Helpers}
{\xe \v Rssl RMTES Decoding Functions and Helpers\:rsslRMTESToUCS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUCS2}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 * {\i pRmtesBuffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}}
 * {\i shortBuffer})}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Allocate memory for the cache buffer.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab After decoding the payload buffer, call rsslRMTESApplyToCache to copy the data to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Allocate memory for the unicode string.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Call rsslRMTESToUCS2 to convert the RMTES data for display or parsing.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRmtesBuffer} \cell }{Input RMTES cache buffer that contains RMTES data \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i shortBuffer} \cell }{unsigned 16-bit integer buffer, populated after the function is complete \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet code indicating success or failure:\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if the operation completes\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INVALID_DATA}}} if the input buffer has not been allocated\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if the output buffer is too small\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if the operation is unable to complete due to invalid data\par \par
}}}
{\xe \v rsslRMTESToUTF8\:Rssl RMTES Decoding Functions and Helpers}
{\xe \v Rssl RMTES Decoding Functions and Helpers\:rsslRMTESToUTF8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUTF8}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}
 * {\i pRmtesBuffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i charBuffer})}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Allocate memory for the cache buffer.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab After decoding the payload buffer, call rsslRMTESApplyToCache to copy the data to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}}.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Allocate memory for the unicode string.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Call rsslRMTESToUTF8 to convert the RMTES data for display or parsing.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRmtesBuffer} \cell }{Input RMTES cache buffer that contains RMTES data \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i charBuffer} \cell }{character buffer, populated after the function is complete \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet code indicating success or failure:\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} if the operation completes\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_INVALID_DATA}}} if the input buffer has not been allocated\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_BUFFER_TOO_SMALL}}} if the output buffer is too small\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if the operation is unable to complete due to invalid data\par \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Data Container Structures\par \pard\plain 
{\tc\tcl2 \v Transport API Data Container Structures}
{\xe \v Transport API Data Container Structures}
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Data Package's container structures are required to encode or decode OMM binary data. These structures are used to encode primitive and container Transport API data structures. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCN" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Field List container type allows the user to represent a collection of field identifier - value pairs, where the value can be a container type or a primitive type. The field identifier can be cross referenced with a field dictionary to determine the specific type of the content. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Element List container type allows the user to represent a collection of name - type - value triples, where the value can be a container type or a primitive type. The name and type information is similar to the content that would be cross referenced with a field dictionary when using an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. No dictionary is required to decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} contents. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCP" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Map container type allows the user to represent a primitiveType key indexed collection of uniform entries (e.g. each entry houses the same containerType). \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Series container type allows the user to represent an implicitly indexed collection of uniform entries (e.g. each entry houses the same containerType). This is well suited for sending infrequently or non-updating table like content, where each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} represents an additional row in a table. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Vector container type allows the user to represent a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} indexed collection of uniform entries (e.g. each entry houses the same containerType). This container type can optionally support sorting, where the consumer of content is responsible for applying actions in the appropriate manner to maintain ordering. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCS" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Filter List container type allows the user to represent an 8-bit ID indexed collection of non-uniform entries (e.g. each entry can house different container types). \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslFieldList Reference Group}
{\xe \v RsslFieldList Reference Group}
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Field List container type allows the user to represent a collection of field identifier - value pairs, where the value can be a container type or a primitive type. The field identifier can be cross referenced with a field dictionary to determine the specific type of the content. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} functionality include  "rtr/rsslFieldList.h"\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList and RsslFieldEntry Structure Overview
\par}
{\tc\tcl2 \v RsslFieldList and RsslFieldEntry Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} container type allows the user to represent a collection of field identifier - value pairs, where the value can be a container type or a primitive type. The field identifier can be cross referenced with a field dictionary to determine the specific type of the content. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCU" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList Container Type}}} for more detailed information on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}. \par \par\par\par}
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Encoding Functions
\par}
{\tc\tcl2 \v RsslFieldList Encoding Functions}
The following functions are used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and its entries. Entries content can be encoded from a native primitive representation (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}), from pre-encoded primitive or containers, from non pre-encoded primitive or containers, or as blank.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCW" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList and RsslFieldEntry Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} has native primitive payload passed in via void*, pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}}, or blank (where void* is NULL and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}} is empty).  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} without pre-encoded payload.  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired. \par \par\par \par}
\par}
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Decoding Functions
\par}
{\tc\tcl2 \v RsslFieldList Decoding Functions}
The following functions are used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and its entries. Once at the individual entry level, the entries content can be left as pre-encoded content or decoded to it's native primitive type or container type representation by cross referencing {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} with field dictionary and invoking correct type decoders. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCY" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList and RsslFieldEntry Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} container and provides access to buffer containing all encoded field entries.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} entries and provides access to each individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} and their content. If further content decoding is desired, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} can be cross referenced with a field dictionary to determine the type and invoke the correct decode functions.  \par \par}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCU" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList Container Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} structures, initializers, flag values, and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCW" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList and RsslFieldEntry Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCY" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList and RsslFieldEntry Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCZ" }{}}{\fldrslt {\cs37\ul\cf2 Field List Set Defined Data Usage, Functions, and Structures}}}
\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Container Type\par \pard\plain 
{\tc\tcl2 \v RsslFieldList Container Type}
{\xe \v RsslFieldList Container Type}
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} structures, initializers, flag values, and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} container type allows the user to represent a collection of field identifier - value pairs, where the value can be a container type or a primitive type. The field identifier can be cross referenced with a field dictionary to determine the specific type of the content. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} can contain standard data and/or set defined data. When set defined data is contained, a set definition is required to decode this content - if not present, all set data decoding will be skipped.\par
}{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Creation Examples
\par}
{\tc\tcl2 \v RsslFieldList Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and any entries will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslFieldList and RsslFieldEntry on the stack and use static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 fieldList = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_LIST}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 fieldEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_ENTRY}}}
;\par
  \par
    //Populate RsslFieldList with relevant information\par
    //Set flags to indicate field list has standard data and dictionary Id\par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDD" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_FIELD_LIST_INFO}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_STANDARD_DATA}}}
;\par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 dictionaryId}}}
 = 1;\par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDH" }{}}{\fldrslt {\cs37\ul\cf2 fieldListNum}}}
 = 10;\par
    //Now invoke RsslFieldList encoding functions (e.g. rsslEncodeFieldListInit). \par
  \par
    //Populate RsslFieldEntry with relevant information (set type to encode and field ID)\par
    fieldEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT}}}
;\par
    fieldEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 fieldId}}}
 = 1;\par
    //Now invoke RsslFieldEntry encode functions, passing in the primitive type payload as unencoded data (e.g. rsslEncodeFieldEntry)\par
  \par
    //------------------------------------------\par
  \par
    //We can also use the clear function for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 fieldList;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 fieldEntry;\par
  \par
    //Clear RsslFieldList and populate with relevant information\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldList}}}
(&fieldList);\par
    //Set flags to indicate field list has standard data, set data, set Id (for decoding and encoding set data), and a dictionary Id \par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDD" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_FIELD_LIST_INFO}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_STANDARD_DATA}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_DATA}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_ID}}}
;\par
    //Populate relevant members on RsslFieldList\par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 dictionaryId}}}
 = 1;\par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDH" }{}}{\fldrslt {\cs37\ul\cf2 fieldListNum}}}
 = 10;\par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDL" }{}}{\fldrslt {\cs37\ul\cf2 setId}}}
 = 3;\par
    //Now invoke RsslFieldList encoding functions, ensuring to pass in set definition (e.g. rsslEncodeFieldListInit).\par
 \par
    //Clear RsslFieldEntry and populate with relevant information\par
    fieldEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 fieldId}}}
 = 6;\par
    fieldEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL}}}
;\par
    //Now invoke RsslFieldEntry encode functions (e.g. rsslEncodeFieldEntry, rsslEncodeFieldEntryInit)\par
}
\par}
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslFieldList Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDN" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList Structure, Initializers, Flag values, and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} Structure, Initializers, and Helper methods. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry Structure, Initalizers and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} Structure, Initializers, and Helper methods. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Structure, Initializers, Flag values, and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} Structure, Initializers, and Helper methods. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} container type allows the user to represent a collection of field identifier - value pairs, where the value can be a container type or a primitive type. The field identifier ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}}) can be cross referenced with a field dictionary to determine the specific type of the content. The dictionary contains specific name and type information (e.g. RDMFieldDictionary). }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_LIST}}}
\~ \{ 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_FIELD_LIST_INFO}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_DATA}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_ID}}}
 =  0x04, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_STANDARD_DATA}}}
 =  0x08
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} (FLF = FieldList Flags) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDR" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListApplyHasInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_FIELD_LIST_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDS" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListApplyHasSetData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDT" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListApplyHasSetId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDU" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListApplyHasStandardData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_STANDARD_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDV" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListCheckHasInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_FIELD_LIST_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDW" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListCheckHasSetData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListCheckHasSetId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDY" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListCheckHasStandardData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_STANDARD_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_FIELD_LIST\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:RSSL_INIT_FIELD_LIST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_LIST}}}
\~ \{ 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldList}}} \par
}}{
Definition at line 53 of file rsslFieldList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslFieldListFlags\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:RsslFieldListFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}}
}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_FLF_NONE\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:RSSL_FLF_NONE}
{\b {\i RSSL_FLF_NONE{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} flags are present \par
}{\xe \v RSSL_FLF_HAS_FIELD_LIST_INFO\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:RSSL_FLF_HAS_FIELD_LIST_INFO}
{\b {\i RSSL_FLF_HAS_FIELD_LIST_INFO{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} has an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::dictionaryId}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::fieldListNum}}}. If not present, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::dictionaryId}}} is assumed to be {\b 1} . \par
}{\xe \v RSSL_FLF_HAS_SET_DATA\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:RSSL_FLF_HAS_SET_DATA}
{\b {\i RSSL_FLF_HAS_SET_DATA{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} payload contains set defined content. To decode, a set definition database is required - otherwise set data will be skipped while decoding. \par
}{\xe \v RSSL_FLF_HAS_SET_ID\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:RSSL_FLF_HAS_SET_ID}
{\b {\i RSSL_FLF_HAS_SET_ID{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} contains has an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDL" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::setId}}}. This indicates which set definition is required to decode any set defined content. If not present but set data is included, this is assumed to be {\b 0} . \par
}{\xe \v RSSL_FLF_HAS_STANDARD_DATA\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:RSSL_FLF_HAS_STANDARD_DATA}
{\b {\i RSSL_FLF_HAS_STANDARD_DATA{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x08) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} contains standard encoded content (e.g. not set defined). \par
}}
\par
{
Definition at line 24 of file rsslFieldList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearFieldList\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:rsslClearFieldList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList})}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_LIST}}} \par
}}{
Definition at line 59 of file rsslFieldList.h.}\par
}
{\xe \v rsslFieldListApplyHasInfo\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:rsslFieldListApplyHasInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDR" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListApplyHasInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList})}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 448 of file rsslFieldList.h.}\par
}
{\xe \v rsslFieldListApplyHasSetData\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:rsslFieldListApplyHasSetData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDS" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListApplyHasSetData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList})}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 484 of file rsslFieldList.h.}\par
}
{\xe \v rsslFieldListApplyHasSetId\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:rsslFieldListApplyHasSetId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDT" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListApplyHasSetId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList})}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 472 of file rsslFieldList.h.}\par
}
{\xe \v rsslFieldListApplyHasStandardData\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:rsslFieldListApplyHasStandardData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDU" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListApplyHasStandardData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList})}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 460 of file rsslFieldList.h.}\par
}
{\xe \v rsslFieldListCheckHasInfo\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:rsslFieldListCheckHasInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDV" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListCheckHasInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList})}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 395 of file rsslFieldList.h.}\par
}
{\xe \v rsslFieldListCheckHasSetData\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:rsslFieldListCheckHasSetData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDW" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListCheckHasSetData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList})}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 434 of file rsslFieldList.h.}\par
}
{\xe \v rsslFieldListCheckHasSetId\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:rsslFieldListCheckHasSetId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDX" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListCheckHasSetId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList})}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 421 of file rsslFieldList.h.}\par
}
{\xe \v rsslFieldListCheckHasStandardData\:RsslFieldList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFieldList Structure, Initializers, Flag values, and Helpers\:rsslFieldListCheckHasStandardData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDY" }{}}{\fldrslt {\cs37\ul\cf2 rsslFieldListCheckHasStandardData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList})}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 408 of file rsslFieldList.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldEntry Structure, Initalizers and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslFieldEntry Structure, Initalizers and Helpers}
{\xe \v RsslFieldEntry Structure, Initalizers and Helpers}
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} Structure, Initializers, and Helper methods. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldEntry Structure, Initializers, and Helpers
\par}
{\tc\tcl2 \v RsslFieldEntry Structure, Initializers, and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. When encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} should be specified. When decoding set data, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} will be populated with information from set definition. When decoding and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UNKNOWN}}}, user should cross reference {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} with the appropriate field dictionary to determine type and name information. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_ENTRY}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 *pField)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_FIELD_ENTRY\:RsslFieldEntry Structure, Initalizers and Helpers}
{\xe \v RsslFieldEntry Structure, Initalizers and Helpers\:RSSL_INIT_FIELD_ENTRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_ENTRY}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldEntry}}} \par
}}{
Definition at line 104 of file rsslFieldList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearFieldEntry\:RsslFieldEntry Structure, Initalizers and Helpers}
{\xe \v RsslFieldEntry Structure, Initalizers and Helpers\:rsslClearFieldEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 * {\i pField})}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_ENTRY}}} \par
}}{
Definition at line 110 of file rsslFieldList.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList and RsslFieldEntry Encoding\par \pard\plain 
{\tc\tcl2 \v RsslFieldList and RsslFieldEntry Encoding}
{\xe \v RsslFieldList and RsslFieldEntry Encoding}
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, the encoding process begins with a call to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit()}}}. Entries can be encoded by using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry()}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} is populated with pre-encodede-encoded content (or blank), or using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit()}}}, the appropriate encode functions based on the type described by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}}, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete()}}}. If encoding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} content from a native primitive representation (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}), pass an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} and provide pointer to primitive type as void* parameter on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry()}}}. If encoding the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} content from pre-encoded content, populate the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} and pass NULL as the void*. If encoding the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} as blank, pass NULL as the void* and pass an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}. When all entries are encoded, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete()}}} will finish {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} encoding. \par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Encoding Example
\par}
{\tc\tcl2 \v RsslFieldList Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create the success parameter for completing the RsslFieldList and RsslFieldEntry encoding.  \par
    //If any error occurs, this becomes false so rsslEncodeFieldEntryComplete() or rsslEncodeFieldListComplete() will roll back to last successful encoding\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
    //Create and initialize RsslFieldList structure\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 fieldList = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_LIST}}}
;\par
    //Set desired flags on field list\par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDD" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_STANDARD_DATA}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_FIELD_LIST_INFO}}}
;\par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 dictionaryId}}}
 = 1;\par
    fieldList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDH" }{}}{\fldrslt {\cs37\ul\cf2 fieldListNum}}}
 = 25;\par
\par
    //Initialize RsslFieldList encoding, handle any error.  Last two parameters are 0 because there is no \par
    //set definitions necessary and no set data is being encoded.\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit}}}
(&encIter, &fieldList, 0, 0)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        printf("Error %s (%d) encountered with rsslEncodeFieldListInit().  Error Text: %s\\n", \par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
    else\par
    \{\par
        //Create the RsslFieldEntry structure and payload primitives, this will be reused so we will clear it between uses.\par
        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 fieldEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_ENTRY}}}
;\par
        uIntKey = 23456;\par
        fieldEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 fieldId}}}
 = 1;\par
        //Begin entry encoding.  Pass in payload as void* for this entry.  \par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry}}}
(&encIter, &fieldEntry, &uIntKey); \par
        if (retVal < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeFieldEntry().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        \}\par
  \par
        //Now encode a container type as content using rsslEncodeFieldEntryInit() and rsslEncodeFieldEntryComplete().  \par
\par
        fieldEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 fieldId}}}
 = -20526;\par
        //Begin entry encoding.  Pass in length hint for expected size\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit}}}
(&encIter, &fieldEntry, 350);\par
        //Now call respective encode functions for type being housed in the RsslFieldEntry\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete}}}
(&encIter, success);\par
    \}\par
    //Done with entries, complete the field list encoding\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete}}}
(&encIter, success);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 *pField, const void *pData)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} where payload is an unencoded primitive type (passed in via void*), blank (where void* is NULL and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}} is empty) , or payload is pre-encoded and populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 *pField, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 encodingMaxSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, where any payload is encoded after this call using the appropriate data type encode functions. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 *pSetDb, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 setEncodingMaxSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begin encoding process for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} container type. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeFieldEntry\:RsslFieldList and RsslFieldEntry Encoding}
{\xe \v RsslFieldList and RsslFieldEntry Encoding\:rsslEncodeFieldEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 * {\i pField}, const void * {\i pData})}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} to encode. If any pre-encoded payload is present, it must be populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}} and should match the type specified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pData} \cell }{Pointer to the primitive representation of the entry's payload, should be of type {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}}. If encoding blank data or content is pre-encoded, this should be passed in as NULL. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeFieldEntryComplete\:RsslFieldList and RsslFieldEntry Encoding}
{\xe \v RsslFieldList and RsslFieldEntry Encoding\:rsslEncodeFieldEntryComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encoder iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} encoding, if false - remove the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeFieldEntryInit\:RsslFieldList and RsslFieldEntry Encoding}
{\xe \v RsslFieldList and RsslFieldEntry Encoding\:rsslEncodeFieldEntryInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 * {\i pField}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i encodingMaxSize})}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i encodingMaxSize} \cell }{max expected encoding size of the entry's payload, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length for the entry's payload. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeFieldListComplete\:RsslFieldList and RsslFieldEntry Encoding}
{\xe \v RsslFieldList and RsslFieldEntry Encoding\:rsslEncodeFieldListComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} encoding \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the vector encoding, if false - remove the vector payload from the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeFieldListInit\:RsslFieldList and RsslFieldEntry Encoding}
{\xe \v RsslFieldList and RsslFieldEntry Encoding\:rsslEncodeFieldListInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 * {\i pSetDb}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i setEncodingMaxSize})}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{partially populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} structure to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSetDb} \cell }{Set Definition database to use while encoding any set defined content. This database must include a definition for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDL" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::setId}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i setEncodingMaxSize} \cell }{max encoding size of the set defined data, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length set defined data. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information. \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList and RsslFieldEntry Decoding\par \pard\plain 
{\tc\tcl2 \v RsslFieldList and RsslFieldEntry Decoding}
{\xe \v RsslFieldList and RsslFieldEntry Decoding}
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, each entry is returned as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} containing the encoded payload content. Further decoding of an entry's content can be achieved by using the appropriate primitive type or container type decoder. If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UNKNOWN}}}, applications can cross reference the fid with a field dictionary to determine the type. If desired, decoding of an entry's content can be skipped by invoking the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldEntry()}}} function to move to the next entry. \par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Decoding Example
\par}
{\tc\tcl2 \v RsslFieldList Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 fieldList; //No need to clear since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 fieldEntry;  //RsslFieldEntry to expose individual entry contents through\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Third parameter is 0 because we do not have set definitions in this example\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList}}}
(&decIter, &fieldList, 0)) >= {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        while ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldEntry}}}
(&decIter, &fieldEntry)) != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}}
)\par
        \{\par
            //handle failure cases\par
            if (retVal < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
            \{\par
                //handle error as needed\par
                printf("Error %s (%d) encountered while decoding field entries.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            \}\par
            else\par
            \{\par
                //now decode field entries contents type\par
                //look up type in dictionary (dictionary functionality can be found in rsslDataDictionary.h\par
                switch(({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEE" }{}}{\fldrslt {\cs37\ul\cf2 getDictionaryEntry}}}
(pDataDict, fieldEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 fieldId}}}
))->rwfType)\par
                \{\par
                    //handle appropriate primitive or container types to decode\par
                    ...\par
                \}\par
            \}\par
        \}\par
    \}\par
    else\par
    \{\par
        //initial field list decode failed\par
        printf("Error %s (%d) encountered while decoding RsslFieldList.  Error text: %s\\n",\par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 *pField)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes and returns a single {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} from within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::encSetData}}} and/or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEG" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::encEntries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 *pFieldList, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 *pLocalSetDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} container. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeFieldEntry\:RsslFieldList and RsslFieldEntry Decoding}
{\xe \v RsslFieldList and RsslFieldEntry Decoding\:rsslDecodeFieldEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}
 * {\i pField})}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::encSetData}}} is present, but no set definition database was passed in to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList()}}}, set data content will be skipped while decoding entries.\par
}Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeFieldEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldEntry} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} to decode content into. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::encData}}} will contain encoded content of entry. To continue decoding into specific data type, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} can be cross referenced with appropriate field dictionary. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslDecodeFieldList\:RsslFieldList and RsslFieldEntry Decoding}
{\xe \v RsslFieldList and RsslFieldEntry Decoding\:rsslDecodeFieldList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}
 * {\i pFieldList}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 * {\i pLocalSetDb})}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeFieldEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldList} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} structure to populate with decoded contents. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::encSetData}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEG" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::encEntries}}} will point to encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} content. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pLocalSetDb} \cell }{Set definition database to use while decoding any set defined content. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Field List Set Defined Data Usage, Functions, and Structures\par \pard\plain 
{\tc\tcl2 \v Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures}
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Field List Set Definition. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global Field List Set Definitions Database. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Field List Set Definition Field Entry. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local Message Field List Set Definitions Database. Must be cleared before use. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_FIELD_SET_BLANK_ID}\~ 255{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FIELD_SET_MAX_LOCAL_ID}}}
\~ 15\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the maximum local message scope set identifier. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_LIST_SET_DB}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}} initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_SET_DEF}}}
\~ \{ 0, 0, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}} static initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_SET_DEF_ENTRY}}}
\~ \{ 0, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry}}} initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_MAX_GLOBAL_SET_ID}\~ 65535{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEP" }{}}{\fldrslt {\cs37\ul\cf2 rsslAddFieldSetDefToDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 *pFieldSetDefDb, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
 *pFieldSetDef){\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deep copies the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}} into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}'s definitions array. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslAllocateFieldSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 *pFieldSetDefDb, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *version){\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates the definitions pointer array of the provided {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}, and deep copies the version string into the structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABER" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 *pFieldSDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABES" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDef}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
 *pFieldLSD)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABET" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDefEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry}}}
 *pFieldEnc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEU" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLocalFieldSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 *pDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldSetDefDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *dIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 *dictionary, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 verbosity, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode a Global field set definition dictionary payload. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeLocalFieldSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 *pLocalSetDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize decoding iterator for a field list set definitions database. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEY" }{}}{\fldrslt {\cs37\ul\cf2 rsslDeleteFieldSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 *pFieldSetDefDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes and frees all memory allocated by rsslAllocateFieldSetDefDb and rsslAddFieldSetDefToDb. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldSetDefDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *eIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 *dictionary, int *currentSetDef, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 verbosity, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encode a Global set definition dictionary payload. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeLocalFieldSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 *pFieldListSetDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encode FieldList set definitions database. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_FIELD_SET_MAX_LOCAL_ID\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:RSSL_FIELD_SET_MAX_LOCAL_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FIELD_SET_MAX_LOCAL_ID}}}
\~ 15}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid value. \par
}}{
Definition at line 78 of file rsslSetData.h.}\par
}
{\xe \v RSSL_INIT_FIELD_LIST_SET_DB\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:RSSL_INIT_FIELD_LIST_SET_DB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_LIST_SET_DB}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0 \}}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABER" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDb}}} \par
}}{
Definition at line 127 of file rsslSetData.h.}\par
}
{\xe \v RSSL_INIT_FIELD_SET_DEF\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:RSSL_INIT_FIELD_SET_DEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_SET_DEF}}}
\~ \{ 0, 0, 0 \}}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABES" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDef}}} \par
}}{
Definition at line 60 of file rsslSetData.h.}\par
}
{\xe \v RSSL_INIT_FIELD_SET_DEF_ENTRY\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:RSSL_INIT_FIELD_SET_DEF_ENTRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_SET_DEF_ENTRY}}}
\~ \{ 0, 0 \}}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABET" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDefEntry}}} \par
}}{
Definition at line 33 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearFieldSetDb\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:rsslClearFieldSetDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABER" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 * {\i pFieldSDb})}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_LIST_SET_DB}}} \par
}}{
Definition at line 133 of file rsslSetData.h.}\par
}
{\xe \v rsslClearFieldSetDef\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:rsslClearFieldSetDef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABES" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDef}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
 * {\i pFieldLSD})}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_SET_DEF}}} \par
}}{
Definition at line 66 of file rsslSetData.h.}\par
}
{\xe \v rsslClearFieldSetDefEntry\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:rsslClearFieldSetDefEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABET" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDefEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry}}}
 * {\i pFieldEnc})}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_SET_DEF_ENTRY}}} \par
}}{
Definition at line 39 of file rsslSetData.h.}\par
}
{\xe \v rsslClearLocalFieldSetDefDb\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:rsslClearLocalFieldSetDefDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEU" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLocalFieldSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 * {\i pDb})}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}} \par
}}{
Definition at line 102 of file rsslSetData.h.}\par
}
{\xe \v rsslDecodeFieldSetDefDictionary\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:rsslDecodeFieldSetDefDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldSetDefDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i dIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 * {\i dictionary}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 {\i verbosity}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function may be called multiple times on the same dictionary, to load information from dictionaries that have been encoded in multiple parts.\parTypical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Initialize the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}} using rsslClearFieldSetDb, then allocate the definitions pointer array and version information with rsslAllocateFieldSetDefDb.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab When a response message containing global field set definition data is received, call rsslDecodeFieldSetDefDictionary.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Continue with decoding messages.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab When finished with the global set definition dictionary, call rsslDeleteFieldSetDefDb to free all allocated memory.\par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dIter} \cell }{An iterator to use. Must be set to the encoded buffer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionary} \cell }{The dictionary to store the decoded field information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verbosity} \cell }{The desired verbosity to decode. See RDMDictionaryVerbosityValues. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the decoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldDictionary}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldSetDefDictionary}}} \par
}\par}
}}
{\xe \v rsslDecodeLocalFieldSetDefDb\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:rsslDecodeLocalFieldSetDefDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeLocalFieldSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 * {\i pLocalSetDb})}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldEntry}}}\par
}Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap()}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector()}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeLocalFieldSetDefDb()}}} If decoding local set definitions from a single thread, RSSL has internal memory that will be \par decoded into. To use this, entries.data and entries.length should be 0. \par If decoding local set definitions from across multiple threads, the user should supply memory \par by populating entries.data. entries.length should be set to the number of bytes available in data. \par\par Alternatively, a separate iterator may be set to the container's encSetDefs and passed into {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeLocalFieldSetDefDb()}}} (the appropriate version information should also be set).\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslDecodeIterator Pointer to the decoding iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pLocalSetDb} \cell }{Pointer to the Field List Set Definitions Database structure to populate. \cell }
{\row }
}
}}
{\xe \v rsslDeleteFieldSetDefDb\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:rsslDeleteFieldSetDefDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEY" }{}}{\fldrslt {\cs37\ul\cf2 rsslDeleteFieldSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 * {\i pFieldSetDefDb})}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the memory used by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}} has been created and managed outside of rsslAllocateFieldSetDefDb and rsslAddFieldSetDefToDb, this function should not be used. \par
}}}
{\xe \v rsslEncodeFieldSetDefDictionary\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:rsslEncodeFieldSetDefDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldSetDefDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i eIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 * {\i dictionary}, int * {\i currentSetDef}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 {\i verbosity}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function supports building the encoded data in multiple parts -- if there is not enough available buffer space to encode the entire dictionary, subsequent calls can be made to this function, each producing the next segment of fields.\parTypical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Initialize the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}} using rsslClearFieldSetDb, then allocate the definitions pointer array and version information with rsslAllocateFieldSetDefDb.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Add the set definitions to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}} using rsslAddFieldSetDefToDb.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Start encoding the message that contains this dictionary payload.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Call rsslEncodeFieldSetDefDictionary.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab If rsslEncodeFieldSetDefDictionary returns RSSL_RET_DICT_PART_ENCODED, go back to step 3, and encode the next part of the payload. Otherwise, if RSSL_RET_SUCCESS is returned, continue.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab When finished with the global set definition dictionary, call rsslDeleteFieldSetDefDb to free all allocated memory.\par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i eIter} \cell }{Iterator to be used for encoding. Prior to each call, the iterator must be cleared and initialized to the buffer to be used for encoding. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionary} \cell }{The dictionary to encode global field set definition information from. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i currentSetDef} \cell }{Tracks which set definitions have been encoded in case of multi-part encoding. Must be initialized to 0 on the first call and is updated with each successfully encoded part. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verbosity} \cell }{The desired verbosity to encode. See RDMDictionaryVerbosityValues. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the encoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid RSSL_RET_DICT_PART_ENCODED when encoding parts, RSSL_RET_SUCCESS for final part or single complete payload. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldSetDefDictionary}}} \par
}\par}
}}
{\xe \v rsslEncodeLocalFieldSetDefDb\:Field List Set Defined Data Usage, Functions, and Structures}
{\xe \v Field List Set Defined Data Usage, Functions, and Structures\:rsslEncodeLocalFieldSetDefDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeLocalFieldSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}
 * {\i pFieldListSetDb})}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{encode iterator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFieldListSetDb} \cell }{database to encode \cell }
{\row }
}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslElementList Reference Group}
{\xe \v RsslElementList Reference Group}
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Element List container type allows the user to represent a collection of name - type - value triples, where the value can be a container type or a primitive type. The name and type information is similar to the content that would be cross referenced with a field dictionary when using an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. No dictionary is required to decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} contents. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} functionality include  "rtr/rsslElementList.h"\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList and RsslElementEntry Structure Overview
\par}
{\tc\tcl2 \v RsslElementList and RsslElementEntry Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} container type allows the user to represent a collection of name - type - value triples, where the value can be a container type or a primitive type. The name and type information is similar to the content that would be cross referenced with a field dictionary when using an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFE" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList Container Type}}} for more detailed information on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}. \par \par\par\par}
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Encoding Functions
\par}
{\tc\tcl2 \v RsslElementList Encoding Functions}
The following functions are used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and its entries. Entries content can be encoded from a native primitive representation (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}), from pre-encoded primitive or containers, from non pre-encoded primitive or containers, or as blank.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFG" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList and RsslElementEntry Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} has native primitive payload passed in via void*, pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}}, or blank (where void* is NULL and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}} is empty).  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} without pre-encoded payload.  \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired. \par \par\par \par}
\par}
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Decoding Functions
\par}
{\tc\tcl2 \v RsslElementList Decoding Functions}
The following functions are used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and its entries. Once at the individual entry level, the entries content can be left as pre-encoded content or decoded to it's native primitive type or container type representation by invoking the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}} decode functions. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList and RsslElementEntry Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} container and provides access to buffer containing all encoded element entries.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} entries and provides access to each individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} and their content. If further content decoding is desired, the application can call the decoder that corresponds to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}}. \par \par}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFE" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList Container Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} structures, initializers, flag values, and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFG" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList and RsslElementEntry Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList and RsslElementEntry Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFJ" }{}}{\fldrslt {\cs37\ul\cf2 Element List Set Defined Data Usage, Functions, and Structures}}}
\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Container Type\par \pard\plain 
{\tc\tcl2 \v RsslElementList Container Type}
{\xe \v RsslElementList Container Type}
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} structures, initializers, flag values, and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} container type allows the user to represent a collection of name - type - value triples, where the value can be a container type or a primitive type. The name and type information is similar to the content that would be cross referenced with a field dictionary when using an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. No dictionary is required to decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} contents. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} can contain standard data and/or set defined data. When set defined data is contained, a set definition is required to decode this content - if not present, all set data decoding will be skipped.\par
}{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Creation Examples
\par}
{\tc\tcl2 \v RsslElementList Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and any entries will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslElementList and RsslElementEntry on the stack and use static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 elementList = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_LIST}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 elementEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_ENTRY}}}
;\par
  \par
    //Populate RsslElementList with relevant information\par
    //Set flags to indicate element list has standard data\par
    elementList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFN" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_STANDARD_DATA}}}
;\par
    //Now invoke RsslElementList encoding functions (e.g. rsslEncodeElementListInit). \par
  \par
    //Populate RsslElementEntry with relevant information (set type to encode and name)\par
    elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT}}}
;\par
    elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 3;\par
    elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "TRI";\par
    //Now invoke RsslElementEntry encode functions, passing in the primitive type payload as unencoded data (e.g. rsslEncodeElementEntry)\par
  \par
    //------------------------------------------\par
  \par
    //We can also use the clear function for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 elementList;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 elementEntry;\par
  \par
    //Clear RsslElementList and populate with relevant information\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementList}}}
(&elementList);\par
    //Set flags to indicate element list has standard data, set data, set Id (for decoding and encoding set data)\par
    elementList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFN" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_STANDARD_DATA}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_SET_DATA}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_SET_ID}}}
;\par
    //Populate relevant members on RsslElementList\par
    elementList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFT" }{}}{\fldrslt {\cs37\ul\cf2 setId}}}
 = 3;\par
    //Now invoke RsslElementList encoding functions, ensuring to pass in set definition (e.g. rsslEncodeElementListInit).\par
 \par
    //Clear RsslElementEntry and populate with relevant information\par
    elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 3;\par
    elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "TRI";\par
    elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL}}}
;\par
    //Now invoke RsslElementEntry encode functions (e.g. rsslEncodeElementEntry, rsslEncodeElementEntryInit)\par
}
\par}
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslElementList Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList Structure, Initializers, Flag values, and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} Structure, Initializers, and Helper methods. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFW" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry Structure, Initalizers and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} Structure, Initializers, and Helper methods. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Structure, Initializers, Flag values, and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers}
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} Structure, Initializers, and Helper methods. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} container type allows the user to represent a collection of name - type - value triples, where the value can be a container type or a primitive type. The name and type information is similar to the content that would be cross referenced with a field dictionary when using an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. No dictionary is required to decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} contents. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_LIST}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} static initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b rsslElementListHasInfo}\~ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListCheckHasInfo}}}
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_ELEMENT_LIST_INFO}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_SET_DATA}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_SET_ID}}}
 =  0x04, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_STANDARD_DATA}}}
 =  0x08
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. (ELF = ElementList Flag) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListApplyHasInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the ::RSSL_FLF_HAS_ELEMENT_LIST_INFO flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGD" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListApplyHasSetData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGE" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListApplyHasSetId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGF" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListApplyHasStandardData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_STANDARD_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListCheckHasInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_ELEMENT_LIST_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGG" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListCheckHasSetData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_SET_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGH" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListCheckHasSetId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_SET_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGI" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListCheckHasStandardData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_STANDARD_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_ELEMENT_LIST\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:RSSL_INIT_ELEMENT_LIST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_LIST}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementList}}} \par
}}{
Definition at line 54 of file rsslElementList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslElementListFlags\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:RsslElementListFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}}
}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_ELF_NONE\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:RSSL_ELF_NONE}
{\b {\i RSSL_ELF_NONE{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} flags are present \par
}{\xe \v RSSL_ELF_HAS_ELEMENT_LIST_INFO\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:RSSL_ELF_HAS_ELEMENT_LIST_INFO}
{\b {\i RSSL_ELF_HAS_ELEMENT_LIST_INFO{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} has an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList::elementListNum}}}. \par
}{\xe \v RSSL_ELF_HAS_SET_DATA\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:RSSL_ELF_HAS_SET_DATA}
{\b {\i RSSL_ELF_HAS_SET_DATA{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} payload contains set defined content. To decode, a set definition database is required - otherwise set data will be skipped while decoding. \par
}{\xe \v RSSL_ELF_HAS_SET_ID\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:RSSL_ELF_HAS_SET_ID}
{\b {\i RSSL_ELF_HAS_SET_ID{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} contains has an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFT" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList::setId}}}. This indicates which set definition is required to decode any set defined content. If not present but set data is included, this is assumed to be {\b 0} . \par
}{\xe \v RSSL_ELF_HAS_STANDARD_DATA\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:RSSL_ELF_HAS_STANDARD_DATA}
{\b {\i RSSL_ELF_HAS_STANDARD_DATA{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x08) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} contains standard encoded content (e.g. not set defined). \par
}}
\par
{
Definition at line 26 of file rsslElementList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearElementList\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:rsslClearElementList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList})}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslElement, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_LIST}}} \par
}}{
Definition at line 60 of file rsslElementList.h.}\par
}
{\xe \v rsslElementListApplyHasInfo\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:rsslElementListApplyHasInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListApplyHasInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList})}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 445 of file rsslElementList.h.}\par
}
{\xe \v rsslElementListApplyHasSetData\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:rsslElementListApplyHasSetData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGD" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListApplyHasSetData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList})}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 481 of file rsslElementList.h.}\par
}
{\xe \v rsslElementListApplyHasSetId\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:rsslElementListApplyHasSetId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGE" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListApplyHasSetId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList})}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 469 of file rsslElementList.h.}\par
}
{\xe \v rsslElementListApplyHasStandardData\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:rsslElementListApplyHasStandardData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGF" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListApplyHasStandardData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList})}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 457 of file rsslElementList.h.}\par
}
{\xe \v rsslElementListCheckHasInfo\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:rsslElementListCheckHasInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListCheckHasInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList})}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 387 of file rsslElementList.h.}\par
}
{\xe \v rsslElementListCheckHasSetData\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:rsslElementListCheckHasSetData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGG" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListCheckHasSetData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList})}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 430 of file rsslElementList.h.}\par
}
{\xe \v rsslElementListCheckHasSetId\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:rsslElementListCheckHasSetId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGH" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListCheckHasSetId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList})}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 416 of file rsslElementList.h.}\par
}
{\xe \v rsslElementListCheckHasStandardData\:RsslElementList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslElementList Structure, Initializers, Flag values, and Helpers\:rsslElementListCheckHasStandardData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGI" }{}}{\fldrslt {\cs37\ul\cf2 rsslElementListCheckHasStandardData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList})}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 402 of file rsslElementList.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementEntry Structure, Initalizers and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslElementEntry Structure, Initalizers and Helpers}
{\xe \v RsslElementEntry Structure, Initalizers and Helpers}
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} Structure, Initializers, and Helper methods. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementEntry Structure, Initializers, and Helpers
\par}
{\tc\tcl2 \v RsslElementEntry Structure, Initializers, and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}} indicates the content type. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_ENTRY}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGL" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 *pElement)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_ELEMENT_ENTRY\:RsslElementEntry Structure, Initalizers and Helpers}
{\xe \v RsslElementEntry Structure, Initalizers and Helpers\:RSSL_INIT_ELEMENT_ENTRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_ENTRY}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGL" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementEntry}}} \par
}}{
Definition at line 95 of file rsslElementList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearElementEntry\:RsslElementEntry Structure, Initalizers and Helpers}
{\xe \v RsslElementEntry Structure, Initalizers and Helpers\:rsslClearElementEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGL" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 * {\i pElement})}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_ENTRY}}} \par
}}{
Definition at line 101 of file rsslElementList.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList and RsslElementEntry Encoding\par \pard\plain 
{\tc\tcl2 \v RsslElementList and RsslElementEntry Encoding}
{\xe \v RsslElementList and RsslElementEntry Encoding}
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, the encoding process begins with a call to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit()}}}. Entries can be encoded by using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry()}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} is populated with pre-encodede-encoded content (or blank), or using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit()}}}, the appropriate encode functions based on the type described by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}}, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete()}}}. If encoding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} content from a native primitive representation (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}), pass an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} and provide pointer to primitive type as void* parameter on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry()}}}. If encoding the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} content from pre-encoded content, populate the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} and pass NULL as the void*. If encoding the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} as blank, pass NULL as the void* and pass an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}. When all entries are encoded, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete()}}} will finish {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} encoding. \par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Encoding Example
\par}
{\tc\tcl2 \v RsslElementList Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create the success parameter for completing the RsslElementList and RsslElementEntry encoding.  \par
    //If any error occurs, this becomes false so rsslEncodeElementEntryComplete() or rsslEncodeElementListComplete() will roll back to last successful encoding\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
    //Create and initialize RsslElementList structure\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 elementList = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_LIST}}}
;\par
    //Set desired flags on element list\par
    elementList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFN" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_STANDARD_DATA}}}
;\par
\par
    //Initialize RsslElementList encoding, handle any error.  Last two parameters are 0 because there is no \par
    //set definitions necessary and no set data is being encoded.\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit}}}
(&encIter, &elementList, 0, 0)) < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        printf("Error %s (%d) encountered with rsslEncodeElementListInit().  Error Text: %s\\n", \par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
    else\par
    \{\par
        //Create the RsslElementEntry structure and payload primitives, this will be reused so we will clear it between uses.\par
        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 elementEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_ENTRY}}}
;\par
        uIntKey = 23456;\par
        elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 3;\par
        elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "BID";\par
        elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT}}}
;\par
        //Begin entry encoding.  Pass in payload as void* for this entry.  \par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry}}}
(&encIter, &elementEntry, &uIntKey); \par
        if (retVal < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeElementEntry().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        \}\par
  \par
        //Now encode a container type as content using rsslEncodeElementEntryInit() and rsslEncodeElementEntryComplete().  \par
\par
        elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 3;\par
        elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "MAP";\par
        elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MAP}}}
;\par
        //Begin entry encoding.  Pass in length hint for expected size\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit}}}
(&encIter, &elementEntry, 350);\par
        //Now call respective encode functions for type being housed in the RsslElementEntry\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete}}}
(&encIter, success);\par
    \}\par
    //Done with entries, complete the element list encoding\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete}}}
(&encIter, success);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 *pElement, const void *pData)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} where payload is an unencoded primitive type (passed in via void*), blank (where void* is NULL and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}} is empty) , or payload is pre-encoded and populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 *pElement, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 encodingMaxSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}, where any payload is encoded after this call using the appropriate data type encode functions. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 *pSetDb, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 setEncodingMaxSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begin encoding process for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} container type. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeElementEntry\:RsslElementList and RsslElementEntry Encoding}
{\xe \v RsslElementList and RsslElementEntry Encoding\:rsslEncodeElementEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 * {\i pElement}, const void * {\i pData})}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} to encode. If any pre-encoded payload is present, it must be populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}} and should match the type specified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pData} \cell }{Pointer to the primitive representation of the entry's payload, should be of type {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}}. If encoding blank data or content is pre-encoded, this should be passed in as NULL. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeElementEntryComplete\:RsslElementList and RsslElementEntry Encoding}
{\xe \v RsslElementList and RsslElementEntry Encoding\:rsslEncodeElementEntryComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encoder iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} encoding, if false - remove the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeElementEntryInit\:RsslElementList and RsslElementEntry Encoding}
{\xe \v RsslElementList and RsslElementEntry Encoding\:rsslEncodeElementEntryInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 * {\i pElement}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i encodingMaxSize})}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i encodingMaxSize} \cell }{max expected encoding size of the entry's payload, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length for the entry's payload. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeElementListComplete\:RsslElementList and RsslElementEntry Encoding}
{\xe \v RsslElementList and RsslElementEntry Encoding\:rsslEncodeElementListComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} encoding \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the vector encoding, if false - remove the vector payload from the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeElementListInit\:RsslElementList and RsslElementEntry Encoding}
{\xe \v RsslElementList and RsslElementEntry Encoding\:rsslEncodeElementListInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 * {\i pSetDb}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i setEncodingMaxSize})}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{partially populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} structure to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSetDb} \cell }{Set Definition database to use while encoding any set defined content. This database must include a definition for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFT" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList::setId}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i setEncodingMaxSize} \cell }{max encoding size of the set defined data, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length set defined data. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information. \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList and RsslElementEntry Decoding\par \pard\plain 
{\tc\tcl2 \v RsslElementList and RsslElementEntry Decoding}
{\xe \v RsslElementList and RsslElementEntry Decoding}
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, each entry is returned as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} containing the encoded payload content. Further decoding of an entry's content can be achieved by using the appropriate primitive type or container type decoder as specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}}. If desired, decoding of an entry's content can be skipped by invoking the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementEntry()}}} function to move to the next entry. \par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Decoding Example
\par}
{\tc\tcl2 \v RsslElementList Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 elementList; //No need to clear since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 elementEntry;  //RsslElementEntry to expose individual entry contents through\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    //Third parameter is 0 because we do not have set definitions in this example\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList}}}
(&decIter, &elementList, 0)) >= {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
    \{\par
        while ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementEntry}}}
(&decIter, &elementEntry)) != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}}
)\par
        \{\par
            //handle failure cases\par
            if (retVal < {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}}
)\par
            \{\par
                //handle error as needed\par
                printf("Error %s (%d) encountered while decoding element entries.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            \}\par
            else\par
            \{\par
                //now decode element entries contents type\par
                switch(elementEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
)\par
                \{\par
                    //handle appropriate primitive or container types to decode\par
                    ...\par
                \}\par
            \}\par
        \}\par
    \}\par
    else\par
    \{\par
        //initial element list decode failed\par
        printf("Error %s (%d) encountered while decoding RsslElementList.  Error text: %s\\n",\par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 *pElement)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes and returns a single {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} from within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGP" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList::encSetData}}} and/or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList::encEntries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 *pElementList, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 *pLocalSetDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} container. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeElementEntry\:RsslElementList and RsslElementEntry Decoding}
{\xe \v RsslElementList and RsslElementEntry Decoding\:rsslDecodeElementEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}
 * {\i pElement})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGP" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList::encSetData}}} is present, but no set definition database was passed in to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList()}}}, set data content will be skipped while decoding entries.\par
}Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeElementEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementEntry} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} to decode content into. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::encData}}} will contain encoded content of entry. To continue decoding into specific data type, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}} decoder can be used. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslDecodeElementList\:RsslElementList and RsslElementEntry Decoding}
{\xe \v RsslElementList and RsslElementEntry Decoding\:rsslDecodeElementList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}
 * {\i pElementList}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 * {\i pLocalSetDb})}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeElementEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementList} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} structure to populate with decoded contents. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGP" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList::encSetData}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList::encEntries}}} will point to encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} content. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pLocalSetDb} \cell }{Set definition database to use while decoding any set defined content. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Element List Set Defined Data Usage, Functions, and Structures\par \pard\plain 
{\tc\tcl2 \v Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures}
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Element List Set Definition. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global Element List Set Definitions Database. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Element List Set Element Encoding. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local Message Element List Set Definitions Database, must be cleared before use. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_ELEMENT_SET_BLANK_ID}\~ 255{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELEMENT_SET_MAX_LOCAL_ID}}}
\~ 15\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the maximum local message scope set identifier. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_LIST_SET_DB}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}} initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_SET_DEF}}}
\~ \{ 0, 0, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}} initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_SET_DEF_ENTRY}}}
\~ \{ 0, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry}}} initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGY" }{}}{\fldrslt {\cs37\ul\cf2 rsslAddElementSetDefToDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 *pElementSetDefDb, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 *pElementSetDef)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes and frees all memory allocated by rsslAllocateElementSetDefDb and rsslAddElementSetDefToDb. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslAllocateElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 *pElementSetDefDb, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *version){\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allocates the definitions pointer array of the provided {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}, and deep copies the version string into the structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDef}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 *pElementLSD)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 *pElementLSDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDefEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry}}}
 *pElementEnc)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLocalElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 *pDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementSetDefDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *dIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 *dictionary, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 verbosity, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode a Global element set definition dictionary payload. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeLocalElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 *pLocalSetDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode set definitions contained on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} into setDefDB database. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDeleteElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 *pElementSetDefDb){\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deep copies the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}} into the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}'s definitions array. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementSetDefDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *eIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 *dictionary, int *currentSetDef, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 verbosity, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encode a Global element set definition dictionary payload. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeLocalElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 *pElementListSetDb)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encode ElementlistList set definitions database. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_ELEMENT_SET_MAX_LOCAL_ID\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:RSSL_ELEMENT_SET_MAX_LOCAL_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELEMENT_SET_MAX_LOCAL_ID}}}
\~ 15}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid value \par
}}{
Definition at line 226 of file rsslSetData.h.}\par
}
{\xe \v RSSL_INIT_ELEMENT_LIST_SET_DB\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:RSSL_INIT_ELEMENT_LIST_SET_DB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_LIST_SET_DB}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0 \}}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDefDb}}} \par
}}{
Definition at line 277 of file rsslSetData.h.}\par
}
{\xe \v RSSL_INIT_ELEMENT_SET_DEF\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:RSSL_INIT_ELEMENT_SET_DEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_SET_DEF}}}
\~ \{ 0, 0, 0 \}}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDef}}} \par
}}{
Definition at line 208 of file rsslSetData.h.}\par
}
{\xe \v RSSL_INIT_ELEMENT_SET_DEF_ENTRY\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:RSSL_INIT_ELEMENT_SET_DEF_ENTRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_SET_DEF_ENTRY}}}
\~ \{ 0, 0 \}}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDefEntry}}} \par
}}{
Definition at line 179 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslAddElementSetDefToDb\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:rsslAddElementSetDefToDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGY" }{}}{\fldrslt {\cs37\ul\cf2 rsslAddElementSetDefToDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 * {\i pElementSetDefDb}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 * {\i pElementSetDef})}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the memory used by the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}} has been created and managed outside of rsslAllocateElementSetDefDb and rsslAddElementSetDefToDb, this function should not be used. \par
}}}
{\xe \v rsslClearElementSetDef\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:rsslClearElementSetDef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDef}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 * {\i pElementLSD})}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_SET_DEF}}} \par
}}{
Definition at line 214 of file rsslSetData.h.}\par
}
{\xe \v rsslClearElementSetDefDb\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:rsslClearElementSetDefDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 * {\i pElementLSDb})}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}, RSSL_INIT_ELEMENT_SET_DEF_DB \par
}}{
Definition at line 283 of file rsslSetData.h.}\par
}
{\xe \v rsslClearElementSetDefEntry\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:rsslClearElementSetDefEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDefEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry}}}
 * {\i pElementEnc})}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_SET_DEF_ENTRY}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry}}} \par
}}{
Definition at line 185 of file rsslSetData.h.}\par
}
{\xe \v rsslClearLocalElementSetDefDb\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:rsslClearLocalElementSetDefDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLocalElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 * {\i pDb})}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}} \par
}}{
Definition at line 248 of file rsslSetData.h.}\par
}
{\xe \v rsslDecodeElementSetDefDictionary\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:rsslDecodeElementSetDefDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementSetDefDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i dIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 * {\i dictionary}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 {\i verbosity}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function may be called multiple times on the same dictionary, to load information from dictionaries that have been encoded in multiple parts.\parTypical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Initialize the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}} using rsslClearFieldSetDb, then allocate the definitions pointer array and version information with rsslAllocateElementSetDefDb.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab When a response message containing global field set definition data is received, call rsslDecodeElementSetDefDictionary.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Continue with decoding messages.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab When finished with the global set definition dictionary, call rsslDeleteElementSetDefDb to free all allocated memory.\par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dIter} \cell }{An iterator to use. Must be set to the encoded buffer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionary} \cell }{The dictionary to store the decoded field information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verbosity} \cell }{The desired verbosity to decode. See RDMDictionaryVerbosityValues. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the decoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementSetDefDictionary}}} \par
}\par}
}}
{\xe \v rsslDecodeLocalElementSetDefDb\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:rsslDecodeLocalElementSetDefDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeLocalElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 * {\i pLocalSetDb})}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector}}} \par
rsslDecodeElement\par
}Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap()}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector()}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeLocalElementSetDefDb()}}}\par}
If decoding local set definitions from a single thread, RSSL has internal memory that will be \par decoded into. To use this, entries.data and entries.length should be 0. \par If decoding local set definitions from across multiple threads, the user should supply memory \par by populating entries.data. entries.length should be set to the number of bytes available in data. \par Alternatively, a separate iterator may be set to the container's encSetDefs and passed into {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeLocalElementSetDefDb()}}} (the appropriate version information should also be set). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslDecodeIterator Pointer to the decoding iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pLocalSetDb} \cell }{Pointer to the Element List Set Definitions Database structure to populate. \cell }
{\row }
}
}}
{\xe \v rsslEncodeElementSetDefDictionary\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:rsslEncodeElementSetDefDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementSetDefDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i eIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 * {\i dictionary}, int * {\i currentSetDef}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 {\i verbosity}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function supports building the encoded data in multiple parts -- if there is not enough available buffer space to encode the entire dictionary, subsequent calls can be made to this function, each producing the next segment of fields.\parTypical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Initialize the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}} using rsslClearElementSetDb, then allocate the definitions pointer array and version information with rsslAllocateElementSetDefDb.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Add the set definitions to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}} using rsslAddElementSetDefToDb.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Start encoding the message that contains this dictionary payload.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Call rsslEncodeElementSetDefDictionary.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab If rsslEncodeElementSetDefDictionary returns RSSL_RET_DICT_PART_ENCODED, go back to step 3, and encode the next part of the payload. Otherwise, if RSSL_RET_SUCCESS is returned, continue.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab When finished with the global set definition dictionary, call rsslElementFieldSetDefDb to free all allocated memory.\par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i eIter} \cell }{Iterator to be used for encoding. Prior to each call, the iterator must be cleared and initialized to the buffer to be used for encoding. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionary} \cell }{The dictionary to encode global element set definition information from. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i currentSetDef} \cell }{Tracks which set definitions have been encoded in case of multi-part encoding. Must be initialized to 0 on the first call and is updated with each successfully encoded part. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verbosity} \cell }{The desired verbosity to encode. See RDMDictionaryVerbosityValues. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the encoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid RSSL_RET_DICT_PART_ENCODED when encoding parts, RSSL_RET_SUCCESS for final part or single complete payload. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementSetDefDictionary}}} \par
}\par}
}}
{\xe \v rsslEncodeLocalElementSetDefDb\:Element List Set Defined Data Usage, Functions, and Structures}
{\xe \v Element List Set Defined Data Usage, Functions, and Structures\:rsslEncodeLocalElementSetDefDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeLocalElementSetDefDb}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}
 * {\i pElementListSetDb})}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{encode iterator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pElementListSetDb} \cell }{database to encode \cell }
{\row }
}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslMap Reference Group}
{\xe \v RsslMap Reference Group}
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Map container type allows the user to represent a primitiveType key indexed collection of uniform entries (e.g. each entry houses the same containerType). }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} functionality include  "rtr/rsslMap.h"\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap and RsslMapEntry Structure Overview
\par}
{\tc\tcl2 \v RsslMap and RsslMapEntry Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} container type allows the user to represent primitive type key indexed collection of uniform entries (e.g. each entry houses the same container type). Each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} is a primitive type, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. All contained {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} house the same container type, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}}. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap Container Type}}} for more detailed information on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}. \par \par\par\par}
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Encoding Functions
\par}
{\tc\tcl2 \v RsslMap Encoding Functions}
The following functions are used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and its entries. Entries key can be encoded from a native primitive representation (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}) or from pre-encoded primitive content.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHN" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap and RsslMapEntry Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}} - Completes encoding of set definitions on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, called after set definitions (if any) are encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be encoded and this function should be called prior to any summary data encoding. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}} - Completes encoding of summary data on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, called after summary data is encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be completed first, followed by any summary data encoding and this function. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} has no payload or has pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encData}}}. Entry key can be passed in and encoded via this function or can be populated in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} if preencoded. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} without pre-encoded payload. Entry key can be passed in and encoded via this function or can be populated in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} if preencoded. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired. \par \par\par \par}
\par}
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Decoding Functions
\par}
{\tc\tcl2 \v RsslMap Decoding Functions}
The following functions are used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and its entries. Once at the individual entry level, the entries key can be decoded to it's native primitive type representation (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}) or left as pre-encoded primitive content. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHP" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap and RsslMapEntry Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} container and provides access to buffer containing all encoded map entries.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMapEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} entries and provides access to individual map entries and their keys. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} decode functions can be used to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} contents. \par \par}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap Container Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} structures, initializers, flag values, and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHN" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap and RsslMapEntry Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHP" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap and RsslMapEntry Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Container Type\par \pard\plain 
{\tc\tcl2 \v RsslMap Container Type}
{\xe \v RsslMap Container Type}
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} structures, initializers, flag values, and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} container type allows the user to represent primitive type key indexed collection of uniform entries (e.g. each entry houses the same container type). Each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} is a primitive type, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. All contained {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} house the same container type, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} can contain standard data and set defined data when the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par
}{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Creation Examples
\par}
{\tc\tcl2 \v RsslMap Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and any entries will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslMap and RsslMapEntry on the stack and use static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 rsslMap = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 mapEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP_ENTRY}}}
;\par
  \par
    //Populate RsslMap with relevant information\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SUMMARY_DATA}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_TOTAL_COUNT_HINT}}}
;\par
    //Set RsslMap::containerType and RsslMap::keyPrimitiveType\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 keyPrimitiveType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL}}}
;\par
    //If summary data is preencoded, can set encoded data and length directly on RsslMap prior to encoding\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHW" }{}}{\fldrslt {\cs37\ul\cf2 encSummaryData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encSummaryData.data;\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHW" }{}}{\fldrslt {\cs37\ul\cf2 encSummaryData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encSummaryData.length;\par
    //Set approximate total count hint of the number of map entries across all parts of the map.\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
 = 128;\par
    //Now invoke RsslMap encoding functions (e.g. rsslEncodeMapInit). \par
  \par
    //Populate RsslMapEntry with relevant information\par
    //Flags are cleared, no need to set RSSL_MPEF_NONE\par
    //Set Action\par
    mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHY" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_ADD_ENTRY}}}
;\par
    //Now invoke RsslMapEntry encode functions, passing in the key as unencoded data (e.g. rsslEncodeMapEntryInit, rsslEncodeMapEntryComplete)\par
  \par
    //------------------------------------------\par
  \par
    //We can also use the clear function for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 rsslMap;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 mapEntry;\par
  \par
    //Clear RsslMap and populate with relevant information\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMap}}}
(&rsslMap);\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_KEY_FIELD_ID}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_PER_ENTRY_PERM_DATA}}}
;\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABID" }{}}{\fldrslt {\cs37\ul\cf2 keyFieldId}}}
 = 25;\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 keyPrimitiveType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_REAL}}}
;\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
    //Now invoke RsslMap encoding functions (e.g. rsslEncodeMapInit).\par
 \par
    //Clear RsslMapEntry and populate with relevant information\par
    mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIE" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEF_HAS_PERM_DATA}}}
;\par
    // Populate perm data on RsslMapEntry::permData.  This example sets it to buffer that is assumed to contain lock \par
    mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = permDataBuffer.data;\par
    mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = permDataBuffer.length;\par
    //If key is pre-encoded, can set this on RsslMapEntry::encKey\par
    mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 encKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = preEncReal.data;\par
    mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 encKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = preEncReal.length;\par
    //Set action \par
    mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHY" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_UPDATE_ENTRY}}}
;\par
    //Now invoke RsslMapEntry encode functions (e.g. rsslEncodeMapEntry)\par
}
\par}
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslMap Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap Structure, Initializers, Flag values, and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} Structure, Initializers, and Helper methods. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry Structure, Initalizers and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} Structure, Initializers, Flag values, and Helper methods. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Structure, Initializers, Flag values, and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers}
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} Structure, Initializers, and Helper methods. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} is a uniform container type of associated key\'96container pair entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, contains an entry key and a value. The key is a base primitive type as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}} and the value is a container type as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP}}}
\~ \{ 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SET_DEFS}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SUMMARY_DATA}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_PER_ENTRY_PERM_DATA}}}
 =  0x04, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_TOTAL_COUNT_HINT}}}
 =  0x08, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_KEY_FIELD_ID}}}
 =  0x10
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. (MPF = Map Flags) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMap}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIO" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasKeyFieldId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_KEY_FIELD_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_PER_ENTRY_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SET_DEFS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIR" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SUMMARY_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIS" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_TOTAL_COUNT_HINT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIT" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasKeyFieldId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_KEY_FIELD_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIU" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_PER_ENTRY_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SET_DEFS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SUMMARY_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_TOTAL_COUNT_HINT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_MAP\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:RSSL_INIT_MAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP}}}
\~ \{ 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMap}}} \par
}}{
Definition at line 59 of file rsslMap.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslMapFlags\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:RsslMapFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}}
}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_MPF_NONE\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:RSSL_MPF_NONE}
{\b {\i RSSL_MPF_NONE{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} flags are present. \par
}{\xe \v RSSL_MPF_HAS_SET_DEFS\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:RSSL_MPF_HAS_SET_DEFS}
{\b {\i RSSL_MPF_HAS_SET_DEFS{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains local set definition information. If pre-encoded or decoding, this will be located in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::encSetDefs}}}. It can also be encoded using the set definition encoding functionality and, upon successful set def encoding, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}}. \par
}{\xe \v RSSL_MPF_HAS_SUMMARY_DATA\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:RSSL_MPF_HAS_SUMMARY_DATA}
{\b {\i RSSL_MPF_HAS_SUMMARY_DATA{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains summary data information. If pre-encoded or decoding, this will be located in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::encSummaryData}}}. It can also be encoded with the appropriate container encode functions and, upon successful summary data container encoding, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}}. \par
}{\xe \v RSSL_MPF_HAS_PER_ENTRY_PERM_DATA\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:RSSL_MPF_HAS_PER_ENTRY_PERM_DATA}
{\b {\i RSSL_MPF_HAS_PER_ENTRY_PERM_DATA{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains entries that have permission expressions, contained in relevant entries {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::permData}}} \par
}{\xe \v RSSL_MPF_HAS_TOTAL_COUNT_HINT\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:RSSL_MPF_HAS_TOTAL_COUNT_HINT}
{\b {\i RSSL_MPF_HAS_TOTAL_COUNT_HINT{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x08) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains a total count hint, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::totalCountHint}}}. \par
}{\xe \v RSSL_MPF_HAS_KEY_FIELD_ID\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:RSSL_MPF_HAS_KEY_FIELD_ID}
{\b {\i RSSL_MPF_HAS_KEY_FIELD_ID{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x10) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains entries where the key ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}}) also represents a field in the payload of the entry. The key's FID is specified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABID" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyFieldId}}}. \par
}}
\par
{
Definition at line 23 of file rsslMap.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearMap\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslClearMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMap}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP}}} \par
}}{
Definition at line 65 of file rsslMap.h.}\par
}
{\xe \v rsslMapApplyHasKeyFieldId\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapApplyHasKeyFieldId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIO" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasKeyFieldId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 486 of file rsslMap.h.}\par
}
{\xe \v rsslMapApplyHasPerEntryPermData\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapApplyHasPerEntryPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 461 of file rsslMap.h.}\par
}
{\xe \v rsslMapApplyHasSetDefs\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapApplyHasSetDefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 437 of file rsslMap.h.}\par
}
{\xe \v rsslMapApplyHasSummaryData\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapApplyHasSummaryData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIR" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 449 of file rsslMap.h.}\par
}
{\xe \v rsslMapApplyHasTotalCountHint\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapApplyHasTotalCountHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIS" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapApplyHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 473 of file rsslMap.h.}\par
}
{\xe \v rsslMapCheckHasKeyFieldId\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapCheckHasKeyFieldId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIT" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasKeyFieldId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 424 of file rsslMap.h.}\par
}
{\xe \v rsslMapCheckHasPerEntryPermData\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapCheckHasPerEntryPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIU" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 398 of file rsslMap.h.}\par
}
{\xe \v rsslMapCheckHasSetDefs\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapCheckHasSetDefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 372 of file rsslMap.h.}\par
}
{\xe \v rsslMapCheckHasSummaryData\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapCheckHasSummaryData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 385 of file rsslMap.h.}\par
}
{\xe \v rsslMapCheckHasTotalCountHint\:RsslMap Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslMap Structure, Initializers, Flag values, and Helpers\:rsslMapCheckHasTotalCountHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapCheckHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 411 of file rsslMap.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMapEntry Structure, Initalizers and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers}
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} Structure, Initializers, Flag values, and Helper methods. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMapEntry Structure, Initializers, and Helpers
\par}
{\tc\tcl2 \v RsslMapEntry Structure, Initializers, and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. The contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} and the key's type is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. Any contents should be applied following the rules of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::action}}} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryActions}}}) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP_ENTRY}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryActions}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_UPDATE_ENTRY}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_ADD_ENTRY}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_DELETE_ENTRY}}}
 =  3
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Action that indicates how to apply contents of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}. (MPEA = MapEntry Action) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEF_HAS_PERM_DATA}}}
 =  0x01
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. (MPEF = MapEntry Flag) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMapEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 *pMapEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJF" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapEntryApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 *pMapEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJG" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapEntryCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 *pMapEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_MAP_ENTRY\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:RSSL_INIT_MAP_ENTRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP_ENTRY}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMapEntry}}} \par
}}{
Definition at line 132 of file rsslMap.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslMapEntryActions\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:RsslMapEntryActions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryActions}}}
}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_MPEA_UPDATE_ENTRY\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:RSSL_MPEA_UPDATE_ENTRY}
{\b {\i RSSL_MPEA_UPDATE_ENTRY{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Apply the contents of this entry as an update at the specified key. If an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_UPDATE_ENTRY}}} action is received prior to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_ADD_ENTRY}}} action for the same key, the entry with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_UPDATE_ENTRY}}} action can be ignored. \par
}{\xe \v RSSL_MPEA_ADD_ENTRY\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:RSSL_MPEA_ADD_ENTRY}
{\b {\i RSSL_MPEA_ADD_ENTRY{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Add the contents of this entry at the specified key. If an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_ADD_ENTRY}}} action is received after already adding the key from a previous {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_ADD_ENTRY}}} action, previously added content should be replaced or modified based on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} update logic. \par
}{\xe \v RSSL_MPEA_DELETE_ENTRY\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:RSSL_MPEA_DELETE_ENTRY}
{\b {\i RSSL_MPEA_DELETE_ENTRY{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Delete the contents of the entry at the specified key. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_DELETE_ENTRY}}} actions cannot carry any entry payload. If payload is necessary for a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_DELETE_ENTRY}}} action, an entry with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_UPDATE_ENTRY}}} action can be sent and immediatley followed by the same key on an entry with a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_DELETE_ENTRY}}} action. \par
}}}
\par
{
Definition at line 105 of file rsslMap.h.}\par
}
{\xe \v RsslMapEntryFlags\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:RsslMapEntryFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryFlags}}}
}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_MPEF_NONE\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:RSSL_MPEF_NONE}
{\b {\i RSSL_MPEF_NONE{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} flags are present. \par
}{\xe \v RSSL_MPEF_HAS_PERM_DATA\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:RSSL_MPEF_HAS_PERM_DATA}
{\b {\i RSSL_MPEF_HAS_PERM_DATA{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} contains permission data, located in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::permData}}}. \par
}}
\par
{
Definition at line 93 of file rsslMap.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearMapEntry\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:rsslClearMapEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMapEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 * {\i pMapEntry})}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP_ENTRY}}} \par
}}{
Definition at line 138 of file rsslMap.h.}\par
}
{\xe \v rsslMapEntryApplyHasPermData\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:rsslMapEntryApplyHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJF" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapEntryApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 * {\i pMapEntry})}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMapEntry} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 521 of file rsslMap.h.}\par
}
{\xe \v rsslMapEntryCheckHasPermData\:RsslMapEntry Structure, Initalizers and Helpers}
{\xe \v RsslMapEntry Structure, Initalizers and Helpers\:rsslMapEntryCheckHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJG" }{}}{\fldrslt {\cs37\ul\cf2 rsslMapEntryCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 * {\i pMapEntry})}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMapEntry} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 507 of file rsslMap.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap and RsslMapEntry Encoding\par \pard\plain 
{\tc\tcl2 \v RsslMap and RsslMapEntry Encoding}
{\xe \v RsslMap and RsslMapEntry Encoding}
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, the encoding process begins with a call to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}}. Entries can be encoded by using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} is populated with pre-encodede-encoded content, or using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}}, the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} encode functions, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}}. If encoding the key from a native primitive representation (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}), pass an empty {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} and provide pointer to primitive type as void* parameter on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}}. If encoding the key from pre-encoded content, populate the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} and pass NULL as the void*. When all entries are encoded, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} will finish {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} encoding. \par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Encoding Example
\par}
{\tc\tcl2 \v RsslMap Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create the success parameter for completing the RsslMap and RsslMapEntry encoding.  \par
    //If any error occurs, this becomes false so rsslEncodeMapEntryComplete() or rsslEncodeMapComplete() will roll back to last successful encoding\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
    //Create and initialize RsslMap structure\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 rsslMap = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP}}}
;\par
    //Create the RsslMapEntry structure and key primitive, this will be reused so we will clear it between uses.\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 mapEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP_ENTRY}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 uIntKey;\par
    //Set desired key primitive type that each entry will use\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 keyPrimitiveType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT}}}
;\par
    //Set desired container type that each entry will contain\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
    //Set desired flags on map\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_TOTAL_COUNT_HINT}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SUMMARY_DATA}}}
;\par
    rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
 = 2;\par
\par
    //Initialize RsslMap encoding, handle any error.  Last two parameters are 0 because there is no \par
    //set data or summary data being used in this example.  \par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit}}}
(&encIter, &rsslMap, 0, 0)) < RSSL_RET_SUCCESS)\par
    \{\par
        success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        printf("Error %s (%d) encountered with rsslEncodeMapInit().  Error Text: %s\\n", \par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
    else\par
    \{\par
        //Encode Summary Data contents.  This should match the type specified in RsslMap::containerType\par
        ...\par
        //When summary data content is completed, finish it with rsslEncodeMapSummaryDataComplete()\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete}}}
(&encIter, success)\par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeMapSummaryDataComplete().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Roll back entire map or start encoding over again. \par
            {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete}}}
(&encIter, success);\par
        \}\par
        //Now populate RsslMapEntry and its key value (passing key as void* parameter since it is not pre-encoded)\par
        //Populate key\par
        uIntKey = 23456;\par
        //Populate entry with desired content.  No need to set flags since they are cleared and not adding perm data.\par
        mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHY" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_ADD_ENTRY}}}
;\par
        //Begin entry encoding.  Pass in key as void* for this entry.  Expected content length is \par
        //less than 100 bytes, so we are providing the maxEncodingSize hint.\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit}}}
(&encIter, &mapEntry, &uIntKey, 100); \par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeMapEntryInit().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Can roll back this entry or entire map\par
            {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete}}}
(&encIter, success);\par
        \}\par
  \par
        //Now encode RsslFieldList content.  See field list encoding example at \\ref FieldListEncExample\par
\par
        //When field list encoding completes, finish the RsslMapEntry\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete}}}
(&encIter, success);\par
    \par
        //Encode second entry. This time, assume pre-encoded key and pre-encoded payload are contained in buffers.\par
        //Clear RsslMapEntry for reuse\par
        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMapEntry}}}
(&mapEntry);\par
        //Populate entry with pre-encoded content\par
        mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 encKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encKeyBuffer.data;\par
        mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 encKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encKeyBuffer.length;\par
        mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encDataBuffer.data;\par
        mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encDataBuffer.length;\par
        mapEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHY" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPEA_UPDATE_ENTRY}}}
;\par
  \par
        //Because key is pre-encoded and populated on entry, pass in NULL for void*\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry}}}
(&encIter, &mapEntry, NULL); \par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeMapEntry().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Non Init/Complete calls will automatically roll back entry when failure occurs.  \par
            //Can choose to roll back entire map if user wants *         \par
        \}\par
    \}\par
    //Done with entries, complete the map encoding\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete}}}
(&encIter, success);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 *pMapEntry, const void *pKeyData)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} where there is no payload or any payload is pre-encoded and populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encData}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 *pMapEntry, const void *pKeyData, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 maxEncodingSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, where any payload is encoded after this call using the appropriate container type encode functions, as specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 summaryMaxSize, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 setMaxSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begin encoding process for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} container type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complete set data encoding for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. If both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}} are called, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}} must be called first. If set definitions are pre-encoded, they should be set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::encSetDefs}}} and this function is not required. and this function is not required. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complete summary data encoding for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. If both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}} are called, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}} must be called first. If summary data is pre-encoded, it should be set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::encSummaryData}}} and this function is not required. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeMapComplete\:RsslMap and RsslMapEntry Encoding}
{\xe \v RsslMap and RsslMapEntry Encoding\:rsslEncodeMapComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} encoding \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the map encoding, if false - remove the map payload from the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeMapEntry\:RsslMap and RsslMapEntry Encoding}
{\xe \v RsslMap and RsslMapEntry Encoding\:rsslEncodeMapEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 * {\i pMapEntry}, const void * {\i pKeyData})}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMapEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} to encode. If any payload is present, it must be populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encData}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pKeyData} \cell }{Pointer to the primitive representation of the entry's key, should be of type {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. If passed in as NULL the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} should be populated with a pre-encoded primitive key of type {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeMapEntryComplete\:RsslMap and RsslMapEntry Encoding}
{\xe \v RsslMap and RsslMapEntry Encoding\:rsslEncodeMapEntryComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encoder iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} encoding, if false - remove the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeMapEntryInit\:RsslMap and RsslMapEntry Encoding}
{\xe \v RsslMap and RsslMapEntry Encoding\:rsslEncodeMapEntryInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 * {\i pMapEntry}, const void * {\i pKeyData}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i maxEncodingSize})}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMapEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pKeyData} \cell }{Pointer to the primitive representation of the entry's key, should be of type {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. If passed in as NULL the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} should be populated with a pre-encoded primitive key of type {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i maxEncodingSize} \cell }{max expected encoding size of the entry's payload, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length for the entry's payload. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeMapInit\:RsslMap and RsslMapEntry Encoding}
{\xe \v RsslMap and RsslMapEntry Encoding\:rsslEncodeMapInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i summaryMaxSize}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i setMaxSize})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{partially populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} structure to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i summaryMaxSize} \cell }{max expected encoding size of the summary data, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length summary data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i setMaxSize} \cell }{max encoding size of the set information, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length set definition data. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information. \par
}}}
{\xe \v rsslEncodeMapSetDefsComplete\:RsslMap and RsslMapEntry Encoding}
{\xe \v RsslMap and RsslMapEntry Encoding\:rsslEncodeMapSetDefsComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes set data encoding within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}} with ::RSSL_MPF_HAS_SET_DATA flag set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::flags<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Encode set definition content using appropriate set definition encode functions\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}} \par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab If present, encode any non pre-encoded summary data and call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the set definition encoding within the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, if false - remove the set definitions from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeMapSummaryDataComplete\:RsslMap and RsslMapEntry Encoding}
{\xe \v RsslMap and RsslMapEntry Encoding\:rsslEncodeMapSummaryDataComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes summary data encoding within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit()}}} with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SUMMARY_DATA}}} flag set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::flags<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If present, encode any non pre-encoded set definition data and call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Encode summary data content using appropriate container encoders. Summary data usually matches type specified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}}.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}} \par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the summary data encoding within the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, if false - remove the summary data from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap and RsslMapEntry Decoding\par \pard\plain 
{\tc\tcl2 \v RsslMap and RsslMapEntry Decoding}
{\xe \v RsslMap and RsslMapEntry Decoding}
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, each entry is returned as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} containing the encoded key and payload content. Further decoding of an entry's content can be achieved by using the appropriate container type decoder (e.g. if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList()}}}). Further decoding of an entry's key content can be achieved by passing in the correct primitive on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMapEntry()}}} function or by calling the correct primitive type decoder (e.g. if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UINT}}} call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeUInt()}}}). If desired, decoding of an entry's content can be skipped by invoking the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMapEntry()}}} function to move to the next entry. \par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Decoding Example
\par}
{\tc\tcl2 \v RsslMap Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 rsslMap; //No need to clear since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 mapEntry;  //RsslMapEntry to expose individual entry contents through\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap}}}
(&decIter, &rsslMap)) >= RSSL_RET_SUCCESS)\par
    \{\par
        //If key is an unsigned integer, we can pass in to have key decoded \par
        //during call to rsslDecodeMapEntry().  If NULL is passed in, only\par
        //RsslMapEntry::encKey will be available, but primitive type decoder can \par
        //be used to later decode the key. \par
        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 keyUInt;\par
        while ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMapEntry}}}
(&decIter, &mapEntry, &keyUInt)) != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}}
)\par
        \{\par
            //handle failure cases\par
            if (retVal < RSSL_RET_SUCCESS)\par
            \{\par
                //handle error as needed\par
                printf("Error %s (%d) encountered while decoding map entries.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            \}\par
            else\par
            \{\par
                //now decode container type\par
                switch(rsslMap.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
)\par
                \{\par
                    //handle appropriate container types and do something with data\par
                    ...\par
                \}\par
            \}\par
        \}\par
    \}\par
    else\par
    \{\par
        //initial map decode failed\par
        printf("Error %s (%d) encountered while decoding RsslMap.  Error text: %s\\n",\par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 *pMap)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMapEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 *pMapEntry, void *pKeyData)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes and returns a single {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} from within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::encEntries}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeMap\:RsslMap and RsslMapEntry Decoding}
{\xe \v RsslMap and RsslMapEntry Decoding\:rsslDecodeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}
 * {\i pMap})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeMapEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMap} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} structure to populate with decoded contents. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::encEntries}}} will point to encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} content. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslDecodeMapEntry\:RsslMap and RsslMapEntry Decoding}
{\xe \v RsslMap and RsslMapEntry Decoding\:rsslDecodeMapEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMapEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}
 * {\i pMapEntry}, void * {\i pKeyData})}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeMapEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMapEntry} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} to decode content into. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} will contain encoded entry key, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encData}}} will contain encoded content of entry. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pKeyData} \cell }{Can be used to optionally decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} into its primitive type representation, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. If the user provides this pointer, this function will automatically decode the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}} (the pointer MUST point to the appropriate type and size). If passed in as NULL key will not be decoded, however appropriate primitive type decoder (as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}) can be called on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::encKey}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslSeries Reference Group}
{\xe \v RsslSeries Reference Group}
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Series container type allows the user to represent an implicitly indexed collection of uniform entries (e.g. each entry houses the same containerType). This is well suited for sending infrequently or non-updating table like content, where each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} represents an additional row in a table. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} functionality include  "rtr/rsslSeries.h"\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries and RsslSeriesEntry Structure Overview
\par}
{\tc\tcl2 \v RsslSeries and RsslSeriesEntry Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} container type allows the user to represent an implicitly indexed collection of uniform entries (e.g. each entry houses the same container type). This is well suited for sending infrequently or non-updating table like content, where each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} represents an additional row in a table. All contained {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} house the same container type, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries Container Type}}} for more detailed information on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}. \par \par\par\par}
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Encoding Functions
\par}
{\tc\tcl2 \v RsslSeries Encoding Functions}
The following functions are used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and its entries.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries and RsslSeriesEntry Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}} - Completes encoding of set definitions on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, called after set definitions (if any) are encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be encoded and this function should be called prior to any summary data encoding. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}} - Completes encoding of summary data on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, called after summary data is encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be completed first, followed by any summary data encoding and this function. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} has no payload or has pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry::encData}}}. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} without pre-encoded payload. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired. \par \par\par \par}
\par}
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Decoding Functions
\par}
{\tc\tcl2 \v RsslSeries Decoding Functions}
The following functions are used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and its entries.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJP" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries and RsslSeriesEntry Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} container and provides access to buffer containing all encoded series entries.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeriesEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} entries and provides access to individual series entries. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}} decode functions can be used to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} contents. \par \par}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries Container Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} structures, initializers, flag values, and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries and RsslSeriesEntry Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJP" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries and RsslSeriesEntry Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Container Type\par \pard\plain 
{\tc\tcl2 \v RsslSeries Container Type}
{\xe \v RsslSeries Container Type}
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} structures, initializers, flag values, and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} container type allows the user to represent an implicitly indexed collection of uniform entries (e.g. each entry houses the same container type). All contained {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} house the same container type, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}. This is well suited for sending infrequently or non-updating table like content, where each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} represents an additional row in a table. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} can contain standard data and set defined data when the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par
}{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Creation Examples
\par}
{\tc\tcl2 \v RsslSeries Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and any entries will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslSeries and RsslSeriesEntry on the stack and use static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 rsslSeries = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 seriesEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES_ENTRY}}}
;\par
  \par
    //Populate RsslSeries with relevant information\par
    rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJT" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SUMMARY_DATA}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_TOTAL_COUNT_HINT}}}
;\par
    //Set RsslSeries::containerType\par
    rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ELEMENT_LIST}}}
;\par
    //If summary data is preencoded, can set encoded data and length directly on RsslSeries prior to encoding\par
    rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJW" }{}}{\fldrslt {\cs37\ul\cf2 encSummaryData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encSummaryData.data;\par
    rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJW" }{}}{\fldrslt {\cs37\ul\cf2 encSummaryData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encSummaryData.length;\par
    //Set approximate total count hint of the number of series entries across all parts of the series.\par
    rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJX" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
 = 5120;\par
    //Now invoke RsslSeries encoding functions (e.g. rsslEncodeSeriesInit()). \par
  \par
    //Populate RsslSeriesEntry with relevant information\par
    //Now invoke RsslSeriesEntry encode functions (e.g. rsslEncodeSeriesEntryInit(), rsslEncodeSeriesEntryComplete())\par
  \par
    //------------------------------------------\par
  \par
    //We can also use the clear function for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 rsslSeries;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 seriesEntry;\par
  \par
    //Clear RsslSeries and populate with relevant information\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeries}}}
(&rsslSeries);\par
    rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ELEMENT_LIST}}}
;\par
    //Now invoke RsslSeries encoding functions (e.g. rsslEncodeSeriesInit()).\par
 \par
    //Clear RsslSeriesEntry and populate with relevant information\par
    //Now invoke RsslSeriesEntry encode functions (e.g. rsslEncodeSeriesEntry())\par
}
\par}
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslSeries Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKA" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries Structure, Initializers, Flag values, and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} Structure, Initializers, and Helper methods. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKB" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry Structure, Initalizers and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} Structure, Initializers, Flag values, and Helper methods. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Structure, Initializers, Flag values, and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers}
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} Structure, Initializers, and Helper methods. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} is a uniform container type entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, is implicitly indexed and houses a container type payload as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}. This is well suited for sending infrequently or non-updating table like content, where each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} represents an additional row in a table. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SET_DEFS}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SUMMARY_DATA}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_TOTAL_COUNT_HINT}}}
 =  0x04
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. (SRF = Series Flags) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeries}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 *pSeries)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesApplyHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 *pSeries)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SET_DEFS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesApplyHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 *pSeries)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SUMMARY_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKH" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesApplyHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 *pSeries)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_TOTAL_COUNT_HINT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKI" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesCheckHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 *pSeries)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SET_DEFS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesCheckHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 *pSeries)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SUMMARY_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKK" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesCheckHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 *pSeries)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_TOTAL_COUNT_HINT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_SERIES\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:RSSL_INIT_SERIES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeries}}} \par
}}{
Definition at line 57 of file rsslSeries.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslSeriesFlags\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:RsslSeriesFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}}
}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_SRF_NONE\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:RSSL_SRF_NONE}
{\b {\i RSSL_SRF_NONE{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} flags are present. \par
}{\xe \v RSSL_SRF_HAS_SET_DEFS\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:RSSL_SRF_HAS_SET_DEFS}
{\b {\i RSSL_SRF_HAS_SET_DEFS{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains local set definition information. If pre-encoded or decoding, this will be located in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::encSetDefs}}}. It can also be encoded using the set definition encoding functionality and, upon successful set def encoding, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}}. \par
}{\xe \v RSSL_SRF_HAS_SUMMARY_DATA\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:RSSL_SRF_HAS_SUMMARY_DATA}
{\b {\i RSSL_SRF_HAS_SUMMARY_DATA{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains summary data information. If pre-encoded or decoding, this will be located in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJW" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::encSummaryData}}}. It can also be encoded with the appropriate container encode functions and, upon successful summary data container encoding, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}}. \par
}{\xe \v RSSL_SRF_HAS_TOTAL_COUNT_HINT\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:RSSL_SRF_HAS_TOTAL_COUNT_HINT}
{\b {\i RSSL_SRF_HAS_TOTAL_COUNT_HINT{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains a total count hint, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJX" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::totalCountHint}}}. \par
}}
\par
{
Definition at line 23 of file rsslSeries.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearSeries\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:rsslClearSeries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeries}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 * {\i pSeries})}}
\par
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES}}} \par
}}{
Definition at line 63 of file rsslSeries.h.}\par
}
{\xe \v rsslSeriesApplyHasSetDefs\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:rsslSeriesApplyHasSetDefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesApplyHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 * {\i pSeries})}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeries} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 395 of file rsslSeries.h.}\par
}
{\xe \v rsslSeriesApplyHasSummaryData\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:rsslSeriesApplyHasSummaryData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesApplyHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 * {\i pSeries})}}
\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeries} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 407 of file rsslSeries.h.}\par
}
{\xe \v rsslSeriesApplyHasTotalCountHint\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:rsslSeriesApplyHasTotalCountHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKH" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesApplyHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 * {\i pSeries})}}
\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeries} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 419 of file rsslSeries.h.}\par
}
{\xe \v rsslSeriesCheckHasSetDefs\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:rsslSeriesCheckHasSetDefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKI" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesCheckHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 * {\i pSeries})}}
\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeries} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 353 of file rsslSeries.h.}\par
}
{\xe \v rsslSeriesCheckHasSummaryData\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:rsslSeriesCheckHasSummaryData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesCheckHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 * {\i pSeries})}}
\par
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeries} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 367 of file rsslSeries.h.}\par
}
{\xe \v rsslSeriesCheckHasTotalCountHint\:RsslSeries Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslSeries Structure, Initializers, Flag values, and Helpers\:rsslSeriesCheckHasTotalCountHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKK" }{}}{\fldrslt {\cs37\ul\cf2 rsslSeriesCheckHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 * {\i pSeries})}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeries} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 381 of file rsslSeries.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeriesEntry Structure, Initalizers and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslSeriesEntry Structure, Initalizers and Helpers}
{\xe \v RsslSeriesEntry Structure, Initalizers and Helpers}
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} Structure, Initializers, Flag values, and Helper methods. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeriesEntry Structure, Initializers, and Helpers
\par}
{\tc\tcl2 \v RsslSeriesEntry Structure, Initializers, and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. The contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} has an implicit action of Add, so any additional entries should be appended to any existing content. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES_ENTRY}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeriesEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 *pSeriesEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_SERIES_ENTRY\:RsslSeriesEntry Structure, Initalizers and Helpers}
{\xe \v RsslSeriesEntry Structure, Initalizers and Helpers\:RSSL_INIT_SERIES_ENTRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES_ENTRY}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeriesEntry}}} \par
}}{
Definition at line 98 of file rsslSeries.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearSeriesEntry\:RsslSeriesEntry Structure, Initalizers and Helpers}
{\xe \v RsslSeriesEntry Structure, Initalizers and Helpers\:rsslClearSeriesEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeriesEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 * {\i pSeriesEntry})}}
\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES_ENTRY}}} \par
}}{
Definition at line 104 of file rsslSeries.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries and RsslSeriesEntry Encoding\par \pard\plain 
{\tc\tcl2 \v RsslSeries and RsslSeriesEntry Encoding}
{\xe \v RsslSeries and RsslSeriesEntry Encoding}
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, the encoding process begins with a call to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}}. Entries can be encoded by using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} is populated with pre-encodede-encoded content, or using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}}, the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}} encode functions, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}}. When all entries are encoded, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} will finish {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} encoding. \par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Encoding Example
\par}
{\tc\tcl2 \v RsslSeries Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create the success parameter for completing the RsslSeries and RsslSeriesEntry encoding.  \par
    //If any error occurs, this becomes false so rsslEncodeSeriesEntryComplete() or rsslEncodeSeriesComplete() will roll back to last successful encoding\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
    //Create and initialize RsslSeries structure\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 rsslSeries = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES}}}
;\par
    //Create the RsslSeriesEntry structure, this will be reused so we will clear it between uses.\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 seriesEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES_ENTRY}}}
;\par
    //Set desired container type that each entry will contain\par
    rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ELEMENT_LIST}}}
;\par
    //Set desired flags on series\par
    rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJT" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_TOTAL_COUNT_HINT}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SUMMARY_DATA}}}
;\par
    rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJX" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
 = 2;\par
\par
    //Initialize RsslSeries encoding, handle any error.  This example expects summary data to be less than 50 bytes, so encoding length hint is provided.  Last parameter is 0 because there is no set data.   \par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit}}}
(&encIter, &rsslSeries, 50, 0)) < RSSL_RET_SUCCESS)\par
    \{\par
        success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        printf("Error %s (%d) encountered with rsslEncodeSeriesInit().  Error Text: %s\\n", \par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
    else\par
    \{\par
        //Encode Summary Data contents.  This should match the type specified in RsslSeries::containerType\par
        ...\par
        //When summary data content is completed, finish it with rsslEncodeSeriesSummaryDataComplete()\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete}}}
(&encIter, success)\par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeSeriesSummaryDataComplete().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Roll back entire series or start encoding over again. \par
            {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete}}}
(&encIter, success);\par
        \}\par
        //Now populate RsslSeriesEntry \par
        //Populate entry with desired content.  No need to set flags since they are cleared and not adding perm data.\par
        \par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit}}}
(&encIter, &seriesEntry, 100); \par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeSeriesEntryInit().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Can roll back this entry or entire series\par
            {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete}}}
(&encIter, success);\par
        \}\par
  \par
        //Now encode RsslElementList content.  See element list encoding example at \\ref ElementListEncExample\par
\par
        //When element list encoding completes, finish the RsslSeriesEntry\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete}}}
(&encIter, success);\par
    \par
        //Encode second entry. This time, assume pre-encoded payload is contained in buffer.\par
        //Clear RsslSeriesEntry for reuse\par
        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeriesEntry}}}
(&seriesEntry);\par
        //Populate entry with pre-encoded content\par
        seriesEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encDataBuffer.data;\par
        seriesEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encDataBuffer.length;\par
  \par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry}}}
(&encIter, &seriesEntry); \par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeSeriesEntry().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Non Init/Complete calls will automatically roll back entry when failure occurs.  \par
            //Can choose to roll back entire series if user wants *         \par
        \}\par
    \}\par
    //Done with entries, complete the series encoding\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete}}}
(&encIter, success);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 *pSeriesEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} where there is no payload or any payload is pre-encoded and populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry::encData}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 *pSeriesEntry, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 maxEncodingSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, where any payload is encoded after this call using the appropriate container type encode functions, as specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 *pSeries, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 summaryMaxSize, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 setMaxSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begin encoding process for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} container type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complete set data encoding for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. If both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}} are called, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}} must be called first. If set definitions are pre-encoded, they should be set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::encSetDefs}}} and this function is not required. and this function is not required. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complete summary data encoding for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. If both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}} are called, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}} must be called first. If summary data is pre-encoded, it should be set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJW" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::encSummaryData}}} and this function is not required. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeSeriesComplete\:RsslSeries and RsslSeriesEntry Encoding}
{\xe \v RsslSeries and RsslSeriesEntry Encoding\:rsslEncodeSeriesComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} encoding \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the Series encoding, if false - remove the Series payload from the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeSeriesEntry\:RsslSeries and RsslSeriesEntry Encoding}
{\xe \v RsslSeries and RsslSeriesEntry Encoding\:rsslEncodeSeriesEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 * {\i pSeriesEntry})}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeriesEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} to encode. If any payload is present, it must be populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry::encData}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeSeriesEntryComplete\:RsslSeries and RsslSeriesEntry Encoding}
{\xe \v RsslSeries and RsslSeriesEntry Encoding\:rsslEncodeSeriesEntryComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encoder iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} encoding, if false - remove the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeSeriesEntryInit\:RsslSeries and RsslSeriesEntry Encoding}
{\xe \v RsslSeries and RsslSeriesEntry Encoding\:rsslEncodeSeriesEntryInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 * {\i pSeriesEntry}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i maxEncodingSize})}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeriesEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i maxEncodingSize} \cell }{max expected encoding size of the entry's payload, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length for the entry's payload. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeSeriesInit\:RsslSeries and RsslSeriesEntry Encoding}
{\xe \v RsslSeries and RsslSeriesEntry Encoding\:rsslEncodeSeriesInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 * {\i pSeries}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i summaryMaxSize}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i setMaxSize})}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeries} \cell }{partially populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} structure to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i summaryMaxSize} \cell }{max expected encoding size of the summary data, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length summary data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i setMaxSize} \cell }{max encoding size of the set information, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length set definition data. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information. \par
}}}
{\xe \v rsslEncodeSeriesSetDefsComplete\:RsslSeries and RsslSeriesEntry Encoding}
{\xe \v RsslSeries and RsslSeriesEntry Encoding\:rsslEncodeSeriesSetDefsComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes set data encoding within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}} with ::RSSL_SRF_HAS_SET_DATA flag set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJT" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::flags<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Encode set definition content using appropriate set definition encode functions\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}} \par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab If present, encode any non pre-encoded summary data and call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the set definition encoding within the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, if false - remove the set definitions from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeSeriesSummaryDataComplete\:RsslSeries and RsslSeriesEntry Encoding}
{\xe \v RsslSeries and RsslSeriesEntry Encoding\:rsslEncodeSeriesSummaryDataComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes summary data encoding within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit()}}} with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SUMMARY_DATA}}} flag set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJT" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::flags<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If present, encode any non pre-encoded set definition data and call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Encode summary data content using appropriate container encoders. Summary data usually matches type specified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}} \par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the summary data encoding within the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, if false - remove the summary data from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries and RsslSeriesEntry Decoding\par \pard\plain 
{\tc\tcl2 \v RsslSeries and RsslSeriesEntry Decoding}
{\xe \v RsslSeries and RsslSeriesEntry Decoding}
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, each entry is returned as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} containing the encoded payload content. Further decoding of an entry's content can be achieved by using the appropriate container type decoder (e.g. if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ELEMENT_LIST}}}, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList()}}}). If desired, decoding of an entry's content can be skipped by invoking the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeriesEntry()}}} function to move to the next entry. \par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Decoding Example
\par}
{\tc\tcl2 \v RsslSeries Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 rsslSeries; //No need to clear since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 seriesEntry; //RsslSeriesEntry to expose individual entry contents through\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries}}}
(&decIter, &rsslSeries)) >= RSSL_RET_SUCCESS)\par
    \{\par
        while ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeriesEntry}}}
(&decIter, &seriesEntry)) != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}}
)\par
        \{\par
            //handle failure cases\par
            if (retVal < RSSL_RET_SUCCESS)\par
            \{\par
                //handle error as needed\par
                printf("Error %s (%d) encountered while decoding series entries.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            \}\par
            else\par
            \{\par
                //now decode container type\par
                switch(rsslSeries.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
)\par
                \{\par
                    //handle appropriate container types and do something with data\par
                    ...\par
                \}\par
            \}\par
        \}\par
    \}\par
    else\par
    \{\par
        //initial series decode failed\par
        printf("Error %s (%d) encountered while decoding RsslSeries.  Error text: %s\\n",\par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 *pSeries)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeriesEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 *pSeriesEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes and returns a single {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} from within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::encEntries}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeSeries\:RsslSeries and RsslSeriesEntry Decoding}
{\xe \v RsslSeries and RsslSeriesEntry Decoding\:rsslDecodeSeries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}
 * {\i pSeries})}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeSeriesEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeries} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} structure to populate with decoded contents. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::encEntries}}} will point to encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} content. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeriesEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslDecodeSeriesEntry\:RsslSeries and RsslSeriesEntry Decoding}
{\xe \v RsslSeries and RsslSeriesEntry Decoding\:rsslDecodeSeriesEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeriesEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}
 * {\i pSeriesEntry})}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeSeriesEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSeriesEntry} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} to decode content into. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry::encData}}} will contain encoded content of entry. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslVector Reference Group}
{\xe \v RsslVector Reference Group}
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Vector container type allows the user to represent a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} indexed collection of uniform entries (e.g. each entry houses the same containerType). This container type can optionally support sorting, where the consumer of content is responsible for applying actions in the appropriate manner to maintain ordering. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} functionality include  "rtr/rsslVector.h"\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector and RsslVectorEntry Structure Overview
\par}
{\tc\tcl2 \v RsslVector and RsslVectorEntry Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} container type allows the user to represent a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} indexed collection of uniform entries (e.g. each entry houses the same container type). This container type can optionally support sorting through the use of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_SUPPORTS_SORTING}}} flag and specific actions, where the consumer of content is responsible for applying actions in the appropriate manner to maintain ordering. All contained {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} house the same container type, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}}. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKT" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector Container Type}}} for more detailed information on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. \par \par\par\par}
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Encoding Functions
\par}
{\tc\tcl2 \v RsslVector Encoding Functions}
The following functions are used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and its entries.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKV" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector and RsslVectorEntry Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}} - Completes encoding of set definitions on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, called after set definitions (if any) are encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be encoded and this function should be called prior to any summary data encoding. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}} - Completes encoding of summary data on an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, called after summary data is encoded or encoding fails and encoding rollback is desired. If both set definitions and summary data are present and neither are pre-encoded, set definitions should be completed first, followed by any summary data encoding and this function. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} has no payload or has pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::encData}}}. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} without pre-encoded payload. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired. \par \par\par \par}
\par}
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Decoding Functions
\par}
{\tc\tcl2 \v RsslVector Decoding Functions}
The following functions are used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and its entries.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKX" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector and RsslVectorEntry Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} container and provides access to buffer containing all encoded vector entries.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVectorEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} entries and provides access to individual vector entries. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}} decode functions can be used to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} contents. \par \par}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKT" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector Container Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} structures, initializers, flag values, and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKV" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector and RsslVectorEntry Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKX" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector and RsslVectorEntry Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Container Type\par \pard\plain 
{\tc\tcl2 \v RsslVector Container Type}
{\xe \v RsslVector Container Type}
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} structures, initializers, flag values, and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} container type allows the user to represent {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} indexed collection of uniform entries (e.g. each entry houses the same container type). All contained {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} house the same container type, with the type information specified in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} can contain standard data and set defined data when the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}.\par
}{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Creation Examples
\par}
{\tc\tcl2 \v RsslVector Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and any entries will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslVector and RsslVectorEntry on the stack and use static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 rsslVector = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 vectorEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR_ENTRY}}}
;\par
  \par
    //Populate RsslVector with relevant information\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SUMMARY_DATA}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_TOTAL_COUNT_HINT}}}
;\par
    //Set RsslVector::containerType\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
    //If summary data is preencoded, can set encoded data and length directly on RsslVector prior to encoding\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLE" }{}}{\fldrslt {\cs37\ul\cf2 encSummaryData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encSummaryData.data;\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLE" }{}}{\fldrslt {\cs37\ul\cf2 encSummaryData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encSummaryData.length;\par
    //Set approximate total count hint of the number of vector entries across all parts of the vector.\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLF" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
 = 210;\par
    //Now invoke RsslVector encoding functions (e.g. rsslEncodeVectorInit()). \par
  \par
    //Populate RsslVectorEntry with relevant information\par
    //Flags are cleared, no need to set RSSL_VTEF_NONE\par
    //Set Action and index\par
    vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = RSSL_VTEA_ADD_ENTRY;\par
    vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 index}}}
 = 0;\par
    //Now invoke RsslVectorEntry encode functions (e.g. rsslEncodeVectorEntryInit(), rsslEncodeVectorEntryComplete())\par
  \par
    //------------------------------------------\par
  \par
    //We can also use the clear function for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 rsslVector;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 vectorEntry;\par
  \par
    //Clear RsslVector and populate with relevant information\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVector}}}
(&rsslVector);\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_PER_ENTRY_PERM_DATA}}}
;\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
    //Now invoke RsslVector encoding functions (e.g. rsslEncodeVectorInit()).\par
 \par
    //Clear RsslVectorEntry and populate with relevant information\par
    vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLK" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEF_HAS_PERM_DATA}}}
;\par
    // Populate perm data on RsslVectorEntry::permData.  This example sets it to buffer that is assumed to contain lock \par
    vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLM" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = permDataBuffer.data;\par
    vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLM" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = permDataBuffer.length;\par
    //Set action and index\par
    vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_UPDATE_ENTRY}}}
;\par
    vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 index}}}
 = 0;\par
    //Now invoke RsslVectorEntry encode functions (e.g. rsslEncodeVectorEntry())\par
}
\par}
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslVector Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLP" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector Structure, Initializers, Flag values, and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} Structure, Initializers, and Helper methods. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry Structure, Initalizers and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} Structure, Initializers, Flag values, and Helper methods. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Structure, Initializers, Flag values, and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers}
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} Structure, Initializers, and Helper methods. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} is a uniform container type of associated index\'96container pair entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, contains an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} index and a container payload. The payload is a container type as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SET_DEFS}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SUMMARY_DATA}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_PER_ENTRY_PERM_DATA}}}
 =  0x04, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_TOTAL_COUNT_HINT}}}
 =  0x08, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_SUPPORTS_SORTING}}}
 =  0x10
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. (VTF = Vector Flags) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVector}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLU" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplyHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_PER_ENTRY_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLV" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplyHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SET_DEFS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLW" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplyHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SUMMARY_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLX" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplyHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_TOTAL_COUNT_HINT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLY" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplySupportsSorting}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_SUPPORTS_SORTING}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_PER_ENTRY_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SET_DEFS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMB" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SUMMARY_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMC" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_TOTAL_COUNT_HINT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckSupportsSorting}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_SUPPORTS_SORTING}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_VECTOR\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:RSSL_INIT_VECTOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVector}}} \par
}}{
Definition at line 62 of file rsslVector.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslVectorFlags\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:RsslVectorFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}}
}}
\par
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_VTF_NONE\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:RSSL_VTF_NONE}
{\b {\i RSSL_VTF_NONE{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} flags are present \par
}{\xe \v RSSL_VTF_HAS_SET_DEFS\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:RSSL_VTF_HAS_SET_DEFS}
{\b {\i RSSL_VTF_HAS_SET_DEFS{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains local set definition information. If pre-encoded or decoding, this will be located in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABME" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::encSetDefs}}}. It can also be encoded using the set definition encoding functionality and, upon successful set def encoding, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}}. \par
}{\xe \v RSSL_VTF_HAS_SUMMARY_DATA\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:RSSL_VTF_HAS_SUMMARY_DATA}
{\b {\i RSSL_VTF_HAS_SUMMARY_DATA{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains summary data information. If pre-encoded or decoding, this will be located in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLE" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::encSummaryData}}}. It can also be encoded with the appropriate container encode functions and, upon successful summary data container encoding, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}}. \par
}{\xe \v RSSL_VTF_HAS_PER_ENTRY_PERM_DATA\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:RSSL_VTF_HAS_PER_ENTRY_PERM_DATA}
{\b {\i RSSL_VTF_HAS_PER_ENTRY_PERM_DATA{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains entries that have permission expressions, contained in relevant entries {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLM" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::permData}}} \par
}{\xe \v RSSL_VTF_HAS_TOTAL_COUNT_HINT\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:RSSL_VTF_HAS_TOTAL_COUNT_HINT}
{\b {\i RSSL_VTF_HAS_TOTAL_COUNT_HINT{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x08) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains a total count hint, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLF" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::totalCountHint}}}. \par
}{\xe \v RSSL_VTF_SUPPORTS_SORTING\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:RSSL_VTF_SUPPORTS_SORTING}
{\b {\i RSSL_VTF_SUPPORTS_SORTING{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x10) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} supports sorting. The receiving application is responsible for sorting content and following appropriate behavior based on individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::action}}} information. \par
}}
\par
{
Definition at line 25 of file rsslVector.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearVector\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslClearVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVector}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR}}} \par
}}{
Definition at line 68 of file rsslVector.h.}\par
}
{\xe \v rsslVectorApplyHasPerEntryPermData\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorApplyHasPerEntryPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLU" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplyHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 478 of file rsslVector.h.}\par
}
{\xe \v rsslVectorApplyHasSetDefs\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorApplyHasSetDefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLV" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplyHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 454 of file rsslVector.h.}\par
}
{\xe \v rsslVectorApplyHasSummaryData\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorApplyHasSummaryData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLW" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplyHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 466 of file rsslVector.h.}\par
}
{\xe \v rsslVectorApplyHasTotalCountHint\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorApplyHasTotalCountHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLX" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplyHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 490 of file rsslVector.h.}\par
}
{\xe \v rsslVectorApplySupportsSorting\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorApplySupportsSorting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLY" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorApplySupportsSorting}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 502 of file rsslVector.h.}\par
}
{\xe \v rsslVectorCheckHasPerEntryPermData\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorCheckHasPerEntryPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 414 of file rsslVector.h.}\par
}
{\xe \v rsslVectorCheckHasSetDefs\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorCheckHasSetDefs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckHasSetDefs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 388 of file rsslVector.h.}\par
}
{\xe \v rsslVectorCheckHasSummaryData\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorCheckHasSummaryData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMB" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckHasSummaryData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 401 of file rsslVector.h.}\par
}
{\xe \v rsslVectorCheckHasTotalCountHint\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorCheckHasTotalCountHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMC" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 427 of file rsslVector.h.}\par
}
{\xe \v rsslVectorCheckSupportsSorting\:RsslVector Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslVector Structure, Initializers, Flag values, and Helpers\:rsslVectorCheckSupportsSorting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorCheckSupportsSorting}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 440 of file rsslVector.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVectorEntry Structure, Initalizers and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers}
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} Structure, Initializers, Flag values, and Helper methods. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVectorEntry Structure, Initializers, and Helpers
\par}
{\tc\tcl2 \v RsslVectorEntry Structure, Initializers, and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. The contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}}. Any contents should be applied following the rules of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::action}}} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryActions}}}) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR_ENTRY}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} static initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTE_MAX_INDEX}}}
\~ 0x3fffffffU{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum allowed value for a vector index ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::index}}}). }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryActions}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_UPDATE_ENTRY}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_SET_ENTRY}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_CLEAR_ENTRY}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_INSERT_ENTRY}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABML" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_DELETE_ENTRY}}}
 =  5
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Action that indicates how to apply contents of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. (VTEA = VectorEntry Action) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMM" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEF_HAS_PERM_DATA}}}
 =  0x01
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. (VTEF = VectorEntry Flag) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMO" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVectorEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 *pVectorEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMP" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorEntryApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 *pVectorEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorEntryCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 *pVectorEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_VECTOR_ENTRY\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RSSL_INIT_VECTOR_ENTRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR_ENTRY}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMO" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVectorEntry}}} \par
}}{
Definition at line 133 of file rsslVector.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslVectorEntryActions\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RsslVectorEntryActions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryActions}}}
}}
\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_VTEA_UPDATE_ENTRY\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RSSL_VTEA_UPDATE_ENTRY}
{\b {\i RSSL_VTEA_UPDATE_ENTRY{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Apply the contents of this entry as an update at the specified index. If an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_UPDATE_ENTRY}}} action is received prior to an ::RSSL_VTEA_SET_ACTION or ::RSSL_VTEA_INSERT_ACTION action for the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::index}}}, the entry with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_UPDATE_ENTRY}}} action can be ignored. \par
}{\xe \v RSSL_VTEA_SET_ENTRY\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RSSL_VTEA_SET_ENTRY}
{\b {\i RSSL_VTEA_SET_ENTRY{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Set/Replace the contents of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::index}}} with the contents of this entry \par
}{\xe \v RSSL_VTEA_CLEAR_ENTRY\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RSSL_VTEA_CLEAR_ENTRY}
{\b {\i RSSL_VTEA_CLEAR_ENTRY{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Clear the contents of the entry at the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::index}}}, leaving the index present but empty. \par
}{\xe \v RSSL_VTEA_INSERT_ENTRY\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RSSL_VTEA_INSERT_ENTRY}
{\b {\i RSSL_VTEA_INSERT_ENTRY{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Applies only when {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} is sortable (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_SUPPORTS_SORTING}}} present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::flags}}}). Insert the contents of this entry at {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::index}}} specified, any higher value entries index values are incremented. \par
}{\xe \v RSSL_VTEA_DELETE_ENTRY\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RSSL_VTEA_DELETE_ENTRY}
{\b {\i RSSL_VTEA_DELETE_ENTRY{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Applies only when {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} is sortable (e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_SUPPORTS_SORTING}}} present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::flags}}}). Delete the contents of the entry at the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::index}}}, any higher order index values are decremented. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABML" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_DELETE_ENTRY}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_CLEAR_ENTRY}}} actions cannot carry any entry payload. If payload is necessary for a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABML" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_DELETE_ENTRY}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_CLEAR_ENTRY}}} action, an entry with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_UPDATE_ENTRY}}} action can be sent and immediatley followed by the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::index}}} on an entry with a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABML" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_DELETE_ENTRY}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_CLEAR_ENTRY}}} action. \par
}}}
\par
{
Definition at line 106 of file rsslVector.h.}\par
}
{\xe \v RsslVectorEntryFlags\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RsslVectorEntryFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMM" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryFlags}}}
}}
\par
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_VTEF_NONE\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RSSL_VTEF_NONE}
{\b {\i RSSL_VTEF_NONE{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} flags are present \par
}{\xe \v RSSL_VTEF_HAS_PERM_DATA\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:RSSL_VTEF_HAS_PERM_DATA}
{\b {\i RSSL_VTEF_HAS_PERM_DATA{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} contains permission data, located in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLM" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::permData}}}. \par
}}
\par
{
Definition at line 95 of file rsslVector.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearVectorEntry\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:rsslClearVectorEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMO" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVectorEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 * {\i pVectorEntry})}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR_ENTRY}}} \par
}}{
Definition at line 139 of file rsslVector.h.}\par
}
{\xe \v rsslVectorEntryApplyHasPermData\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:rsslVectorEntryApplyHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMP" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorEntryApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 * {\i pVectorEntry})}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVectorEntry} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMM" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 537 of file rsslVector.h.}\par
}
{\xe \v rsslVectorEntryCheckHasPermData\:RsslVectorEntry Structure, Initalizers and Helpers}
{\xe \v RsslVectorEntry Structure, Initalizers and Helpers\:rsslVectorEntryCheckHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslVectorEntryCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 * {\i pVectorEntry})}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVectorEntry} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMM" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 523 of file rsslVector.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector and RsslVectorEntry Encoding\par \pard\plain 
{\tc\tcl2 \v RsslVector and RsslVectorEntry Encoding}
{\xe \v RsslVector and RsslVectorEntry Encoding}
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, the encoding process begins with a call to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}}. Entries can be encoded by using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} is populated with pre-encodede-encoded content, or using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}}, the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}} encode functions, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}}. When all entries are encoded, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} will finish {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} encoding. \par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Encoding Example
\par}
{\tc\tcl2 \v RsslVector Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create the success parameter for completing the RsslVector and RsslVectorEntry encoding.  \par
    //If any error occurs, this becomes false so rsslEncodeVectorEntryComplete() or rsslEncodeVectorComplete() will roll back to last successful encoding\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
    //Create and initialize RsslVector structure\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 rsslVector = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR}}}
;\par
    //Create the RsslVectorEntry structure, this will be reused so we will clear it between uses.\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 vectorEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR_ENTRY}}}
;\par
    //Set desired container type that each entry will contain\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
    //Set desired flags on vector\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_TOTAL_COUNT_HINT}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SUMMARY_DATA}}}
;\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLF" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
 = 2;\par
\par
    //Initialize RsslVector encoding, handle any error.  This example expects summary data to be less than 50 bytes, so encoding length hint is provided.  Last parameter is 0 because there is no set data.   \par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit}}}
(&encIter, &rsslVector, 50, 0)) < RSSL_RET_SUCCESS)\par
    \{\par
        success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        printf("Error %s (%d) encountered with rsslEncodeVectorInit().  Error Text: %s\\n", \par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
    else\par
    \{\par
        //Encode Summary Data contents.  This should match the type specified in RsslVector::containerType\par
        ...\par
        //When summary data content is completed, finish it with rsslEncodeVectorSummaryDataComplete()\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete}}}
(&encIter, success)\par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeVectorSummaryDataComplete().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Roll back entire vector or start encoding over again. \par
            {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete}}}
(&encIter, success);\par
        \}\par
        //Now populate RsslVectorEntry \par
        //Populate entry with desired content.  No need to set flags since they are cleared and not adding perm data.\par
        vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = RSSL_VTEA_ADD_ENTRY;\par
        vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 index}}}
 = 0;\par
        //Begin entry encoding.  Expected content length is \par
        //less than 100 bytes, so we are providing the maxEncodingSize hint.\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit}}}
(&encIter, &vectorEntry, 100); \par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeVectorEntryInit().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Can roll back this entry or entire vector\par
            {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete}}}
(&encIter, success);\par
        \}\par
  \par
        //Now encode RsslFieldList content.  See field list encoding example at \\ref FieldListEncExample\par
\par
        //When field list encoding completes, finish the RsslVectorEntry\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete}}}
(&encIter, success);\par
    \par
        //Encode second entry. This time, assume pre-encoded payload is contained in buffer.\par
        //Clear RsslVectorEntry for reuse\par
        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMO" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVectorEntry}}}
(&vectorEntry);\par
        //Populate entry with pre-encoded content\par
        vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encDataBuffer.data;\par
        vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encDataBuffer.length;\par
        vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTEA_UPDATE_ENTRY}}}
;\par
        vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 index}}}
 = 1;\par
  \par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry}}}
(&encIter, &vectorEntry); \par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeVectorEntry().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Non Init/Complete calls will automatically roll back entry when failure occurs.  \par
            //Can choose to roll back entire vector if user wants *         \par
        \}\par
    \}\par
    //Done with entries, complete the vector encoding\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete}}}
(&encIter, success);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 *pVectorEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} where there is no payload or any payload is pre-encoded and populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::encData}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 *pVectorEntry, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 maxEncodingSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, where any payload is encoded after this call using the appropriate container type encode functions, as specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 summaryMaxSize, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 setMaxSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begin encoding process for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} container type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complete set data encoding for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. If both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}} are called, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}} must be called first. If set definitions are pre-encoded, they should be set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABME" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::encSetDefs}}} and this function is not required. and this function is not required. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Complete summary data encoding for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. If both {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}} are called, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}} must be called first. If summary data is pre-encoded, it should be set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLE" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::encSummaryData}}} and this function is not required. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeVectorComplete\:RsslVector and RsslVectorEntry Encoding}
{\xe \v RsslVector and RsslVectorEntry Encoding\:rsslEncodeVectorComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} encoding \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the vector encoding, if false - remove the vector payload from the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeVectorEntry\:RsslVector and RsslVectorEntry Encoding}
{\xe \v RsslVector and RsslVectorEntry Encoding\:rsslEncodeVectorEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 * {\i pVectorEntry})}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVectorEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} to encode. If any payload is present, it must be populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::encData}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeVectorEntryComplete\:RsslVector and RsslVectorEntry Encoding}
{\xe \v RsslVector and RsslVectorEntry Encoding\:rsslEncodeVectorEntryComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encoder iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} encoding, if false - remove the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeVectorEntryInit\:RsslVector and RsslVectorEntry Encoding}
{\xe \v RsslVector and RsslVectorEntry Encoding\:rsslEncodeVectorEntryInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 * {\i pVectorEntry}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i maxEncodingSize})}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVectorEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i maxEncodingSize} \cell }{max expected encoding size of the entry's payload, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length for the entry's payload. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeVectorInit\:RsslVector and RsslVectorEntry Encoding}
{\xe \v RsslVector and RsslVectorEntry Encoding\:rsslEncodeVectorInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i summaryMaxSize}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i setMaxSize})}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains set definitions that are not pre-encoded, call appropriate set definition encode functions, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contains summary data that is not pre-encoded, call appropriate summary data container encoders, followed by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{partially populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} structure to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i summaryMaxSize} \cell }{max expected encoding size of the summary data, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length summary data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i setMaxSize} \cell }{max encoding size of the set information, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length set definition data. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information. \par
}}}
{\xe \v rsslEncodeVectorSetDefsComplete\:RsslVector and RsslVectorEntry Encoding}
{\xe \v RsslVector and RsslVectorEntry Encoding\:rsslEncodeVectorSetDefsComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes set data encoding within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}} with ::RSSL_VTF_HAS_SET_DATA flag set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::flags<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Encode set definition content using appropriate set definition encode functions\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}} \par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab If present, encode any non pre-encoded summary data and call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the set definition encoding within the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, if false - remove the set definitions from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeVectorSummaryDataComplete\:RsslVector and RsslVectorEntry Encoding}
{\xe \v RsslVector and RsslVectorEntry Encoding\:rsslEncodeVectorSummaryDataComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes summary data encoding within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit()}}} with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SUMMARY_DATA}}} flag set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::flags<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If present, encode any non pre-encoded set definition data and call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Encode summary data content using appropriate container encoders. Summary data usually matches type specified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}}.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}} \par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the summary data encoding within the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, if false - remove the summary data from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector and RsslVectorEntry Decoding\par \pard\plain 
{\tc\tcl2 \v RsslVector and RsslVectorEntry Decoding}
{\xe \v RsslVector and RsslVectorEntry Decoding}
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, each entry is returned as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} containing the encoded payload content. Further decoding of an entry's content can be achieved by using the appropriate container type decoder (e.g. if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList()}}}). If desired, decoding of an entry's content can be skipped by invoking the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVectorEntry()}}} function to move to the next entry. \par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Decoding Example
\par}
{\tc\tcl2 \v RsslVector Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 rsslVector; //No need to clear since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 vectorEntry; //RsslVectorEntry to expose individual entry contents through\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector}}}
(&decIter, &rsslVector)) >= RSSL_RET_SUCCESS)\par
    \{\par
        while ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVectorEntry}}}
(&decIter, &vectorEntry)) != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}}
)\par
        \{\par
            //handle failure cases\par
            if (retVal < RSSL_RET_SUCCESS)\par
            \{\par
                //handle error as needed\par
                printf("Error %s (%d) encountered while decoding vector entries.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            \}\par
            else\par
            \{\par
                //now decode container type\par
                switch(rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
)\par
                \{\par
                    //handle appropriate container types and do something with data\par
                    ...\par
                \}\par
            \}\par
        \}\par
    \}\par
    else\par
    \{\par
        //initial vector decode failed\par
        printf("Error %s (%d) encountered while decoding RsslVector.  Error text: %s\\n",\par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 *pVector)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} container. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVectorEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 *pVectorEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes and returns a single {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} from within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMT" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::encEntries}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeVector\:RsslVector and RsslVectorEntry Decoding}
{\xe \v RsslVector and RsslVectorEntry Decoding\:rsslDecodeVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}
 * {\i pVector})}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeVectorEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVector} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} structure to populate with decoded contents. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMT" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::encEntries}}} will point to encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} content. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslDecodeVectorEntry\:RsslVector and RsslVectorEntry Decoding}
{\xe \v RsslVector and RsslVectorEntry Decoding\:rsslDecodeVectorEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVectorEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}
 * {\i pVectorEntry})}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeVectorEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVectorEntry} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} to decode content into. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::encData}}} will contain encoded content of entry. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslFilterList Reference Group}
{\xe \v RsslFilterList Reference Group}
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Filter List container type allows the user to represent an 8-bit ID indexed collection of non-uniform entries (e.g. each entry can house different container types). }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} functionality include  "rtr/rsslFilterList.h"\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList and RsslFilterEntry Structure Overview
\par}
{\tc\tcl2 \v RsslFilterList and RsslFilterEntry Structure Overview}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} container type allows the user to represent an 8-bit ID indexed collection of non-uniform entries (e.g. each entry can house different container types).\par Each contained {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} can house a different container type. If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}} is present, this indicates the type housed in the entry. Otherwise, the entry houses the type indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}}.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMW" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList Container Type}}} for more detailed information on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. \par \par\par\par}
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Encoding Functions
\par}
{\tc\tcl2 \v RsslFilterList Encoding Functions}
The following functions are used while encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and its entries.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMY" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList and RsslFilterEntry Encoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} type.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, called after all entries (if any) are encoded or encoding fails and encoding rollback is desired\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry()}}} - Encodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} into an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} has no payload or has pre-encoded content set in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::encData}}}. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit()}}} - Begins {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} encoding, initial function to call when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} without pre-encoded payload. \par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete()}}} - Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, called after the entries contents are encoded or encoding fails and encoding rollback is desired. \par \par\par \par}
\par}
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Decoding Functions
\par}
{\tc\tcl2 \v RsslFilterList Decoding Functions}
The following functions are used while decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and its entries.\par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList and RsslFilterEntry Decoding}}} for more detailed information.\par\par {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterList()}}} - Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} container and provides access to buffer containing all encoded filter entries.\par \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterEntry()}}} - Decodes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} entries and provides access to individual vector entries. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}} decode functions can be used to decode individual {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} contents. \par \par}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMW" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList Container Type}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} structures, initializers, flag values, and helper functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMY" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList and RsslFilterEntry Encoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList and RsslFilterEntry Decoding}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} decoding. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Container Type\par \pard\plain 
{\tc\tcl2 \v RsslFilterList Container Type}
{\xe \v RsslFilterList Container Type}
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} structures, initializers, flag values, and helper functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} container type allows the user to represent an 8-bit ID indexed collection of non-uniform entries (e.g. each entry can house a different container type). Each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} contains an 8-bit id corresponding to one of 32 possible bit-value identifiers. These identifiers are typically defined by a domain model specification and can be used to indicate interest or presence of specific entries through the inclusion of the id in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::filter}}}. Each contained {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} can house a different container type. If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}} is present, this indicates the type housed in the entry. Otherwise, the entry houses the type indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}}.\par{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Creation Examples
\par}
{\tc\tcl2 \v RsslFilterList Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and any entries will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslFilterList and RsslFilterEntry on the stack and use static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 rsslFilterList = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_LIST}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 filterEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_ENTRY}}}
;\par
  \par
    //Populate RsslFilterList with relevant information\par
    rsslFilterList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNG" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_HAS_TOTAL_COUNT_HINT}}}
;\par
    //Set RsslFilterList::containerType to the type that represents the most entries\par
    rsslFilterList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MAP}}}
;\par
    //Set approximate total count hint of the number of filter entries.\par
    rsslVector.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLF" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
 = 6;\par
    //Now invoke RsslFilterList encoding functions (e.g. rsslEncodeFilterListInit()). \par
  \par
    //Populate RsslFilterEntry with relevant information\par
    //If wanting to override RsslFilterList::containerType, indicate so on the RsslFilterEntry\par
    filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_CONTAINER_TYPE}}}
;\par
    filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ELEMENT_LIST}}}
;\par
    //Set Action and ID \par
    filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_SET_ENTRY}}}
;\par
    vectorEntry.id = 1;\par
    //Now invoke RsslFilterEntry encode functions (e.g. rsslEncodeFilterEntryInit(), rsslEncodeFilterEntryComplete())\par
  \par
    //------------------------------------------\par
  \par
    //We can also use the clear function for initial use (or reuse) using the clear function instead of static initializer\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 rsslFilterList;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 filterEntry;\par
  \par
    //Clear RsslFilterList and populate with relevant information\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNM" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterList}}}
(&rsslFilterList);\par
    rsslFilterList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNG" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_HAS_PER_ENTRY_PERM_DATA}}}
;\par
    rsslFilterList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MAP}}}
;\par
    //Now invoke RsslFilterList encoding functions (e.g. rsslEncodeFilterListInit()).\par
 \par
    //Clear RsslFilterEntry and populate with relevant information\par
    filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_PERM_DATA}}}
;\par
    // Populate perm data on RsslFilterEntry::permData.  This example sets it to buffer that is assumed to contain lock \par
    filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNP" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = permDataBuffer.data;\par
    filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNP" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = permDataBuffer.length;\par
    //Set action and id\par
    filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_UPDATE_ENTRY}}}
;\par
    vectorEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 index}}}
 = 2;\par
    //Now invoke RsslFilterEntry encode functions (e.g. rsslEncodeFilterEntry())\par
}
\par}
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslFilterList Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNS" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList Structure, Initializers, Flag values, and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} Structure, Initializers, and Helper methods. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry Structure, Initalizers and Helpers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} Structure, Initializers, Flag values, and Helper methods. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Structure, Initializers, Flag values, and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} Structure, Initializers, and Helper methods. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} is a non-uniform container type of filterId (8-bit identifier) \'96 value pair entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, contains an id corresponding to one of 32 possible bit-value identifiers. These identifiers are typically defined by a domain model specification and can be used to indicate interest or presence of specific entries through the inclusion of the of the id in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::filter}}}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_LIST}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} static initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNU" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterListFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_HAS_PER_ENTRY_PERM_DATA}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_HAS_TOTAL_COUNT_HINT}}}
 =  0x02
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. (FTF = FilterList Flags) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNM" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 *pFilterList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an rsslFilterList. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNW" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterListApplyHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 *pFilterList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_HAS_PER_ENTRY_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNX" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterListApplyHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 *pFilterList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_HAS_TOTAL_COUNT_HINT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterListCheckHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 *pFilterList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_HAS_PER_ENTRY_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterListCheckHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 *pFilterList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_HAS_TOTAL_COUNT_HINT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_FILTER_LIST\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:RSSL_INIT_FILTER_LIST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_LIST}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNM" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterList}}} \par
}}{
Definition at line 56 of file rsslFilterList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslFilterListFlags\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:RsslFilterListFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNU" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterListFlags}}}
}}
\par
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_FTF_NONE\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:RSSL_FTF_NONE}
{\b {\i RSSL_FTF_NONE{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} flags are present. \par
}{\xe \v RSSL_FTF_HAS_PER_ENTRY_PERM_DATA\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:RSSL_FTF_HAS_PER_ENTRY_PERM_DATA}
{\b {\i RSSL_FTF_HAS_PER_ENTRY_PERM_DATA{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} contains entries that have permission expressions, contained in relevant entries {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::permData}}} \par
}{\xe \v RSSL_FTF_HAS_TOTAL_COUNT_HINT\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:RSSL_FTF_HAS_TOTAL_COUNT_HINT}
{\b {\i RSSL_FTF_HAS_TOTAL_COUNT_HINT{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} contains a total count hint, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::totalCountHint}}}. \par
}}
\par
{
Definition at line 24 of file rsslFilterList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearFilterList\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:rsslClearFilterList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNM" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 * {\i pFilterList})}}
\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_LIST}}} \par
}}{
Definition at line 62 of file rsslFilterList.h.}\par
}
{\xe \v rsslFilterListApplyHasPerEntryPermData\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:rsslFilterListApplyHasPerEntryPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNW" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterListApplyHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 * {\i pFilterList})}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNU" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 337 of file rsslFilterList.h.}\par
}
{\xe \v rsslFilterListApplyHasTotalCountHint\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:rsslFilterListApplyHasTotalCountHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNX" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterListApplyHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 * {\i pFilterList})}}
\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNU" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 350 of file rsslFilterList.h.}\par
}
{\xe \v rsslFilterListCheckHasPerEntryPermData\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:rsslFilterListCheckHasPerEntryPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNY" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterListCheckHasPerEntryPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 * {\i pFilterList})}}
\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNU" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 309 of file rsslFilterList.h.}\par
}
{\xe \v rsslFilterListCheckHasTotalCountHint\:RsslFilterList Structure, Initializers, Flag values, and Helpers}
{\xe \v RsslFilterList Structure, Initializers, Flag values, and Helpers\:rsslFilterListCheckHasTotalCountHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterListCheckHasTotalCountHint}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 * {\i pFilterList})}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterList} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNU" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterListFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 323 of file rsslFilterList.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterEntry Structure, Initalizers and Helpers\par \pard\plain 
{\tc\tcl2 \v RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers}
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} Structure, Initializers, Flag values, and Helper methods. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterEntry Structure, Initializers, and Helpers
\par}
{\tc\tcl2 \v RsslFilterEntry Structure, Initializers, and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::flags}}} contains {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_CONTAINER_TYPE}}}, the contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}}; otherwise the contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}}. Any contents should be applied following the rules of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::action}}} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryActions}}}) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_ENTRY}}}
\~ \{ 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} static initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b rsslFilterEntrySetHasContainerType}\~ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOD" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryApplyHasContainerType}}}
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b rsslFilterEntrySetHasPermData}\~ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryApplyHasPermData}}}
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryActions}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_UPDATE_ENTRY}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_SET_ENTRY}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_CLEAR_ENTRY}}}
 =  3
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Action that indicates how to apply contents of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} (FTEA = FilterEntry Action) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_PERM_DATA}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_CONTAINER_TYPE}}}
 =  0x02
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. (FTEF = FilterEntry Flags) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 *pFilterEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOD" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryApplyHasContainerType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 *pFilterEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_CONTAINER_TYPE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 *pFilterEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOL" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryCheckHasContainerType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 *pFilterEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_CONTAINER_TYPE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 *pFilterEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_FILTER_ENTRY\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:RSSL_INIT_FILTER_ENTRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_ENTRY}}}
\~ \{ 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterEntry}}} \par
}}{
Definition at line 119 of file rsslFilterList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslFilterEntryActions\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:RsslFilterEntryActions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryActions}}}
}}
\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_FTEA_UPDATE_ENTRY\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:RSSL_FTEA_UPDATE_ENTRY}
{\b {\i RSSL_FTEA_UPDATE_ENTRY{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Apply the contents of this entry as an update at the specified id. If an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_UPDATE_ENTRY}}} action is received prior to an ::RSSL_FTEA_SET_ACTION action for the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABON" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::id}}}, the entry with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_UPDATE_ENTRY}}} action can be ignored. \par
}{\xe \v RSSL_FTEA_SET_ENTRY\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:RSSL_FTEA_SET_ENTRY}
{\b {\i RSSL_FTEA_SET_ENTRY{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Set/Replace the contents of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABON" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::id}}} with the contents of this entry \par
}{\xe \v RSSL_FTEA_CLEAR_ENTRY\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:RSSL_FTEA_CLEAR_ENTRY}
{\b {\i RSSL_FTEA_CLEAR_ENTRY{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Clear the contents of the entry at the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABON" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::id}}}, leaving the id present but empty. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_CLEAR_ENTRY}}} actions cannot carry any entry payload. If payload is necessary for a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_CLEAR_ENTRY}}} action, an entry with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_UPDATE_ENTRY}}} action can be sent and immediatley followed by the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABON" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::id}}} on an entry with a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_CLEAR_ENTRY}}} action. \par
}}}
\par
{
Definition at line 95 of file rsslFilterList.h.}\par
}
{\xe \v RsslFilterEntryFlags\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:RsslFilterEntryFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryFlags}}}
}}
\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_FTEF_NONE\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:RSSL_FTEF_NONE}
{\b {\i RSSL_FTEF_NONE{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} flags are present \par
}{\xe \v RSSL_FTEF_HAS_PERM_DATA\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:RSSL_FTEF_HAS_PERM_DATA}
{\b {\i RSSL_FTEF_HAS_PERM_DATA{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} contains permission data, located in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::permData}}}. \par
}{\xe \v RSSL_FTEF_HAS_CONTAINER_TYPE\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:RSSL_FTEF_HAS_CONTAINER_TYPE}
{\b {\i RSSL_FTEF_HAS_CONTAINER_TYPE{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} has a container type specified and present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}} - this type may differ from the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}} \par
}}
\par
{
Definition at line 84 of file rsslFilterList.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearFilterEntry\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:rsslClearFilterEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 * {\i pFilterEntry})}}
\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_ENTRY}}} \par
}}{
Definition at line 126 of file rsslFilterList.h.}\par
}
{\xe \v rsslFilterEntryApplyHasContainerType\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:rsslFilterEntryApplyHasContainerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOD" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryApplyHasContainerType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 * {\i pFilterEntry})}}
\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterEntry} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 415 of file rsslFilterList.h.}\par
}
{\xe \v rsslFilterEntryApplyHasPermData\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:rsslFilterEntryApplyHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 * {\i pFilterEntry})}}
\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterEntry} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 401 of file rsslFilterList.h.}\par
}
{\xe \v rsslFilterEntryCheckHasContainerType\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:rsslFilterEntryCheckHasContainerType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOL" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryCheckHasContainerType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 * {\i pFilterEntry})}}
\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterEntry} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 387 of file rsslFilterList.h.}\par
}
{\xe \v rsslFilterEntryCheckHasPermData\:RsslFilterEntry Structure, Initalizers and Helpers}
{\xe \v RsslFilterEntry Structure, Initalizers and Helpers\:rsslFilterEntryCheckHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 rsslFilterEntryCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 * {\i pFilterEntry})}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterEntry} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 374 of file rsslFilterList.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList and RsslFilterEntry Encoding\par \pard\plain 
{\tc\tcl2 \v RsslFilterList and RsslFilterEntry Encoding}
{\xe \v RsslFilterList and RsslFilterEntry Encoding}
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, the encoding process begins with a call to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit()}}}. Entries can be encoded by using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry()}}}, where the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} is populated with pre-encodede-encoded content, or using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit()}}}, the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}} encode functions, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete()}}}. When all entries are encoded, calling {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete()}}} will finish {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} encoding. \par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Encoding Example
\par}
{\tc\tcl2 \v RsslFilterList Encoding Example}
The following example demonstrates encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}.\par
Creation and initialization of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} is not shown in the example, however see the example in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Encode Iterator}}} for more information. The example assumes that the encIter was properly cleared and has an appropriate size buffer and version information already set.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create the success parameter for completing the RsslFilterList and RsslFilterEntry encoding.  \par
    //If any error occurs, this becomes false so rsslEncodeFilterEntryComplete() or rsslEncodeFilterListComplete() will roll back to last successful encoding\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
;\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
    //Create and initialize RsslFilterList structure\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 rsslFilterList = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_LIST}}}
;\par
    //Create the RsslFilterEntry structure, this will be reused so we will clear it between uses.\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 filterEntry = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_ENTRY}}}
;\par
    //Set most common container type that entries will contain\par
    rsslFilterList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MAP}}}
;\par
    //Set desired flags on filter list\par
    rsslFilterList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNG" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTF_HAS_TOTAL_COUNT_HINT}}}
;\par
    rsslFilterList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOA" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
 = 3;\par
\par
    //Initialize RsslFilterList encoding, handle any error.  \par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit}}}
(&encIter, &rsslFilterList)) < RSSL_RET_SUCCESS)\par
    \{\par
        success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
        printf("Error %s (%d) encountered with rsslEncodeFilterListInit().  Error Text: %s\\n", \par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
    else\par
    \{\par
        //Now populate RsslFilterEntry \par
        //Populate entry with desired content.  No need to set flags; sending same container as specified in RsslFilterList::containerType and not adding perm data.\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_SET_ENTRY}}}
;\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABON" }{}}{\fldrslt {\cs37\ul\cf2 id}}}
 = 1;\par
        //Begin entry encoding.  Expected content length is \par
        //less than 100 bytes, so we are providing the maxEncodingSize hint.\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit}}}
(&encIter, &filterEntry, 100); \par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeFilterEntryInit().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Can roll back this entry or entire vector\par
            {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete}}}
(&encIter, success);\par
        \}\par
  \par
        //Now encode RsslMap content.  See map encoding example at \\ref MapEncExample\par
\par
        //When map encoding completes, finish the RsslFilterEntry\par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete}}}
(&encIter, success);\par
    \par
        //Encode second entry. This time, assume pre-encoded RsslMap payload is contained in buffer.\par
        //Clear RsslFilterEntry for reuse\par
        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterEntry}}}
(&filterEntry);\par
        //Populate entry with pre-encoded content\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encMapBuffer.data;\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encMapBuffer.length;\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_UPDATE_ENTRY}}}
;\par
        filterEntry.index = 2;\par
  \par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry}}}
(&encIter, &filterEntry); \par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeFilterEntry().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Non Init/Complete calls will automatically roll back entry when failure occurs.  \par
            //Can choose to roll back entire vector if user wants *         \par
        \}\par
 \par
        //Encode third entry.  Different pre-encoded container type this time\par
        //Clear RsslFilterEntry for reuse\par
        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterEntry}}}
(&filterEntry);\par
        //set container type and flag\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_CONTAINER_TYPE}}}
;\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
        //Populate entry with pre-encoded content\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encFieldListBuffer.data;\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encFieldListBuffer.length;\par
        filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEA_UPDATE_ENTRY}}}
;\par
        filterEntry.index = 4;\par
  \par
        retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry}}}
(&encIter, &filterEntry); \par
        if (retVal < RSSL_RET_SUCCESS)\par
        \{\par
            printf("Error %s (%d) encountered with rsslEncodeFilterEntry().  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            success = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
;\par
            //Non Init/Complete calls will automatically roll back entry when failure occurs.  \par
            //Can choose to roll back entire vector if user wants *         \par
        \}\par
    \}\par
    //Done with entries, complete the filter list encoding\par
    retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete}}}
(&encIter, success);\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 *pFilterEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} where there is no payload or any payload is pre-encoded and populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::encData}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 *pFilterEntry, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 maxEncodingSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, where any payload is encoded after this call using the appropriate container type encode functions, as specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 *pFilterList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begin encoding process for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} container type. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeFilterEntry\:RsslFilterList and RsslFilterEntry Encoding}
{\xe \v RsslFilterList and RsslFilterEntry Encoding\:rsslEncodeFilterEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 * {\i pFilterEntry})}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} to encode. If any payload is present, it must be populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::encData}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeFilterEntryComplete\:RsslFilterList and RsslFilterEntry Encoding}
{\xe \v RsslFilterList and RsslFilterEntry Encoding\:rsslEncodeFilterEntryComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encoder iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} encoding, if false - remove the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} from the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeFilterEntryInit\:RsslFilterList and RsslFilterEntry Encoding}
{\xe \v RsslFilterList and RsslFilterEntry Encoding\:rsslEncodeFilterEntryInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 * {\i pFilterEntry}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i maxEncodingSize})}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterEntry} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i maxEncodingSize} \cell }{max expected encoding size of the entry's payload, if encoding. This allows for optimized storage of length when encoding - value of 0 can be used if not encoding or to allow for maximum supported length for the entry's payload. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeFilterListComplete\:RsslFilterList and RsslFilterEntry Encoding}
{\xe \v RsslFilterList and RsslFilterEntry Encoding\:rsslEncodeFilterListComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} encoding \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the filter list encoding, if false - remove the filter list payload from the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeFilterListInit\:RsslFilterList and RsslFilterEntry Encoding}
{\xe \v RsslFilterList and RsslFilterEntry Encoding\:rsslEncodeFilterListInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 * {\i pFilterList})}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListInit()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab To encode entries, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALS" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntry()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit()}}}..{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete()}}} for each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete()}}} when all entries are completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterList} \cell }{partially populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} structure to encode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterListComplete}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information. \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList and RsslFilterEntry Decoding\par \pard\plain 
{\tc\tcl2 \v RsslFilterList and RsslFilterEntry Decoding}
{\xe \v RsslFilterList and RsslFilterEntry Decoding}
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When decoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, each entry is returned as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} containing the encoded payload content. Further decoding of an entry's content can be achieved by using the appropriate container type decoder. If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}} is present, indicated by ::RSSL_FTEA_HAS_CONTAINER_TYPE, that container type decode functionality should be used. Otherwise, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}} decode functionality should be used. If desired, decoding of an entry's content can be skipped by invoking the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterEntry()}}} function to move to the next entry. \par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Decoding Example
\par}
{\tc\tcl2 \v RsslFilterList Decoding Example}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 rsslFilterList; //No need to clear since we will decode into this\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 filterEntry; //RsslFilterEntry to expose individual entry contents through\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 retVal;\par
\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterList}}}
(&decIter, &rsslFilterList)) >= RSSL_RET_SUCCESS)\par
    \{\par
        while ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterEntry}}}
(&decIter, &filterEntry)) != {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}}
)\par
        \{\par
            //handle failure cases\par
            if (retVal < RSSL_RET_SUCCESS)\par
            \{\par
                //handle error as needed\par
                printf("Error %s (%d) encountered while decoding filter entries.  Error text: %s\\n", \par
                        {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            \}\par
            else\par
            \{\par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 RsslContainerType}}}
 type;\par
                //Determine correct type to decode as\par
                if (filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 & RSSL_FTEA_HAS_CONTAINER_TYPE)\par
                    type = filterEntry.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
;\par
                else\par
                    type = rsslFilterList.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
;\par
                //now decode container type\par
                switch(type)\par
                \{\par
                    //handle appropriate container types and do something with data\par
                    ...\par
                \}\par
            \}\par
        \}\par
    \}\par
    else\par
    \{\par
        //initial filter list decode failed\par
        printf("Error %s (%d) encountered while decoding RsslFilterList.  Error text: %s\\n",\par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 *pFilterEntry)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes and returns a single {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} from within an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::encEntries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 *pFilterList)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} container. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeFilterEntry\:RsslFilterList and RsslFilterEntry Decoding}
{\xe \v RsslFilterList and RsslFilterEntry Decoding\:rsslDecodeFilterEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}
 * {\i pFilterEntry})}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterList()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeFilterEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterEntry} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} to decode content into. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::encData}}} will contain encoded content of entry. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslDecodeFilterList\:RsslFilterList and RsslFilterEntry Decoding}
{\xe \v RsslFilterList and RsslFilterEntry Decoding\:rsslDecodeFilterList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterList}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}
 * {\i pFilterList})}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterList()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call rsslDecodeFilterEntry until error or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_END_OF_CONTAINER}}} is returned.\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilterList} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} structure to populate with decoded contents. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::encEntries}}} will point to encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} content. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Wire Format Message Package\par \pard\plain 
{\tc\tcl2 \v Transport API Wire Format Message Package}
{\xe \v Transport API Wire Format Message Package}
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Message Package manages the binary representation of OMM messages, ranging from requests and responses to bi-directional generic messages. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOR" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Structures}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Message Package's message structures are required to encode or decode OMM messages. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transport API Message Encoding functionality, used for all aspects of message header encoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transport API Message Decoding functionality, used for all aspects of message header decoding. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are intended to assist users with using the Transport API Message package structures. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Message Structures\par \pard\plain 
{\tc\tcl2 \v Transport API Message Structures}
{\xe \v Transport API Message Structures}
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Transport API Message Package's message structures are required to encode or decode OMM messages. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOV" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Base}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} contains information that is shared across all Transport API Message structures. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOX" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Key}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} structure contains attributes that are used to identify the contents of a particular stream. This information, as well as the domain type and Quality of Service information can be used to uniquely identify a stream. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Request Message allows a user to open a stream for the indicated content, or to change requested attributes/properties on an already open stream. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPA" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Refresh Message is used to provide an initial or subsequent data synchronization point, including quality of service and payload content. When used to respond to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, a solicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. If pushing out a content change to downstream applications, an unsolicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. When the stream is instantiated because of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, the streamId from the request should be used; when a provider instantiates the stream with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} (e.g. Non-Interactive provider), a negative streamId should be used. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPC" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Status Message is used to convey state information, permission change, or group Id change information on a stream. An interactive or non-interactive providing application can also close a stream with a status message. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPD" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Update Message is used to provide content change on an open stream. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Close Message is used to indicate that a consuming application is no longer interested in content on the stream being closed. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Post Message is used to contribute content from a consumer into the platform. The post message payload can contain another OMM message, OMM container, or other opaque content. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Ack Message is used to acknowledge success/failure or completion of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPI" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Generic Message allows applications to bidirectionally message without any implied interaction semantics (e.g. no Request/Response paradigm). \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg Union Reference Group}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OMM Message Union contains all messages. This includes constructs, functions, and values. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgClasses}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MC_REQUEST}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MC_REFRESH}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MC_STATUS}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MC_UPDATE}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MC_CLOSE}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MC_ACK}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MC_GENERIC}}}
 =  7, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MC_POST}}}
 =  8
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration that defines the value associated with the different message classes offered in OMM. These are populated in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPT" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::msgClass}}} member. (MC = MsgClass) }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslMsgClasses\:Transport API Message Structures}
{\xe \v Transport API Message Structures\:RsslMsgClasses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgClasses}}}
}}
\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPU" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgClassToString}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_MC_REQUEST\:Transport API Message Structures}
{\xe \v Transport API Message Structures\:RSSL_MC_REQUEST}
{\b {\i RSSL_MC_REQUEST{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Request Message \par
}{\xe \v RSSL_MC_REFRESH\:Transport API Message Structures}
{\xe \v Transport API Message Structures\:RSSL_MC_REFRESH}
{\b {\i RSSL_MC_REFRESH{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Refresh Message \par
}{\xe \v RSSL_MC_STATUS\:Transport API Message Structures}
{\xe \v Transport API Message Structures\:RSSL_MC_STATUS}
{\b {\i RSSL_MC_STATUS{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Status Message \par
}{\xe \v RSSL_MC_UPDATE\:Transport API Message Structures}
{\xe \v Transport API Message Structures\:RSSL_MC_UPDATE}
{\b {\i RSSL_MC_UPDATE{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Update Message \par
}{\xe \v RSSL_MC_CLOSE\:Transport API Message Structures}
{\xe \v Transport API Message Structures\:RSSL_MC_CLOSE}
{\b {\i RSSL_MC_CLOSE{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Close Message \par
}{\xe \v RSSL_MC_ACK\:Transport API Message Structures}
{\xe \v Transport API Message Structures\:RSSL_MC_ACK}
{\b {\i RSSL_MC_ACK{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(6) Acknowledgement Message \par
}{\xe \v RSSL_MC_GENERIC\:Transport API Message Structures}
{\xe \v Transport API Message Structures\:RSSL_MC_GENERIC}
{\b {\i RSSL_MC_GENERIC{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(7) Generic Bidirectional Message \par
}{\xe \v RSSL_MC_POST\:Transport API Message Structures}
{\xe \v Transport API Message Structures\:RSSL_MC_POST}
{\b {\i RSSL_MC_POST{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(8) Post Message \par
}}
\par
{
Definition at line 33 of file rsslMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Message Base\par \pard\plain 
{\tc\tcl2 \v Transport API Message Base}
{\xe \v Transport API Message Base}
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} contains information that is shared across all Transport API Message structures. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} functionality include  "rtr/rsslMsgBase.h"\par
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsgBase Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslMsgBase Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} Structure, Initializers, and flag values. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsgBase Structure, Initializers, and Flag values\par \pard\plain 
{\tc\tcl2 \v RsslMsgBase Structure, Initializers, and Flag values}
{\xe \v RsslMsgBase Structure, Initializers, and Flag values}
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} contains common members that are used across all Rssl Messages. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
\~ \{ 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsgBase}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 *pMsgBase)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_MSG_BASE\:RsslMsgBase Structure, Initializers, and Flag values}
{\xe \v RsslMsgBase Structure, Initializers, and Flag values\:RSSL_INIT_MSG_BASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
\~ \{ 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The static initializer is intended for use by the RSSL message structure static initializers. Most users will not need to use either this or the clear function to clear an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} structure.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On larger structures, like messages, the clear functions tend to outperform the static initializer. It is recommended to use the clear function when initializing any messages.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsgBase}}} \par
}}{
Definition at line 47 of file rsslMsgBase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearMsgBase\:RsslMsgBase Structure, Initializers, and Flag values}
{\xe \v RsslMsgBase Structure, Initializers, and Flag values\:rsslClearMsgBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsgBase}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 * {\i pMsgBase})}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}} \par
}}{
Definition at line 54 of file rsslMsgBase.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Message Key\par \pard\plain 
{\tc\tcl2 \v Transport API Message Key}
{\xe \v Transport API Message Key}
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} structure contains attributes that are used to identify the contents of a particular stream. This information, as well as the domain type and Quality of Service information can be used to uniquely identify a stream. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} is used in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to specify the item stream that the consumer wishes to open. After the provider has processed the request, any subsequent RsslResponseMsg should contain the same Stream ID and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} information that the consumer specified. Updates typically will not contain an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} unless the consumer specifies it in the initial {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}.\par
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} functionality include  "rtr/rsslMsgKey.h"\par
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsgKey Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslMsgKey Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} contains a variety of attributes used to identify the contents flowing within a particular stream. This information, in conjunction with domainType and quality of service information, can be used to uniquely identify a data stream. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} Helper and Utility functions. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKeyFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_NONE}}}
 =  0x0000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_SERVICE_ID}}}
 =  0x0001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME}}}
 =  0x0002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME_TYPE}}}
 =  0x0004, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_FILTER}}}
 =  0x0008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_IDENTIFIER}}}
 =  0x0010, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_ATTRIB}}}
 =  0x0020
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Message Key Flags (MKF = MsgKey Flag) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQL" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an Rssl message key. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_MSG_KEY\:Transport API Message Key}
{\xe \v Transport API Message Key\:RSSL_INIT_MSG_KEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
\}}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The static initializer is intended for use by the RSSL message structure static initializers. Most users will not need to use either this or the clear function to clear an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, unless they are storing the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} structures outside of the message structures. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQL" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsgKey}}} \par
}}{
Definition at line 47 of file rsslMsgKey.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslMsgKeyFlags\:Transport API Message Key}
{\xe \v Transport API Message Key\:RsslMsgKeyFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKeyFlags}}}
}}
\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_MKF_NONE\:Transport API Message Key}
{\xe \v Transport API Message Key\:RSSL_MKF_NONE}
{\b {\i RSSL_MKF_NONE{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0000) No RsslMsgKeyFlags flags are present \par
}{\xe \v RSSL_MKF_HAS_SERVICE_ID\:Transport API Message Key}
{\xe \v Transport API Message Key\:RSSL_MKF_HAS_SERVICE_ID}
{\b {\i RSSL_MKF_HAS_SERVICE_ID{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0001) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} has a service id, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQM" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::serviceId}}}. \par
}{\xe \v RSSL_MKF_HAS_NAME\:Transport API Message Key}
{\xe \v Transport API Message Key\:RSSL_MKF_HAS_NAME}
{\b {\i RSSL_MKF_HAS_NAME{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0002) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} has a name buffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::name}}}. \par
}{\xe \v RSSL_MKF_HAS_NAME_TYPE\:Transport API Message Key}
{\xe \v Transport API Message Key\:RSSL_MKF_HAS_NAME_TYPE}
{\b {\i RSSL_MKF_HAS_NAME_TYPE{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0004) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} has a nameType enumeration, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::nameType}}}. \par
}{\xe \v RSSL_MKF_HAS_FILTER\:Transport API Message Key}
{\xe \v Transport API Message Key\:RSSL_MKF_HAS_FILTER}
{\b {\i RSSL_MKF_HAS_FILTER{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0008) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} has a filter, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::filter}}}. \par
}{\xe \v RSSL_MKF_HAS_IDENTIFIER\:Transport API Message Key}
{\xe \v Transport API Message Key\:RSSL_MKF_HAS_IDENTIFIER}
{\b {\i RSSL_MKF_HAS_IDENTIFIER{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0010) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} has a numeric identifier, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQP" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::identifier}}} \par
}{\xe \v RSSL_MKF_HAS_ATTRIB\:Transport API Message Key}
{\xe \v Transport API Message Key\:RSSL_MKF_HAS_ATTRIB}
{\b {\i RSSL_MKF_HAS_ATTRIB{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0020) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} has additional attribute information, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}. The container type of the attribute information is contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. \par
}}
\par
{
Definition at line 64 of file rsslMsgKey.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearMsgKey\:Transport API Message Key}
{\xe \v Transport API Message Key\:rsslClearMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQL" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pKey})}}
\par
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}} \par
}}{
Definition at line 54 of file rsslMsgKey.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsgKey Structure, Initializers, and Flag values\par \pard\plain 
{\tc\tcl2 \v RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values}
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} is used to provide an initial or subsequent data synchronization point, including quality of service and payload content. When used to respond to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, a solicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. If pushing out a content change to downstream applications, an unsolicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. When the stream is instantiated because of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, the streamId from the request should be used; when a provider instantiates the stream with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} (e.g. Non-Interactive provider), a negative streamId should be used. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REQUEST_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_NONE}}}
 =  0x0000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_EXTENDED_HEADER}}}
 =  0x0001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_PRIORITY}}}
 =  0x0002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_STREAMING}}}
 =  0x0004, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_MSG_KEY_IN_UPDATES}}}
 =  0x0008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_CONF_INFO_IN_UPDATES}}}
 =  0x0010, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_NO_REFRESH}}}
 =  0x0020, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_QOS}}}
 =  0x0040, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_WORST_QOS}}}
 =  0x0080, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_PRIVATE_STREAM}}}
 =  0x0100, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_PAUSE}}}
 =  0x0200, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_VIEW}}}
 =  0x0400, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_BATCH}}}
 =  0x0800, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_QUALIFIED_STREAM}}}
 =  0x1000
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values for use with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. (RQMF = RequestMsg Flag) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRequestMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. Also sets RsslRequestMsg::msgBase::msgClass. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_REQUEST_MSG\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_INIT_REQUEST_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REQUEST_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Static clear function does not set RsslRequestMsg::msgBase::msgClass, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRequestMsg()}}} function does.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On larger structures, like messages, the clear functions tend to outperform the static initializer. It is recommended to use the clear function when initializing any messages. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRequestMsg}}} \par
}}{
Definition at line 46 of file rsslRequestMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslRequestFlags\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RsslRequestFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}
}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_RQMF_NONE\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_NONE}
{\b {\i RSSL_RQMF_NONE{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x000) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} flags are present \par
}{\xe \v RSSL_RQMF_HAS_EXTENDED_HEADER\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_HAS_EXTENDED_HEADER}
{\b {\i RSSL_RQMF_HAS_EXTENDED_HEADER{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0001) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} has an extended header buffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRI" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::extendedHeader}}}. \par
}{\xe \v RSSL_RQMF_HAS_PRIORITY\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_HAS_PRIORITY}
{\b {\i RSSL_RQMF_HAS_PRIORITY{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0002) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} has priority information, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::priorityClass}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRK" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::priorityCount}}}. This is used to indicate the importance of this stream. \par
}{\xe \v RSSL_RQMF_STREAMING\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_STREAMING}
{\b {\i RSSL_RQMF_STREAMING{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0004) Indicates that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}'s item stream should be opened as streaming (e.g. as changes occur, subsequent {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} will deliver updates). If a stream is paused, a subsequent {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} with this flag present will resume data flow. \par
}{\xe \v RSSL_RQMF_MSG_KEY_IN_UPDATES\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_MSG_KEY_IN_UPDATES}
{\b {\i RSSL_RQMF_MSG_KEY_IN_UPDATES{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0008) Indicates that the user would like to have {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} information included in any {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} content on the stream. \par
}{\xe \v RSSL_RQMF_CONF_INFO_IN_UPDATES\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_CONF_INFO_IN_UPDATES}
{\b {\i RSSL_RQMF_CONF_INFO_IN_UPDATES{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0010) Indicates that the user would like to have conflation information, when conflation is occuring, included in any {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} content on the stream. \par
}{\xe \v RSSL_RQMF_NO_REFRESH\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_NO_REFRESH}
{\b {\i RSSL_RQMF_NO_REFRESH{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0020) Indicates that the user does not require an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} for this request - typically used as part of a reissue to change priority, view information, or pausing/resuming a stream. \par
}{\xe \v RSSL_RQMF_HAS_QOS\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_HAS_QOS}
{\b {\i RSSL_RQMF_HAS_QOS{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0040) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} contains quality of service information, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::qos}}}. If only {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::qos}}} is present, this is the QoS that will satisfy the request. If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::qos}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRM" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::worstQos}}} are both present, this indicates that any QoS in that range will satisfy the request. \par
}{\xe \v RSSL_RQMF_HAS_WORST_QOS\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_HAS_WORST_QOS}
{\b {\i RSSL_RQMF_HAS_WORST_QOS{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0080) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} contains a worst quality of service, implying that a range is specified in the message. When {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::qos}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRM" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::worstQos}}} are both present, this indicates that any QoS in that range will satisfy the request. \par
}{\xe \v RSSL_RQMF_PRIVATE_STREAM\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_PRIVATE_STREAM}
{\b {\i RSSL_RQMF_PRIVATE_STREAM{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0100) Indicates that the user would like to open the stream as 'private'. This requires a response ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}) to acknowledge that it is open as private. Once opened as private, all content should only flow between two endpoints of streams - no fanout or caching should be performed. \par
}{\xe \v RSSL_RQMF_PAUSE\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_PAUSE}
{\b {\i RSSL_RQMF_PAUSE{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0200) Indicates that the user would like to pause the stream. If present on an initial {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, the stream should be opened in a paused state where the user gets an initial {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. If present on a subsequent {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, the stream will be paused at that time. Issuing this flag does not guarantee that the stream will be paused. \par
}{\xe \v RSSL_RQMF_HAS_VIEW\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_HAS_VIEW}
{\b {\i RSSL_RQMF_HAS_VIEW{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0400) Indicates that the payload contains a dynamic view specification, indicating the specific information on the stream the user is interested in receiving. \par
}{\xe \v RSSL_RQMF_HAS_BATCH\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_HAS_BATCH}
{\b {\i RSSL_RQMF_HAS_BATCH{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0800) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} payload contains a batch of items for requesting \par
}{\xe \v RSSL_RQMF_QUALIFIED_STREAM\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:RSSL_RQMF_QUALIFIED_STREAM}
{\b {\i RSSL_RQMF_QUALIFIED_STREAM{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x1000) Indicates that the user would like to open the stream as 'qualified.' \par
}}
\par
{
Definition at line 66 of file rsslRequestMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearRequestMsg\:RsslMsgKey Structure, Initializers, and Flag values}
{\xe \v RsslMsgKey Structure, Initializers, and Flag values\:rsslClearRequestMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRequestMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REQUEST_MSG}}} \par
}}{
Definition at line 54 of file rsslRequestMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsgKey Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions}
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} Helper and Utility functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsgKey Helper and Utility functions
\par}
{\tc\tcl2 \v RsslMsgKey Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRP" }{}}{\fldrslt {\cs37\ul\cf2 rsslAddFilterIdToFilter}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 filterId, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 *pFilter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a FilterId to the key filter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslCheckFilterForFilterId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 filterId, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 filter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if FilterId is present in key filter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRR" }{}}{\fldrslt {\cs37\ul\cf2 rsslCompareMsgKeys}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pKey1, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pKey2)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two MsgKey structures to determine if they are the same. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRS" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pDestKey, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pSourceKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs a deep copy of a MsgKey. Expects all memory to be owned and managed by user. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRT" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasAttrib}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_ATTRIB}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRU" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasFilter}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_FILTER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRV" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasIdentifier}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_IDENTIFIER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRW" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRX" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasNameType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME_TYPE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRY" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasServiceId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_SERVICE_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasAttrib}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_ATTRIB}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSA" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasFilter}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_FILTER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSB" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasIdentifier}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_IDENTIFIER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSC" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSD" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasNameType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME_TYPE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSE" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasServiceId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_SERVICE_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSF" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyHash}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pMsgKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
generates a hash ID from a message key. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslAddFilterIdToFilter\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslAddFilterIdToFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRP" }{}}{\fldrslt {\cs37\ul\cf2 rsslAddFilterIdToFilter}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i filterId}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 * {\i pFilter})}}
\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filterId} \cell }{The FilterId you want added to the filter. (e.g. RSSL_SERVICE_STATE_ID) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pFilter} \cell }{The filter to add the FilterId to \cell }
{\row }
}
}}
{\xe \v rsslCheckFilterForFilterId\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslCheckFilterForFilterId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslCheckFilterForFilterId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i filterId}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i filter})}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filterId} \cell }{The FilterId you want to check for \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filter} \cell }{The filter to check for the FilterId \cell }
{\row }
}
}}
{\xe \v rsslCompareMsgKeys\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslCompareMsgKeys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRR" }{}}{\fldrslt {\cs37\ul\cf2 rsslCompareMsgKeys}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pKey1}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pKey2})}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pKey1} \cell }{First key to compare \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pKey2} \cell }{Second key to compare \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet returns RSSL_RET_SUCCESS if keys match, RSSL_RET_FAILURE otherwise. \par
}}}
{\xe \v rsslCopyMsgKey\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslCopyMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRS" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pDestKey}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pSourceKey})}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pDestKey} \cell }{Destination to copy into. Should have sufficient memory to contain copy of sourceKey. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSourceKey} \cell }{Source to copy from. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet returns RSSL_RET_SUCCESS if copy succeeds, RSSL_RET_FAILURE otherwise. \par
}}}
{\xe \v rsslMsgKeyApplyHasAttrib\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyApplyHasAttrib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRT" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasAttrib}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
}{
Definition at line 211 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyApplyHasFilter\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyApplyHasFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRU" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasFilter}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
}{
Definition at line 191 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyApplyHasIdentifier\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyApplyHasIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRV" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasIdentifier}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
}{
Definition at line 201 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyApplyHasName\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyApplyHasName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRW" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
}{
Definition at line 171 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyApplyHasNameType\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyApplyHasNameType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRX" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasNameType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
}{
Definition at line 181 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyApplyHasServiceId\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyApplyHasServiceId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRY" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyApplyHasServiceId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
}{
Definition at line 161 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyCheckHasAttrib\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyCheckHasAttrib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasAttrib}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 150 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyCheckHasFilter\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyCheckHasFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSA" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasFilter}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 126 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyCheckHasIdentifier\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyCheckHasIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSB" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasIdentifier}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 138 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyCheckHasName\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyCheckHasName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSC" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 102 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyCheckHasNameType\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyCheckHasNameType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSD" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasNameType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 114 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyCheckHasServiceId\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyCheckHasServiceId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSE" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyCheckHasServiceId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsgKey} \cell }{Pointer to the message key. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 90 of file rsslMsgKey.h.}\par
}
{\xe \v rsslMsgKeyHash\:RsslMsgKey Helper and Utility functions}
{\xe \v RsslMsgKey Helper and Utility functions\:rsslMsgKeyHash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSF" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgKeyHash}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pMsgKey})}}
\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid hash ID \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRequestMsg Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslRequestMsg Reference Group}
{\xe \v RsslRequestMsg Reference Group}
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Request Message allows a user to open a stream for the indicated content, or to change requested attributes/properties on an already open stream. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} functionality include  "rtr/rsslRequestMsg.h"\par
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} allows a user to open a stream for the indicated content or to change requested attributes/properties on an already open stream. The RsslRequestMsg::msgBase::msgKey members, in conjunction with the RsslRequestMsg::msgBase::domainType help to identify the stream, while priority information can be used to indicate the streams importance to the OMM Consumer. Quality of service information can be used to express either a specific desired quality of service or a range of acceptable qualities of service that can satisfy the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} can be used to specify batch or view information on a stream or to pause/resume content flow on a stream.\par
}See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRequestMsg Creation Examples
\par}
{\tc\tcl2 \v RsslRequestMsg Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslRequestMsg and initialize\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 reqMsg;\par
\par
    // Use the clear function since it sets the msgClass and tend to perform better\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRequestMsg}}}
(&requestMsg);\par
  \par
    // Populate RsslRequestMsg with relevant information\par
    // Set flags to indicate streaming request with concrete qos and priority\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSH" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_STREAMING}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_PRIORITY}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_QOS}}}
;\par
\par
    // Populate this with standard header information\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
\par
    // Populate message key information\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSO" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME_TYPE}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_SERVICE_ID}}}
;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQM" }{}}{\fldrslt {\cs37\ul\cf2 serviceId}}}
 = 1;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQO" }{}}{\fldrslt {\cs37\ul\cf2 nameType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSP" }{}}{\fldrslt {\cs37\ul\cf2 RDM_INSTRUMENT_NAME_TYPE_RIC}}}
;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "TRI";\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 3;\par
\par
    // Populate priority. \par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRJ" }{}}{\fldrslt {\cs37\ul\cf2 priorityClass}}}
 = 5;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRK" }{}}{\fldrslt {\cs37\ul\cf2 priorityCount}}}
 = 10;\par
\par
    // Populate quality of service\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 qos}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 timeliness}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_REALTIME}}}
;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 qos}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 rate}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TICK_BY_TICK}}}
;\par
\par
    // If content is pre-encoded, can set on reqMsg.msgBase.encDataBody buffer and call rsslEncodeMsg().\par
    // If content is not pre-encoded, user can call rsslEncodeMsgInit(), encode content, and rsslEncodeMsgComplete().\par
}
\par}
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRequestMsg Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslRequestMsg Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} Helper and Utility functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRequestMsg Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions}
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} Helper and Utility functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRequestMsg Helper and Utility functions
\par}
{\tc\tcl2 \v RsslRequestMsg Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b rsslRequestMsgCheckHasQoS}\~ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABST" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasQos}}}
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b rsslRequestMsgCheckHasWorstQoS}\~ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasWorstQos}}}
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSX" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyConfInfoInUpdates}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_CONF_INFO_IN_UPDATES}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSY" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasBatch}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_BATCH}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTA" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasPriority}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_PRIORITY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTB" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_QOS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTC" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasView}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_VIEW}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasWorstQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_WORST_QOS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyMsgKeyInUpdates}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_MSG_KEY_IN_UPDATES}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTF" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyNoRefresh}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_NO_REFRESH}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTG" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyPause}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_PAUSE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTH" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_PRIVATE_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTI" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_QUALIFIED_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyStreaming}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_STREAMING}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTK" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckConfInfoInUpdates}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_CONF_INFO_IN_UPDATES}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTL" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasBatch}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_BATCH}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTM" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTN" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasPriority}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_PRIORITY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABST" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_QOS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTO" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasView}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_VIEW}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasWorstQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_WORST_QOS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckMsgKeyInUpdates}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_MSG_KEY_IN_UPDATES}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckNoRefresh}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_NO_REFRESH}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTR" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckPause}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_PAUSE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_PRIVATE_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTT" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_QUALIFIED_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTU" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckStreaming}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 *pRequestMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_STREAMING}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTV" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetConfInfoInUpdatesFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_CONF_INFO_IN_UPDATES}}} flag in the encoded message contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetMsgKeyInUpdatesFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_MSG_KEY_IN_UPDATES}}} flag in the encoded message contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTX" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetNoRefreshFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_NO_REFRESH}}} flag in the encoded message contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetStreamingFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_STREAMING}}} flag in the encoded message contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetConfInfoInUpdatesFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unsets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_CONF_INFO_IN_UPDATES}}} flag in the encoded message contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUA" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetMsgKeyInUpdatesFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unsets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_MSG_KEY_IN_UPDATES}}} flag in the encoded message contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUB" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetNoRefreshFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unsets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_NO_REFRESH}}} flag in the encoded message contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUC" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetStreamingFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unsets the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_STREAMING}}} flag in the encoded message contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslRequestMsgApplyConfInfoInUpdates\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyConfInfoInUpdates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSX" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyConfInfoInUpdates}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 321 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyHasBatch\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyHasBatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSY" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasBatch}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 405 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyHasExtendedHdr\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 273 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyHasPriority\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyHasPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTA" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasPriority}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 285 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyHasQos\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyHasQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTB" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 345 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyHasView\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyHasView}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTC" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasView}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 393 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyHasWorstQos\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyHasWorstQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyHasWorstQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 357 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyMsgKeyInUpdates\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyMsgKeyInUpdates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyMsgKeyInUpdates}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 309 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyNoRefresh\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyNoRefresh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTF" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyNoRefresh}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 333 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyPause\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyPause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTG" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyPause}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 381 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyPrivateStream\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyPrivateStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTH" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 369 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyQualifiedStream\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyQualifiedStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTI" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 417 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgApplyStreaming\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgApplyStreaming}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgApplyStreaming}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to apply flag value to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid No return value \par
}}{
Definition at line 297 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckConfInfoInUpdates\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckConfInfoInUpdates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTK" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckConfInfoInUpdates}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 153 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckHasBatch\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckHasBatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTL" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasBatch}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 246 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckHasExtendedHdr\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTM" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 101 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckHasPriority\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckHasPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTN" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasPriority}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 114 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckHasQos\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckHasQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABST" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 179 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckHasView\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckHasView}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTO" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasView}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 233 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckHasWorstQos\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckHasWorstQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckHasWorstQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 193 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckMsgKeyInUpdates\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckMsgKeyInUpdates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckMsgKeyInUpdates}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 140 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckNoRefresh\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckNoRefresh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckNoRefresh}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 166 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckPause\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckPause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTR" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckPause}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 220 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckPrivateStream\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckPrivateStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 207 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckQualifiedStream\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckQualifiedStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTT" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 259 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslRequestMsgCheckStreaming\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslRequestMsgCheckStreaming}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTU" }{}}{\fldrslt {\cs37\ul\cf2 rsslRequestMsgCheckStreaming}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 * {\i pRequestMsg})}}
\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRequestMsg} \cell }{Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if present; RSSL_FALSE if not present. \par
}}{
Definition at line 127 of file rsslRequestMsg.h.}\par
}
{\xe \v rsslSetConfInfoInUpdatesFlag\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslSetConfInfoInUpdatesFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTV" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetConfInfoInUpdatesFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator that contains the encoded message to apply flag to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if an error occurs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when encoded message is successfully modified. \par
}}}
{\xe \v rsslSetMsgKeyInUpdatesFlag\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslSetMsgKeyInUpdatesFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetMsgKeyInUpdatesFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator that contains the encoded message to apply flag to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if an error occurs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when encoded message is successfully modified. \par
}}}
{\xe \v rsslSetNoRefreshFlag\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslSetNoRefreshFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTX" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetNoRefreshFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator that contains the encoded message to apply flag to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if an error occurs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when encoded message is successfully modified. \par
}}}
{\xe \v rsslSetStreamingFlag\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslSetStreamingFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetStreamingFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator that contains the encoded message to apply flag to. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if an error occurs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when encoded message is successfully modified. \par
}}}
{\xe \v rsslUnsetConfInfoInUpdatesFlag\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslUnsetConfInfoInUpdatesFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetConfInfoInUpdatesFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator that contains the encoded message to remove flag from. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if an error occurs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when encoded message is successfully modified. \par
}}}
{\xe \v rsslUnsetMsgKeyInUpdatesFlag\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslUnsetMsgKeyInUpdatesFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUA" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetMsgKeyInUpdatesFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator that contains the encoded message to remove flag from. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if an error occurs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when encoded message is successfully modified. \par
}}}
{\xe \v rsslUnsetNoRefreshFlag\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslUnsetNoRefreshFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUB" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetNoRefreshFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator that contains the encoded message to remove flag from. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if an error occurs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when encoded message is successfully modified. \par
}}}
{\xe \v rsslUnsetStreamingFlag\:RsslRequestMsg Helper and Utility functions}
{\xe \v RsslRequestMsg Helper and Utility functions\:rsslUnsetStreamingFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUC" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetStreamingFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{RsslEncodeIterator that contains the encoded message to remove flag from. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_FAILURE}}} if an error occurs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS}}} when encoded message is successfully modified. \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRefreshMsg Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslRefreshMsg Reference Group}
{\xe \v RsslRefreshMsg Reference Group}
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Refresh Message is used to provide an initial or subsequent data synchronization point, including quality of service and payload content. When used to respond to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, a solicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. If pushing out a content change to downstream applications, an unsolicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. When the stream is instantiated because of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, the streamId from the request should be used; when a provider instantiates the stream with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} (e.g. Non-Interactive provider), a negative streamId should be used. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} functionality include  "rtr/rsslRefreshMsg.h"\par
The Refresh Message is used to provide an initial or subsequent data synchronization point. When used to respond to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, a solicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. If pushing out a content change to downstream applications, an unsolicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. When the stream is instantiated because of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, the streamId from the request should be used; when a provider instantiates the stream with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} (e.g. Non-Interactive provider), a negative streamId should be used. It provides an image of all existing data related to that item, and any additional information about such as the item's group and quality of service. In addition to providing information, this action can be used to establish a standard or private stream.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When responding to a batch request, each item in the batch receives its own {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}.\par
}See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRefreshMsg Creation Examples
\par}
{\tc\tcl2 \v RsslRefreshMsg Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslRefreshMsg and initialize\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 refreshMsg;\par
  \par
    // Use the clear function since it sets the msgClass and tend to perform better\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRefreshMsg}}}
(&refreshMsg);\par
\par
    // Populate RsslRefreshMsg with relevant information\par
    // Set flags to indicate complete, solicited refresh with qos and key.  \par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUF" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_SOLICITED}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_REFRESH_COMPLETE}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_MSG_KEY}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_QOS}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_CLEAR_CACHE}}}
;\par
\par
    // Populate this with standard header information\par
    // Since this is solicited, provider should use the streamId from the request being responded to\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10; \par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
\par
    // Populate message key information, typically matches info from request\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSO" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME_TYPE}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_SERVICE_ID}}}
;\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQM" }{}}{\fldrslt {\cs37\ul\cf2 serviceId}}}
 = 1;\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQO" }{}}{\fldrslt {\cs37\ul\cf2 nameType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSP" }{}}{\fldrslt {\cs37\ul\cf2 RDM_INSTRUMENT_NAME_TYPE_RIC}}}
;\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "TRI";\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 3;\par
\par
    // Populate quality of service, indicates the QoS being provided for this stream\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUM" }{}}{\fldrslt {\cs37\ul\cf2 qos}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 timeliness}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_REALTIME}}}
;\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUM" }{}}{\fldrslt {\cs37\ul\cf2 qos}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 rate}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TICK_BY_TICK}}}
;\par
\par
    // Use default group Id in this example\par
    // Populate state\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUN" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZL" }{}}{\fldrslt {\cs37\ul\cf2 streamState}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_OPEN}}}
;\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUN" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 dataState}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_OK}}}
;\par
    refreshMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUN" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZS" }{}}{\fldrslt {\cs37\ul\cf2 code}}}
 = RSSL_DATA_NONE;\par
\par
    // If content is pre-encoded, can set on refreshMsg.msgBase.encDataBody buffer and call rsslEncodeMsg().\par
    // If content is not pre-encoded, user can call rsslEncodeMsgInit(), encode content, and rsslEncodeMsgComplete().\par
}
\par}
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRefreshMsg Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslRefreshMsg Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUP" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} Helper and Utility functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRefreshMsg Structure, Initializers, and Flag values\par \pard\plain 
{\tc\tcl2 \v RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values}
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} is provided as an initial response or when an upstream source requires a data resynchronization point. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REFRESH_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_NONE}}}
 =  0x0000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_EXTENDED_HEADER}}}
 =  0x0001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_PERM_DATA}}}
 =  0x0002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_MSG_KEY}}}
 =  0x0008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_SEQ_NUM}}}
 =  0x0010, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_SOLICITED}}}
 =  0x0020, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_REFRESH_COMPLETE}}}
 =  0x0040, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_QOS}}}
 =  0x0080, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_CLEAR_CACHE}}}
 =  0x0100, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_DO_NOT_CACHE}}}
 =  0x0200, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_PRIVATE_STREAM}}}
 =  0x0400, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_POST_USER_INFO}}}
 =  0x0800, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_PART_NUM}}}
 =  0x1000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_REQ_MSG_KEY}}}
 =  0x2000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_QUALIFIED_STREAM}}}
 =  0x4000
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Refresh Message flags (RFMF = RefreshMsg Flag) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRefreshMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_REFRESH_MSG\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_INIT_REFRESH_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REFRESH_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
 \}}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Static clear function does not set RsslRefreshMsg::msgBase::msgClass, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRefreshMsg()}}} function does.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On larger structures, like messages, the clear functions tend to outperform the static initializer. It is recommended to use the clear function when initializing any messages. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRefreshMsg}}} \par
}}{
Definition at line 48 of file rsslRefreshMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslRefreshFlags\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RsslRefreshFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags}}}
}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_RFMF_NONE\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_NONE}
{\b {\i RSSL_RFMF_NONE{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0000) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} flags are present \par
}{\xe \v RSSL_RFMF_HAS_EXTENDED_HEADER\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_HAS_EXTENDED_HEADER}
{\b {\i RSSL_RFMF_HAS_EXTENDED_HEADER{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0001) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} has an extended header buffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVE" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg::extendedHeader}}}. \par
}{\xe \v RSSL_RFMF_HAS_PERM_DATA\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_HAS_PERM_DATA}
{\b {\i RSSL_RFMF_HAS_PERM_DATA{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0002) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} has permission authorization information, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVF" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg::permData}}}. \par
}{\xe \v RSSL_RFMF_HAS_MSG_KEY\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_HAS_MSG_KEY}
{\b {\i RSSL_RFMF_HAS_MSG_KEY{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0008) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} has a message key, contained in RsslRefreshMsg::msgBase::msgKey. \par
}{\xe \v RSSL_RFMF_HAS_SEQ_NUM\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_HAS_SEQ_NUM}
{\b {\i RSSL_RFMF_HAS_SEQ_NUM{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0010) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} has a sequence number, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg::seqNum}}}. \par
}{\xe \v RSSL_RFMF_SOLICITED\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_SOLICITED}
{\b {\i RSSL_RFMF_SOLICITED{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0020) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} is a solicited response to a consumer's request. \par
}{\xe \v RSSL_RFMF_REFRESH_COMPLETE\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_REFRESH_COMPLETE}
{\b {\i RSSL_RFMF_REFRESH_COMPLETE{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0040) Indicates that this is the final part of a refresh. This flag should be set on both single-part response messages, as well as the final message in a multi-part response message sequence. \par
}{\xe \v RSSL_RFMF_HAS_QOS\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_HAS_QOS}
{\b {\i RSSL_RFMF_HAS_QOS{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0080) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} has quality of service information, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUM" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg::qos}}}. \par
}{\xe \v RSSL_RFMF_CLEAR_CACHE\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_CLEAR_CACHE}
{\b {\i RSSL_RFMF_CLEAR_CACHE{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0100) Indicates that any cached header or payload information associated with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}'s item stream should be cleared. \par
}{\xe \v RSSL_RFMF_DO_NOT_CACHE\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_DO_NOT_CACHE}
{\b {\i RSSL_RFMF_DO_NOT_CACHE{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0200) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} is transient and should not be cached. \par
}{\xe \v RSSL_RFMF_PRIVATE_STREAM\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_PRIVATE_STREAM}
{\b {\i RSSL_RFMF_PRIVATE_STREAM{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0400) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} is an acknowledgement of a private stream request. Or, if RsslRefreshMsg::state::streamState's value is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_REDIRECTED}}}, the presence of this flag indicates that the current stream can only be opened as a private stream. \par
}{\xe \v RSSL_RFMF_HAS_POST_USER_INFO\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_HAS_POST_USER_INFO}
{\b {\i RSSL_RFMF_HAS_POST_USER_INFO{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0800) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} contains data posted by the user with the identifying information contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVH" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg::postUserInfo}}} \par
}{\xe \v RSSL_RFMF_HAS_PART_NUM\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_HAS_PART_NUM}
{\b {\i RSSL_RFMF_HAS_PART_NUM{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x1000) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} has a part number, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVI" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg::partNum}}}. \par
}{\xe \v RSSL_RFMF_HAS_REQ_MSG_KEY\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_HAS_REQ_MSG_KEY}
{\b {\i RSSL_RFMF_HAS_REQ_MSG_KEY{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x2000) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} has the original request's message key, contained in RsslRefreshMsg::reqMsgBase::msgKey \par
}{\xe \v RSSL_RFMF_QUALIFIED_STREAM\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:RSSL_RFMF_QUALIFIED_STREAM}
{\b {\i RSSL_RFMF_QUALIFIED_STREAM{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x4000) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} is an acknowledgement of a qualified stream request. \par
}}
\par
{
Definition at line 66 of file rsslRefreshMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearRefreshMsg\:RsslRefreshMsg Structure, Initializers, and Flag values}
{\xe \v RsslRefreshMsg Structure, Initializers, and Flag values\:rsslClearRefreshMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRefreshMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REFRESH_MSG}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearStatusMsg}}} \par
}}{
Definition at line 55 of file rsslRefreshMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRefreshMsg Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions}
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} Helper and Utility functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRefreshMsg Helper and Utility functions
\par}
{\tc\tcl2 \v RsslRefreshMsg Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b rsslRefreshMsgApplyHasQoS}\~ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVL" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasQos}}}
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b rsslRefreshMsgCheckHasQoS}\~ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVN" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasQos}}}
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyClearCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_CLEAR_CACHE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyDoNotCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_DO_NOT_CACHE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVR" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVT" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_PART_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVU" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVV" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_POST_USER_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVL" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_QOS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVW" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVX" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_PRIVATE_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVY" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_QUALIFIED_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyRefreshComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_REFRESH_COMPLETE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWA" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplySolicited}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_SOLICITED}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWB" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckClearCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_CLEAR_CACHE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWC" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckDoNotCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_DO_NOT_CACHE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWF" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_PART_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWG" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWH" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_POST_USER_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVN" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_QOS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWI" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_PRIVATE_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWK" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_QUALIFIED_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWL" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckRefreshComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_REFRESH_COMPLETE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWM" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckSolicited}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 *pRefreshMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RFMF_SOLICITED}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWN" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetRefreshCompleteFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the RSSL_RFMF_REFRESH_COMPLETE flag on an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWO" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetSolicitedFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the RSSL_RFMF_SOLICITED flag on an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWP" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetRefreshCompleteFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unset the RSSL_RFMF_REFRESH_COMPLETE flag on an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetSolicitedFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unset the RSSL_RFMF_SOLICITED flag on an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} buffer. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslRefreshMsgApplyClearCache\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyClearCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyClearCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 337 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyDoNotCache\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyDoNotCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyDoNotCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 347 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyHasExtendedHdr\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVR" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 255 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyHasMsgKey\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 275 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyHasPartNum\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyHasPartNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVT" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 295 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyHasPermData\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVU" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 265 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyHasPostUserInfo\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyHasPostUserInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVV" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 367 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyHasQos\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyHasQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVL" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 326 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyHasSeqNum\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVW" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 285 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyPrivateStream\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyPrivateStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVX" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 357 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyQualifiedStream\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyQualifiedStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVY" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 377 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplyRefreshComplete\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplyRefreshComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplyRefreshComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 316 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgApplySolicited\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgApplySolicited}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWA" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgApplySolicited}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
}{
Definition at line 306 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckClearCache\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckClearCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWB" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckClearCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 196 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckDoNotCache\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckDoNotCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWC" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckDoNotCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 208 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckHasExtendedHdr\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 100 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckHasMsgKey\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 124 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckHasPartNum\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckHasPartNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWF" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 148 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckHasPermData\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWG" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 112 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckHasPostUserInfo\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckHasPostUserInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWH" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 232 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckHasQos\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckHasQos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVN" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasQos}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 184 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckHasSeqNum\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWI" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 136 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckPrivateStream\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckPrivateStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 220 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckQualifiedStream\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckQualifiedStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWK" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 244 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckRefreshComplete\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckRefreshComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWL" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckRefreshComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 172 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslRefreshMsgCheckSolicited\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslRefreshMsgCheckSolicited}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWM" }{}}{\fldrslt {\cs37\ul\cf2 rsslRefreshMsgCheckSolicited}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 * {\i pRefreshMsg})}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pRefreshMsg} \cell }{Pointer to the refresh message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 160 of file rsslRefreshMsg.h.}\par
}
{\xe \v rsslSetRefreshCompleteFlag\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslSetRefreshCompleteFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWN" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetRefreshCompleteFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags}}} \par
}}}
{\xe \v rsslSetSolicitedFlag\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslSetSolicitedFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWO" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetSolicitedFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags}}} \par
}}}
{\xe \v rsslUnsetRefreshCompleteFlag\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslUnsetRefreshCompleteFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWP" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetRefreshCompleteFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags}}} \par
}}}
{\xe \v rsslUnsetSolicitedFlag\:RsslRefreshMsg Helper and Utility functions}
{\xe \v RsslRefreshMsg Helper and Utility functions\:rsslUnsetSolicitedFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetSolicitedFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslStatusMsg Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslStatusMsg Reference Group}
{\xe \v RsslStatusMsg Reference Group}
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Status Message is used to convey state information, permission change, or group Id change information on a stream. An interactive or non-interactive providing application can also close a stream with a status message. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} functionality include  "rtr/rsslStatusMsg.h"\par
The Status Message is used to convey or modify state information, a streams permission information, or a streams group Id information. An interactive or non-interactive providing application can also close a stream with a status message. Interactive and Non-Interactive Providers use the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} to close streams to downstream devices, both in conjunction with an initial request or at some point after the stream has been established. An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} can also be used to indicate successful establishment of a stream, even though the message may not contain any data - this can be useful when establishing a stream solely to exchange bi-directional {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} or to convey information about the success or failure of the establishment of a private stream.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid When responding to a batch request, an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} is used to respond to the batch stream. When sent with a OK/Closed state, this indicates the batch was received and is being processed; a Suspect/Closed stream indicates there was an issue with the batch request itself.\par
}See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslStatusMsg Creation Examples
\par}
{\tc\tcl2 \v RsslStatusMsg Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslStatusMsg and initialize\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 statusMsg;\par
  \par
    // Use the clear function since it sets the msgClass and tend to perform better\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearStatusMsg}}}
(&statusMsg);\par
\par
    // Populate RsslStatusMsg with relevant information\par
    // Set flags to indicate message has state\par
    statusMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWT" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_STATE}}}
;\par
\par
    // Populate this with standard header information\par
    statusMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWV" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10;\par
    statusMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWV" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    statusMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWV" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_NO_DATA}}}
;\par
\par
    // Populate state, indicate that item was already open on another stream\par
    statusMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWW" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZL" }{}}{\fldrslt {\cs37\ul\cf2 streamState}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_OPEN}}}
;\par
    statusMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWW" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 dataState}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DATA_SUSPECT}}}
;\par
    statusMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWW" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZS" }{}}{\fldrslt {\cs37\ul\cf2 code}}}
 = RSSL_DATA_ALREADY_OPEN;\par
    statusMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWW" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZU" }{}}{\fldrslt {\cs37\ul\cf2 text}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "Item already open on streamId 9";\par
    statusMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWW" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZU" }{}}{\fldrslt {\cs37\ul\cf2 text}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 31; \par
\par
    // Because content is RSSL_DT_NO_DATA in this example, application can just call rsslEncodeMsg().\par
}
\par}
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslStatusMsg Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslStatusMsg Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} Helper and Utility functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslStatusMsg Structure, Initializers, and Flag values\par \pard\plain 
{\tc\tcl2 \v RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values}
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} is used to convey state information, permission change, or group Id change information on a stream. An interactive or non-interactive providing application can also close a stream with a status message. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATUS_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_NONE}}}
 =  0x000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_EXTENDED_HEADER}}}
 =  0x001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_PERM_DATA}}}
 =  0x002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_MSG_KEY}}}
 =  0x008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_GROUP_ID}}}
 =  0x010, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_STATE}}}
 =  0x020, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_CLEAR_CACHE}}}
 =  0x040, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_PRIVATE_STREAM}}}
 =  0x080, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_POST_USER_INFO}}}
 =  0x100, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_REQ_MSG_KEY}}}
 =  0x200, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_QUALIFIED_STREAM}}}
 =  0x400
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Status Message flags (STMF = StatusMsg Flag) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearStatusMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_STATUS_MSG\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_INIT_STATUS_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATUS_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
\}}}
\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Static clear function does not set RsslStatusMsg::msgBase::msgClass, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearStatusMsg()}}} function does.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On larger structures, like messages, the clear functions tend to outperform the static initializer. It is recommended to use the clear function when initializing any messages. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearStatusMsg}}} \par
}}{
Definition at line 45 of file rsslStatusMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslStatusFlags\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RsslStatusFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusFlags}}}
}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_STMF_NONE\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_NONE}
{\b {\i RSSL_STMF_NONE{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x000) No RsslStateMsg flags are present \par
}{\xe \v RSSL_STMF_HAS_EXTENDED_HEADER\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_HAS_EXTENDED_HEADER}
{\b {\i RSSL_STMF_HAS_EXTENDED_HEADER{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x001) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} has an extended header buffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXM" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg::extendedHeader}}}. \par
}{\xe \v RSSL_STMF_HAS_PERM_DATA\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_HAS_PERM_DATA}
{\b {\i RSSL_STMF_HAS_PERM_DATA{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x002) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} has permission data, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXN" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg::permData}}}. \par
}{\xe \v RSSL_STMF_HAS_MSG_KEY\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_HAS_MSG_KEY}
{\b {\i RSSL_STMF_HAS_MSG_KEY{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x008) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} has a msgKey, contained in RsslStatusMsg::msgBase::msgKey. \par
}{\xe \v RSSL_STMF_HAS_GROUP_ID\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_HAS_GROUP_ID}
{\b {\i RSSL_STMF_HAS_GROUP_ID{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x010) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} has a GroupId, contained in RsslStatusMsg::GroupId \par
}{\xe \v RSSL_STMF_HAS_STATE\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_HAS_STATE}
{\b {\i RSSL_STMF_HAS_STATE{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x020) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} has stream or group state information, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWW" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg::state}}}. \par
}{\xe \v RSSL_STMF_CLEAR_CACHE\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_CLEAR_CACHE}
{\b {\i RSSL_STMF_CLEAR_CACHE{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x040) Indicates that all cached header or payload data associated with this item stream should be cleared. \par
}{\xe \v RSSL_STMF_PRIVATE_STREAM\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_PRIVATE_STREAM}
{\b {\i RSSL_STMF_PRIVATE_STREAM{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x080) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} is an acknowledgement of a private stream establishment. Or, if RsslStatusMsg::state::streamState's value is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STREAM_REDIRECTED}}}, the presence of this flag indicates that the current stream can only be opened as a private stream. \par
}{\xe \v RSSL_STMF_HAS_POST_USER_INFO\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_HAS_POST_USER_INFO}
{\b {\i RSSL_STMF_HAS_POST_USER_INFO{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x100) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} has post user info, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXO" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg::postUserInfo}}}. \par
}{\xe \v RSSL_STMF_HAS_REQ_MSG_KEY\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_HAS_REQ_MSG_KEY}
{\b {\i RSSL_STMF_HAS_REQ_MSG_KEY{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x200) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} has the original request's message key, contained in RsslStatusMsg::msgBase::reqMsgKey \par
}{\xe \v RSSL_STMF_QUALIFIED_STREAM\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:RSSL_STMF_QUALIFIED_STREAM}
{\b {\i RSSL_STMF_QUALIFIED_STREAM{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x400) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} is an acknowledgement of a qualified stream establishment. \par
}}
\par
{
Definition at line 63 of file rsslStatusMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearStatusMsg\:RsslStatusMsg Structure, Initializers, and Flag values}
{\xe \v RsslStatusMsg Structure, Initializers, and Flag values\:rsslClearStatusMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearStatusMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATUS_MSG}}} \par
}}{
Definition at line 52 of file rsslStatusMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslStatusMsg Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions}
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} Helper and Utility functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslStatusMsg Helper and Utility functions
\par}
{\tc\tcl2 \v RsslStatusMsg Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyClearCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_CLEAR_CACHE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXR" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXS" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasGroupId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_GROUP_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXT" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXU" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXV" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_POST_USER_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXW" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_STATE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXX" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_PRIVATE_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXY" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_QUALIFIED_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckClearCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_CLEAR_CACHE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYA" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYB" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasGroupId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_GROUP_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYD" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_POST_USER_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYF" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_HAS_STATE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_PRIVATE_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYH" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 *pStatusMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_STMF_QUALIFIED_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslStatusMsgApplyClearCache\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgApplyClearCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyClearCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
}{
Definition at line 251 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgApplyHasExtendedHdr\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgApplyHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXR" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
}{
Definition at line 201 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgApplyHasGroupId\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgApplyHasGroupId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXS" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasGroupId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
}{
Definition at line 231 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgApplyHasMsgKey\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgApplyHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXT" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
}{
Definition at line 221 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgApplyHasPermData\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgApplyHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXU" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
}{
Definition at line 211 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgApplyHasPostUserInfo\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgApplyHasPostUserInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXV" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
}{
Definition at line 271 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgApplyHasState\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgApplyHasState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXW" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyHasState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
}{
Definition at line 241 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgApplyPrivateStream\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgApplyPrivateStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXX" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
}{
Definition at line 261 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgApplyQualifiedStream\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgApplyQualifiedStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXY" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgApplyQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
}{
Definition at line 281 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgCheckClearCache\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgCheckClearCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckClearCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 153 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgCheckHasExtendedHdr\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgCheckHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYA" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 93 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgCheckHasGroupId\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgCheckHasGroupId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYB" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasGroupId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 129 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgCheckHasMsgKey\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgCheckHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 117 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgCheckHasPermData\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgCheckHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYD" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 105 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgCheckHasPostUserInfo\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgCheckHasPostUserInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 177 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgCheckHasState\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgCheckHasState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYF" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckHasState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 141 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgCheckPrivateStream\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgCheckPrivateStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 165 of file rsslStatusMsg.h.}\par
}
{\xe \v rsslStatusMsgCheckQualifiedStream\:RsslStatusMsg Helper and Utility functions}
{\xe \v RsslStatusMsg Helper and Utility functions\:rsslStatusMsgCheckQualifiedStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYH" }{}}{\fldrslt {\cs37\ul\cf2 rsslStatusMsgCheckQualifiedStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 * {\i pStatusMsg})}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pStatusMsg} \cell }{Pointer to the status message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 189 of file rsslStatusMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUpdateMsg Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslUpdateMsg Reference Group}
{\xe \v RsslUpdateMsg Reference Group}
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Update Message is used to provide content change on an open stream. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} functionality include  "rtr/rsslUpdateMsg.h"\par
The Update Message is used by Interactive and Non-Interactive Providers to convey changes to data associated with an item stream. When streaming, update messages typically flow after an initial refresh has been delivered. Some providers can aggregate the information from multiple update messages into a single update message. This is known as conflation, and typically occurs if a conflated quality of service is requested, a stream is paused, or a consuming application is unable to keep up with the data rates associated with the stream.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Typically updates are delivered when a stream is open as streaming ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQW" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::RSSL_RQMF_STREAMING}}}), however they can also be seen between the initial and final part of a multi-part {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}. Applications should be prepared to handle updates, even when requesting content as non-streaming.\par
}See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUpdateMsg Creation Examples
\par}
{\tc\tcl2 \v RsslUpdateMsg Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslUpdateMsg and initialize\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 updateMsg;\par
  \par
    // Use the clear function since it sets the msgClass and tend to perform better\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearUpdateMsg}}}
(&updateMsg);\par
\par
    // Populate RsslUpdateMsg with relevant information\par
    // Set flags to indicate update should not be conflated\par
    updateMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYK" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_CONFLATE}}}
;\par
\par
    // Populate this with standard header information\par
    updateMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYM" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10;\par
    updateMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYM" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    updateMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYM" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
\par
    // Populate the update type - values for update types are typically provided at a domain model level, see rsslRDM.h.\par
    updateMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYN" }{}}{\fldrslt {\cs37\ul\cf2 updateType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYO" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_TRADE}}}
;\par
\par
    // If content is pre-encoded, can set on refreshMsg.msgBase.encDataBody buffer and call rsslEncodeMsg().\par
    // If content is not pre-encoded, user can call rsslEncodeMsgInit(), encode content, and rsslEncodeMsgComplete().\par
}
\par}
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUpdateMsg Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslUpdateMsg Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYR" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} Helper and Utility functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUpdateMsg Structure, Initializers, and Flag values\par \pard\plain 
{\tc\tcl2 \v RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values}
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} is used by providers(both interactive and non-interactive) to convey changes to data associated with an item stream. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_UPDATE_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYT" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_NONE}}}
 =  0x000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_EXTENDED_HEADER}}}
 =  0x001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_PERM_DATA}}}
 =  0x002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_MSG_KEY}}}
 =  0x008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_SEQ_NUM}}}
 =  0x010, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_CONF_INFO}}}
 =  0x020, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_CACHE}}}
 =  0x040, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_CONFLATE}}}
 =  0x080, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_RIPPLE}}}
 =  0x100, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_POST_USER_INFO}}}
 =  0x200, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DISCARDABLE}}}
 =  0x400
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Update Message flags (UPMF = UpdateMsg Flag) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearUpdateMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_UPDATE_MSG\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_INIT_UPDATE_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_UPDATE_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Static clear function does not set RsslUpdateMsg::msgBase::msgClass, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearUpdateMsg()}}} function does.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On larger structures, like messages, the clear functions tend to outperform the static initializer. It is recommended to use the clear function when initializing any messages. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearUpdateMsg}}} \par
}}{
Definition at line 45 of file rsslUpdateMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslUpdateFlags\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RsslUpdateFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYT" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateFlags}}}
}}
\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_UPMF_NONE\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_NONE}
{\b {\i RSSL_UPMF_NONE{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x000) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} flags are present \par
}{\xe \v RSSL_UPMF_HAS_EXTENDED_HEADER\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_HAS_EXTENDED_HEADER}
{\b {\i RSSL_UPMF_HAS_EXTENDED_HEADER{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x001) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} has an extended header buffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZE" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg::extendedHeader}}}. \par
}{\xe \v RSSL_UPMF_HAS_PERM_DATA\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_HAS_PERM_DATA}
{\b {\i RSSL_UPMF_HAS_PERM_DATA{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x002) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} has permission information, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg::permData}}}. \par
}{\xe \v RSSL_UPMF_HAS_MSG_KEY\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_HAS_MSG_KEY}
{\b {\i RSSL_UPMF_HAS_MSG_KEY{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x008) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} has an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} included in the update, contained in RsslUpdateMsg::msgBase::msgKey \par
}{\xe \v RSSL_UPMF_HAS_SEQ_NUM\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_HAS_SEQ_NUM}
{\b {\i RSSL_UPMF_HAS_SEQ_NUM{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x010) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} contains a sequence number, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg::seqNum}}}. \par
}{\xe \v RSSL_UPMF_HAS_CONF_INFO\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_HAS_CONF_INFO}
{\b {\i RSSL_UPMF_HAS_CONF_INFO{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x020) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} contains conflation information. This information is contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZH" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg::conflationCount}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZI" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg::conflationTime}}}. \par
}{\xe \v RSSL_UPMF_DO_NOT_CACHE\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_DO_NOT_CACHE}
{\b {\i RSSL_UPMF_DO_NOT_CACHE{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x040) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} is transient and that this message's payload information should not be cached \par
}{\xe \v RSSL_UPMF_DO_NOT_CONFLATE\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_DO_NOT_CONFLATE}
{\b {\i RSSL_UPMF_DO_NOT_CONFLATE{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x080) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}'s payload information should not be conflated or aggregated. \par
}{\xe \v RSSL_UPMF_DO_NOT_RIPPLE\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_DO_NOT_RIPPLE}
{\b {\i RSSL_UPMF_DO_NOT_RIPPLE{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x100) Indicates that rippling should not be applied to this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}'s contents. \par
}{\xe \v RSSL_UPMF_HAS_POST_USER_INFO\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_HAS_POST_USER_INFO}
{\b {\i RSSL_UPMF_HAS_POST_USER_INFO{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x200) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} has been posted by the user identified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg::postUserInfo}}}. \par
}{\xe \v RSSL_UPMF_DISCARDABLE\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:RSSL_UPMF_DISCARDABLE}
{\b {\i RSSL_UPMF_DISCARDABLE{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x400) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} can be discarded. This flag is commonly used with options that have no open interest. \par
}}
\par
{
Definition at line 63 of file rsslUpdateMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearUpdateMsg\:RsslUpdateMsg Structure, Initializers, and Flag values}
{\xe \v RsslUpdateMsg Structure, Initializers, and Flag values\:rsslClearUpdateMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearUpdateMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_UPDATE_MSG}}} \par
}}{
Definition at line 52 of file rsslUpdateMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUpdateMsg Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions}
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} Helper and Utility functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUpdateMsg Helper and Utility functions
\par}
{\tc\tcl2 \v RsslUpdateMsg Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZL" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyDiscardable}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DISCARDABLE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZM" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyDoNotCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_CACHE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZN" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyDoNotConflate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_CONFLATE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZO" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyDoNotRipple}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_RIPPLE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZP" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasConfInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_CONF_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZR" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZS" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZT" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_POST_USER_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZU" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZV" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckDoNotCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_CACHE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZW" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckDoNotConflate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_CONFLATE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZX" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckDoNotRipple}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_RIPPLE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZY" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasConfInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_CONF_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasDiscardable}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DISCARDABLE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAA" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAB" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAC" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAD" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_POST_USER_INFO}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAE" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 *pUpdateMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslUpdateMsgApplyDiscardable\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyDiscardable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZL" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyDiscardable}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 303 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgApplyDoNotCache\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyDoNotCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZM" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyDoNotCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 263 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgApplyDoNotConflate\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyDoNotConflate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZN" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyDoNotConflate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 273 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgApplyDoNotRipple\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyDoNotRipple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZO" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyDoNotRipple}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 283 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgApplyHasConfInfo\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyHasConfInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZP" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasConfInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 253 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgApplyHasExtendedHdr\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 213 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgApplyHasMsgKey\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZR" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 233 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgApplyHasPermData\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZS" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 223 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgApplyHasPostUserInfo\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyHasPostUserInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZT" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 293 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgApplyHasSeqNum\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgApplyHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZU" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
}{
Definition at line 243 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckDoNotCache\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckDoNotCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZV" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckDoNotCache}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 154 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckDoNotConflate\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckDoNotConflate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZW" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckDoNotConflate}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 166 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckDoNotRipple\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckDoNotRipple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZX" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckDoNotRipple}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 177 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckHasConfInfo\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckHasConfInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZY" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasConfInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 142 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckHasDiscardable\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckHasDiscardable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasDiscardable}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 201 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckHasExtendedHdr\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAA" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 94 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckHasMsgKey\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAB" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 118 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckHasPermData\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAC" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 106 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckHasPostUserInfo\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckHasPostUserInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAD" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 189 of file rsslUpdateMsg.h.}\par
}
{\xe \v rsslUpdateMsgCheckHasSeqNum\:RsslUpdateMsg Helper and Utility functions}
{\xe \v RsslUpdateMsg Helper and Utility functions\:rsslUpdateMsgCheckHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAE" }{}}{\fldrslt {\cs37\ul\cf2 rsslUpdateMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 * {\i pUpdateMsg})}}
\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pUpdateMsg} \cell }{Pointer to the update message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 130 of file rsslUpdateMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslCloseMsg Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslCloseMsg Reference Group}
{\xe \v RsslCloseMsg Reference Group}
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Close Message is used to indicate that a consuming application is no longer interested in content on the stream being closed. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} functionality include  "rtr/rsslCloseMsg.h"\par
The Close Message is used to indicate that an OMM Consumer application is no longer interested in content on the stream. The stream should be closed as a result and no further messages should be received once the close operation is fully complete throughout the system.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid If the application wishes to get an acknowledgment when the upstream component has closed the stream (e.g. a 'completion event'), the close allows the user to ask for this by specifying {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAF" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg::flags}}} with RsslCloseFlags::RSSL_CLFM_ACK.\par
}See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslCloseMsg Creation Examples
\par}
{\tc\tcl2 \v RsslCloseMsg Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslCloseMsg and initialize\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 closeMsg;\par
  \par
    // Use the clear function since it sets the msgClass and tend to perform better\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearCloseMsg}}}
(&closeMsg);\par
\par
    // Populate RsslCloseMsg with relevant information\par
    // Set flags to indicate application would like ack when closed\par
    closeMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAF" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_ACK}}}
;\par
\par
    // Populate this with standard header information\par
    closeMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAJ" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10;\par
    closeMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAJ" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    closeMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAJ" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_NO_DATA}}}
;\par
\par
\par
    // Because content is RSSL_DT_NO_DATA in this example, application can just call rsslEncodeMsg(). \par
}
\par}
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslCloseMsg Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslCloseMsg Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAL" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAM" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} Helper and Utility functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslCloseMsg Structure, Initializers, and Flag values\par \pard\plain 
{\tc\tcl2 \v RsslCloseMsg Structure, Initializers, and Flag values}
{\xe \v RsslCloseMsg Structure, Initializers, and Flag values}
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} is used to indicate that a consuming application is no longer interested in content on the stream being closed. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_CLOSE_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAO" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_HAS_EXTENDED_HEADER}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_ACK}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_HAS_BATCH}}}
 =  0x04
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Close Message flags (CLMF = CloseMsg Flags) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearCloseMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 *pCloseMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_CLOSE_MSG\:RsslCloseMsg Structure, Initializers, and Flag values}
{\xe \v RsslCloseMsg Structure, Initializers, and Flag values\:RSSL_INIT_CLOSE_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_CLOSE_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Static clear function does not set RsslCloseMsg::msgBase::msgClass, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearCloseMsg()}}} function does.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On larger structures, like messages, the clear functions tend to outperform the static initializer. It is recommended to use the clear function when initializing any messages. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearCloseMsg}}} \par
}}{
Definition at line 36 of file rsslCloseMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslCloseFlags\:RsslCloseMsg Structure, Initializers, and Flag values}
{\xe \v RsslCloseMsg Structure, Initializers, and Flag values\:RsslCloseFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAO" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseFlags}}}
}}
\par
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_CLMF_NONE\:RsslCloseMsg Structure, Initializers, and Flag values}
{\xe \v RsslCloseMsg Structure, Initializers, and Flag values\:RSSL_CLMF_NONE}
{\b {\i RSSL_CLMF_NONE{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} flags are present. \par
}{\xe \v RSSL_CLMF_HAS_EXTENDED_HEADER\:RsslCloseMsg Structure, Initializers, and Flag values}
{\xe \v RsslCloseMsg Structure, Initializers, and Flag values\:RSSL_CLMF_HAS_EXTENDED_HEADER}
{\b {\i RSSL_CLMF_HAS_EXTENDED_HEADER{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} has an extended header bffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAS" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg::extendedHeader}}}. \par
}{\xe \v RSSL_CLMF_ACK\:RsslCloseMsg Structure, Initializers, and Flag values}
{\xe \v RsslCloseMsg Structure, Initializers, and Flag values\:RSSL_CLMF_ACK}
{\b {\i RSSL_CLMF_ACK{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) Indicates that the consumer that is sending this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} wants the provider to send an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} to indicate that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} has been received, processed correctly, and the stream has been properly closed. \par
}{\xe \v RSSL_CLMF_HAS_BATCH\:RsslCloseMsg Structure, Initializers, and Flag values}
{\xe \v RsslCloseMsg Structure, Initializers, and Flag values\:RSSL_CLMF_HAS_BATCH}
{\b {\i RSSL_CLMF_HAS_BATCH{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) Support batching with header flags. \par
}}
\par
{
Definition at line 54 of file rsslCloseMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearCloseMsg\:RsslCloseMsg Structure, Initializers, and Flag values}
{\xe \v RsslCloseMsg Structure, Initializers, and Flag values\:rsslClearCloseMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearCloseMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 * {\i pCloseMsg})}}
\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_CLOSE_MSG}}} \par
}}{
Definition at line 43 of file rsslCloseMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslCloseMsg Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslCloseMsg Helper and Utility functions}
{\xe \v RsslCloseMsg Helper and Utility functions}
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} Helper and Utility functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslCloseMsg Helper and Utility functions
\par}
{\tc\tcl2 \v RsslCloseMsg Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAU" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgCheckAck}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 *pCloseMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_ACK}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAV" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgCheckHasBatch}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 *pCloseMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_HAS_BATCH}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAW" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 *pCloseMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAX" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgSetAck}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 *pCloseMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_ACK}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAY" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgSetHasBatch}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 *pCloseMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_HAS_BATCH}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgSetHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 *pCloseMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CLMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslCloseMsgCheckAck\:RsslCloseMsg Helper and Utility functions}
{\xe \v RsslCloseMsg Helper and Utility functions\:rsslCloseMsgCheckAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAU" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgCheckAck}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 * {\i pCloseMsg})}}
\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pCloseMsg} \cell }{Pointer to the close message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 90 of file rsslCloseMsg.h.}\par
}
{\xe \v rsslCloseMsgCheckHasBatch\:RsslCloseMsg Helper and Utility functions}
{\xe \v RsslCloseMsg Helper and Utility functions\:rsslCloseMsgCheckHasBatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAV" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgCheckHasBatch}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 * {\i pCloseMsg})}}
\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pCloseMsg} \cell }{Pointer to the close message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 102 of file rsslCloseMsg.h.}\par
}
{\xe \v rsslCloseMsgCheckHasExtendedHdr\:RsslCloseMsg Helper and Utility functions}
{\xe \v RsslCloseMsg Helper and Utility functions\:rsslCloseMsgCheckHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAW" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 * {\i pCloseMsg})}}
\par
{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pCloseMsg} \cell }{Pointer to the close message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 78 of file rsslCloseMsg.h.}\par
}
{\xe \v rsslCloseMsgSetAck\:RsslCloseMsg Helper and Utility functions}
{\xe \v RsslCloseMsg Helper and Utility functions\:rsslCloseMsgSetAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAX" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgSetAck}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 * {\i pCloseMsg})}}
\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pCloseMsg} \cell }{Pointer to the close message. \cell }
{\row }
}
}{
Definition at line 123 of file rsslCloseMsg.h.}\par
}
{\xe \v rsslCloseMsgSetHasBatch\:RsslCloseMsg Helper and Utility functions}
{\xe \v RsslCloseMsg Helper and Utility functions\:rsslCloseMsgSetHasBatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAY" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgSetHasBatch}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 * {\i pCloseMsg})}}
\par
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pCloseMsg} \cell }{Pointer to the close message. \cell }
{\row }
}
}{
Definition at line 133 of file rsslCloseMsg.h.}\par
}
{\xe \v rsslCloseMsgSetHasExtendedHdr\:RsslCloseMsg Helper and Utility functions}
{\xe \v RsslCloseMsg Helper and Utility functions\:rsslCloseMsgSetHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseMsgSetHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 * {\i pCloseMsg})}}
\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pCloseMsg} \cell }{Pointer to the close message. \cell }
{\row }
}
}{
Definition at line 113 of file rsslCloseMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostMsg Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslPostMsg Reference Group}
{\xe \v RsslPostMsg Reference Group}
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Post Message is used to contribute content from a consumer into the platform. The post message payload can contain another OMM message, OMM container, or other opaque content. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} functionality include  "rtr/rsslPostMsg.h"\par
The Post Message allows OMM Consumer applications to push and contribute content to upstream components. The post message payload can contain another OMM message, OMM container, or other opaque content. This information can be applied to an Enterprise Platform cache or routed further upstream to the source of data. Once received, the upstream components can republish data to downstream consumers. Post messages can be routed along a specific item stream, referred to as on-stream posting, or along a user\'92s Login stream, referred to as off-stream posting. An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} can contain any Transport API container type, including other messages. User identification information can be associated with a post message and can be provided along with the content that was posted.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid If the application wishes to get an acknowledgment for its posted content, it can specify the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBA" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg::flags}}} with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBB" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags::RSSL_PSMF_ACK}}}.\par
}See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostUserInfo structure
\par}
{\tc\tcl2 \v RsslPostUserInfo structure}
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} is used to identify the user that has posted a message. This is used in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}.\par}
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostMsg Creation Examples
\par}
{\tc\tcl2 \v RsslPostMsg Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslPostMsg and initialize\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 postMsg;\par
  \par
    // Use the clear function since it sets the msgClass and tend to perform better\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearPostMsg}}}
(&postMsg);\par
\par
    // Populate RsslPostMsg with relevant information\par
    // Set flags to indicate application would like ack when posted content succeeds\par
    // Indicate that it is complete and has a post Id\par
    postMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBA" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_ACK}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_POST_ID}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_POST_COMPLETE}}}
;\par
\par
    // Populate this with standard header information\par
    postMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10;\par
    postMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    postMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MSG}}}
;  // house a message in the post message\par
\par
    // Populate other post message members\par
    postMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBJ" }{}}{\fldrslt {\cs37\ul\cf2 postId}}}
 = 520;\par
    // Populate post user info, used to identify user that posted content.  \par
    // Should include IP address of machine running app and user id or pid\par
    postMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBK" }{}}{\fldrslt {\cs37\ul\cf2 postUserInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBL" }{}}{\fldrslt {\cs37\ul\cf2 postUserId}}}
 = getpid(); \par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBM" }{}}{\fldrslt {\cs37\ul\cf2 rsslIPAddrStringToUInt}}}
("192.0.1.10", &postMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBK" }{}}{\fldrslt {\cs37\ul\cf2 postUserInfo}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBN" }{}}{\fldrslt {\cs37\ul\cf2 postUserAddr}}}
);\par
\par
\par
    // If we are doing on-stream posting, we do not need the key; when absent it is inferred from the stream being used to post.\par
    // If off-stream posting, RsslMsgKey is required to identify the item.\par
\par
    // If content is pre-encoded, can set on refreshMsg.msgBase.encDataBody buffer and call rsslEncodeMsg().\par
    // If content is not pre-encoded, user can call rsslEncodeMsgInit(), encode content, and rsslEncodeMsgComplete().\par
}
\par}
{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostMsg Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslPostMsg Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBP" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} Helper and Utility functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBR" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo Structure and Initializers}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBS" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} Helper and Utility functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostMsg Structure, Initializers, and Flag values\par \pard\plain 
{\tc\tcl2 \v RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values}
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} is used to contribute content from a consumer into the platform. The post message payload can contain another OMM message, OMM container, or other opaque content. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Post Message initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBU" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_NONE}}}
 =  0x000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_EXTENDED_HEADER}}}
 =  0x001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_POST_ID}}}
 =  0x002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_MSG_KEY}}}
 =  0x004, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_SEQ_NUM}}}
 =  0x008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_POST_COMPLETE}}}
 =  0x020, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_ACK}}}
 =  0x040, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_PERM_DATA}}}
 =  0x080, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_PART_NUM}}}
 =  0x100, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_POST_USER_RIGHTS}}}
 =  0x200
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Post Message flags (PSMF - PostMsg Flag) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCC" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserRights}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSUR_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSUR_CREATE}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSUR_DELETE}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSUR_MODIFY_PERM}}}
 =  0x04
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Post User Rights values (PSUR - Post User Rights). These can be combined to allow for multiple rights. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearPostMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_POST_MSG\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_INIT_POST_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearPostMsg}}} \par
}}{
Definition at line 41 of file rsslPostMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslPostFlags\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RsslPostFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBU" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags}}}
}}
\par
{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_PSMF_NONE\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_NONE}
{\b {\i RSSL_PSMF_NONE{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x000) No {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} flags are present \par
}{\xe \v RSSL_PSMF_HAS_EXTENDED_HEADER\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_HAS_EXTENDED_HEADER}
{\b {\i RSSL_PSMF_HAS_EXTENDED_HEADER{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x001) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} has an extended header buffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCH" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg::extendedHeader}}}. \par
}{\xe \v RSSL_PSMF_HAS_POST_ID\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_HAS_POST_ID}
{\b {\i RSSL_PSMF_HAS_POST_ID{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x002) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} has a Post ID, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg::postId}}}. \par
}{\xe \v RSSL_PSMF_HAS_MSG_KEY\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_HAS_MSG_KEY}
{\b {\i RSSL_PSMF_HAS_MSG_KEY{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x004) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} has a message key, contained in RsslPostMsg::msgBase::msgKey. \par
}{\xe \v RSSL_PSMF_HAS_SEQ_NUM\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_HAS_SEQ_NUM}
{\b {\i RSSL_PSMF_HAS_SEQ_NUM{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x008) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} has a sequence number, contained in RsslPostMsg:: \par
}{\xe \v RSSL_PSMF_POST_COMPLETE\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_POST_COMPLETE}
{\b {\i RSSL_PSMF_POST_COMPLETE{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x020) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} is the final part of the post message. This flag should also be set on single-part post messages, as well as the final message in a multi-part {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} sequence. \par
}{\xe \v RSSL_PSMF_ACK\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_ACK}
{\b {\i RSSL_PSMF_ACK{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x040) Indicates that the provider receiving this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} should send an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} to indicate that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} has been received and processed. The provider must include the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg::postId}}} in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}'s {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCI" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg::ackId}}}. \par
}{\xe \v RSSL_PSMF_HAS_PERM_DATA\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_HAS_PERM_DATA}
{\b {\i RSSL_PSMF_HAS_PERM_DATA{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x080) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} has permission authorization data, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg::permData}}}. \par
}{\xe \v RSSL_PSMF_HAS_PART_NUM\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_HAS_PART_NUM}
{\b {\i RSSL_PSMF_HAS_PART_NUM{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x100) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} has a part number, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg::partNum}}}. \par
}{\xe \v RSSL_PSMF_HAS_POST_USER_RIGHTS\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSMF_HAS_POST_USER_RIGHTS}
{\b {\i RSSL_PSMF_HAS_POST_USER_RIGHTS{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x200) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} has post user rights, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCL" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg::postUserRights}}}. \par
}}
\par
{
Definition at line 60 of file rsslPostMsg.h.}\par
}
{\xe \v RsslPostUserRights\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RsslPostUserRights}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCC" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserRights}}}
}}
\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_PSUR_NONE\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSUR_NONE}
{\b {\i RSSL_PSUR_NONE{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No user rights \par
}{\xe \v RSSL_PSUR_CREATE\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSUR_CREATE}
{\b {\i RSSL_PSUR_CREATE{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) User is allowed to create records in cache with this post \par
}{\xe \v RSSL_PSUR_DELETE\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSUR_DELETE}
{\b {\i RSSL_PSUR_DELETE{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) User is allowed to delete/remove records from cache with this post \par
}{\xe \v RSSL_PSUR_MODIFY_PERM\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:RSSL_PSUR_MODIFY_PERM}
{\b {\i RSSL_PSUR_MODIFY_PERM{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) User is allowed to modify the permData for records already in cache with this post \par
}}
\par
{
Definition at line 78 of file rsslPostMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearPostMsg\:RsslPostMsg Structure, Initializers, and Flag values}
{\xe \v RsslPostMsg Structure, Initializers, and Flag values\:rsslClearPostMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearPostMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_MSG}}} \par
}}{
Definition at line 48 of file rsslPostMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostMsg Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions}
{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} Helper and Utility functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostMsg Helper and Utility functions
\par}
{\tc\tcl2 \v RsslPostMsg Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCN" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyAck}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_ACK}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCO" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCP" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_PART_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCR" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCS" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasPostId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_POST_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCT" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasPostUserRights}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_POST_USER_RIGHTS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCU" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCV" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyPostComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_POST_COMPLETE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCW" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckAck}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_POST_COMPLETE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCX" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCY" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_PART_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDA" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDB" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasPostId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_POST_ID}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDC" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasPostUserRights}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_POST_USER_RIGHTS}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDD" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDE" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckPostComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 *pPostMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PSMF_POST_COMPLETE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslPostMsgApplyAck\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgApplyAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCN" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyAck}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the close message. \cell }
{\row }
}
}{
Definition at line 278 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgApplyHasExtendedHdr\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgApplyHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCO" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
}{
Definition at line 208 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgApplyHasMsgKey\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgApplyHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCP" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
}{
Definition at line 228 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgApplyHasPartNum\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgApplyHasPartNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
}{
Definition at line 248 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgApplyHasPermData\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgApplyHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCR" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
}{
Definition at line 288 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgApplyHasPostId\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgApplyHasPostId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCS" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasPostId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
}{
Definition at line 218 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgApplyHasPostUserRights\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgApplyHasPostUserRights}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCT" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasPostUserRights}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
}{
Definition at line 258 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgApplyHasSeqNum\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgApplyHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCU" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
}{
Definition at line 238 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgApplyPostComplete\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgApplyPostComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCV" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgApplyPostComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
}{
Definition at line 268 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgCheckAck\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgCheckAck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCW" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckAck}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the close message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 185 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgCheckHasExtendedHdr\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgCheckHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCX" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 101 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgCheckHasMsgKey\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgCheckHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCY" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 125 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgCheckHasPartNum\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgCheckHasPartNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 149 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgCheckHasPermData\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgCheckHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDA" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 197 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgCheckHasPostId\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgCheckHasPostId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDB" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasPostId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 113 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgCheckHasPostUserRights\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgCheckHasPostUserRights}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDC" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasPostUserRights}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 161 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgCheckHasSeqNum\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgCheckHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDD" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 137 of file rsslPostMsg.h.}\par
}
{\xe \v rsslPostMsgCheckPostComplete\:RsslPostMsg Helper and Utility functions}
{\xe \v RsslPostMsg Helper and Utility functions\:rsslPostMsgCheckPostComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDE" }{}}{\fldrslt {\cs37\ul\cf2 rsslPostMsgCheckPostComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 * {\i pPostMsg})}}
\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pPostMsg} \cell }{Pointer to the post message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 173 of file rsslPostMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostUserInfo Structure and Initializers\par \pard\plain 
{\tc\tcl2 \v RsslPostUserInfo Structure and Initializers}
{\xe \v RsslPostUserInfo Structure and Initializers}
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} is used to identify the user that has posted a message. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
\~ \{ 0, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static Initializer for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}}
 *pPostUserInfo)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears RSSL Post User Info. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_POST_USER_INFO\:RsslPostUserInfo Structure and Initializers}
{\xe \v RsslPostUserInfo Structure and Initializers\:RSSL_INIT_POST_USER_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}
\~ \{ 0, 0 \}}}
\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} \par
}}{
Definition at line 127 of file rsslMsgBase.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearPostUserInfo\:RsslPostUserInfo Structure and Initializers}
{\xe \v RsslPostUserInfo Structure and Initializers\:rsslClearPostUserInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearPostUserInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}}
 * {\i pPostUserInfo})}}
\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} \par
}}{
Definition at line 133 of file rsslMsgBase.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostUserInfo Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslPostUserInfo Helper and Utility functions}
{\xe \v RsslPostUserInfo Helper and Utility functions}
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} Helper and Utility functions. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBM" }{}}{\fldrslt {\cs37\ul\cf2 rsslIPAddrStringToUInt}}}
 (const char *pAddrString, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 *pAddrUInt)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts dotted-decimal IP address string(e.g. "127.0.0.1") to integer equivalent. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDG" }{}}{\fldrslt {\cs37\ul\cf2 rsslIPAddrUIntToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 addrUInt, char *pAddrString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts IPv4 address in integer format to string equivalent. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslIPAddrStringToUInt\:RsslPostUserInfo Helper and Utility functions}
{\xe \v RsslPostUserInfo Helper and Utility functions\:rsslIPAddrStringToUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBM" }{}}{\fldrslt {\cs37\ul\cf2 rsslIPAddrStringToUInt}}}
 (const char * {\i pAddrString}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 * {\i pAddrUInt})}}
\par
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i pAddrString} \cell }{The IP address string. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i pAddrUInt} \cell }{The output integer value, in host byte order. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_RET_SUCCESS, or RSSL_RET_FAILURE if the string could not be parsed. \par
}}}
{\xe \v rsslIPAddrUIntToString\:RsslPostUserInfo Helper and Utility functions}
{\xe \v RsslPostUserInfo Helper and Utility functions\:rsslIPAddrUIntToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDG" }{}}{\fldrslt {\cs37\ul\cf2 rsslIPAddrUIntToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i addrUInt}, char * {\i pAddrString})}}
\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i addrUInt} \cell }{The input integer value, in host byte order. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i pAddrString} \cell }{The array to fill with the IP Address string. This array must be at least 16 characters in size. \cell }
{\row }
}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslAckMsg Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslAckMsg Reference Group}
{\xe \v RsslAckMsg Reference Group}
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Ack Message is used to acknowledge success/failure or completion of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} functionality include  "rtr/rsslAckMsg.h"\par
The Ack Message is used to acknowledge success/failure or completion of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. Sent from OMM Providers to OMM Consumers, the acknowledgment carries success or failure (negative acknowledgment or nak) information to the consumer. The consumer must request acknowledgment for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} or an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} by specifying the appropriate flag.\par
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslAckMsg Creation Examples
\par}
{\tc\tcl2 \v RsslAckMsg Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslAckMsg and initialize\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 ackMsg;\par
  \par
    // Use the clear function since it sets the msgClass and tend to perform better\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearAckMsg}}}
(&ackMsg);\par
\par
    // Populate RsslAckMsg with relevant information\par
    // Set flags to indicate that this is a NAK and there is text\par
    ackMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDJ" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_NAK_CODE}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_TEXT}}}
;\par
\par
    // Populate this with standard header information\par
    ackMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDM" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10;\par
    ackMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDM" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    ackMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDM" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_NO_DATA}}}
;\par
\par
    // Populate ack message members\par
    // When acknowledging a post message, the RsslAckMsg::ackId should match the RsslPostMsg::postId\par
    ackMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCI" }{}}{\fldrslt {\cs37\ul\cf2 ackId}}}
 = 520; \par
    ackMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDN" }{}}{\fldrslt {\cs37\ul\cf2 nakCode}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_GATEWAY_DOWN}}}
;\par
    ackMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDP" }{}}{\fldrslt {\cs37\ul\cf2 text}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "Cannot apply post, gateway is down.";\par
    ackMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDP" }{}}{\fldrslt {\cs37\ul\cf2 text}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 35;\par
\par
    // Because content is RSSL_DT_NO_DATA in this example, application can just call rsslEncodeMsg(). \par
}
\par}
{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslAckMsg Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslAckMsg Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDR" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDS" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} Helper and Utility functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslAckMsg Structure, Initializers, and Flag values\par \pard\plain 
{\tc\tcl2 \v RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values}
{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} is used to acknowledge success/failure or completion of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ACK_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDU" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_EXTENDED_HEADER}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_TEXT}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_PRIVATE_STREAM}}}
 =  0x04, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_SEQ_NUM}}}
 =  0x08, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_MSG_KEY}}}
 =  0x10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_NAK_CODE}}}
 =  0x20, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_QUALIFIED_STREAM}}}
 =  0x40
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Acknowledgement Message flags (AKMF = AckMsg Flag) }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEB" }{}}{\fldrslt {\cs37\ul\cf2 RsslNakCodes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_NONE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACED" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_ACCESS_DENIED}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_DENIED_BY_SRC}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_SOURCE_DOWN}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_SOURCE_UNKNOWN}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_NO_RESOURCES}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_NO_RESPONSE}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_GATEWAY_DOWN}}}
 =  7, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_SYMBOL_UNKNOWN}}}
 =  10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_NOT_OPEN}}}
 =  11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NAKC_INVALID_CONTENT}}}
 =  12
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Ack Message nakCodes, used to indicate a reason for a negative acknowledgment (NAKC = Nak Code) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearAckMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_ACK_MSG\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_INIT_ACK_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ACK_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
 \}}}
\par
{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Static clear function does not set RsslAckMsg::msgBase::msgClass, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearAckMsg()}}} function does.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On larger structures, like messages, the clear functions tend to outperform the static initializer. It is recommended to use the clear function when initializing any messages. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearAckMsg}}} \par
}}{
Definition at line 43 of file rsslAckMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslAckFlags\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RsslAckFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDU" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckFlags}}}
}}
\par
{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_AKMF_NONE\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_AKMF_NONE}
{\b {\i RSSL_AKMF_NONE{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No Flags have been set \par
}{\xe \v RSSL_AKMF_HAS_EXTENDED_HEADER\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_AKMF_HAS_EXTENDED_HEADER}
{\b {\i RSSL_AKMF_HAS_EXTENDED_HEADER{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} has an extended header buffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEM" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg::extendedHeader}}}. \par
}{\xe \v RSSL_AKMF_HAS_TEXT\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_AKMF_HAS_TEXT}
{\b {\i RSSL_AKMF_HAS_TEXT{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} has a text buffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg::text}}}. \par
}{\xe \v RSSL_AKMF_PRIVATE_STREAM\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_AKMF_PRIVATE_STREAM}
{\b {\i RSSL_AKMF_PRIVATE_STREAM{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} acknowledges the establishment of a private stream \par
}{\xe \v RSSL_AKMF_HAS_SEQ_NUM\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_AKMF_HAS_SEQ_NUM}
{\b {\i RSSL_AKMF_HAS_SEQ_NUM{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x08) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} has a sequence number, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg::seqNum}}}. \par
}{\xe \v RSSL_AKMF_HAS_MSG_KEY\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_AKMF_HAS_MSG_KEY}
{\b {\i RSSL_AKMF_HAS_MSG_KEY{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x10) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} has a Message Key, contained in RsslAckMsg::msgBase::msgKey. \par
}{\xe \v RSSL_AKMF_HAS_NAK_CODE\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_AKMF_HAS_NAK_CODE}
{\b {\i RSSL_AKMF_HAS_NAK_CODE{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x20) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} has a NAK Code, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg::nakCode}}}. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEB" }{}}{\fldrslt {\cs37\ul\cf2 RsslNakCodes}}}. \par
}{\xe \v RSSL_AKMF_QUALIFIED_STREAM\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_AKMF_QUALIFIED_STREAM}
{\b {\i RSSL_AKMF_QUALIFIED_STREAM{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x40) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} acknowledges the establishment of a qualified stream request. \par
}}
\par
{
Definition at line 61 of file rsslAckMsg.h.}\par
}
{\xe \v RsslNakCodes\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RsslNakCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEB" }{}}{\fldrslt {\cs37\ul\cf2 RsslNakCodes}}}
}}
\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_NAKC_NONE\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_NONE}
{\b {\i RSSL_NAKC_NONE{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) No Nak Code \par
}{\xe \v RSSL_NAKC_ACCESS_DENIED\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_ACCESS_DENIED}
{\b {\i RSSL_NAKC_ACCESS_DENIED{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Access Denied. The user not properly permissioned for posting on the item or service. \par
}{\xe \v RSSL_NAKC_DENIED_BY_SRC\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_DENIED_BY_SRC}
{\b {\i RSSL_NAKC_DENIED_BY_SRC{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Denied by source. The source being posted to has denied accepting this post message. \par
}{\xe \v RSSL_NAKC_SOURCE_DOWN\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_SOURCE_DOWN}
{\b {\i RSSL_NAKC_SOURCE_DOWN{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Source Down. Source being posted to is down or not available. \par
}{\xe \v RSSL_NAKC_SOURCE_UNKNOWN\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_SOURCE_UNKNOWN}
{\b {\i RSSL_NAKC_SOURCE_UNKNOWN{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Source Unknown. The source being posted to is unknown and is unreachable. \par
}{\xe \v RSSL_NAKC_NO_RESOURCES\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_NO_RESOURCES}
{\b {\i RSSL_NAKC_NO_RESOURCES{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) No Resources. A component along the path of the post message does not have appropriate resources available to continue processing the post. \par
}{\xe \v RSSL_NAKC_NO_RESPONSE\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_NO_RESPONSE}
{\b {\i RSSL_NAKC_NO_RESPONSE{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(6) No Response. This code may mean that the source is unavailable or there is a delay in processing the posted information. \par
}{\xe \v RSSL_NAKC_GATEWAY_DOWN\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_GATEWAY_DOWN}
{\b {\i RSSL_NAKC_GATEWAY_DOWN{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(7) Gateway is Down. The gateway device for handling posted or contributed information is down or not available. (8) Reserved (9) Reserved \par
}{\xe \v RSSL_NAKC_SYMBOL_UNKNOWN\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_SYMBOL_UNKNOWN}
{\b {\i RSSL_NAKC_SYMBOL_UNKNOWN{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(10) Unknown Symbol. The item information provided within the post message is not recognized by the system. \par
}{\xe \v RSSL_NAKC_NOT_OPEN\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_NOT_OPEN}
{\b {\i RSSL_NAKC_NOT_OPEN{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(11) Item not open. The item being posted to does not have an available stream open. \par
}{\xe \v RSSL_NAKC_INVALID_CONTENT\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:RSSL_NAKC_INVALID_CONTENT}
{\b {\i RSSL_NAKC_INVALID_CONTENT{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(12) Nak being sent due to invalid content. The content of the post message is invalid and cannot be posted, it does not match the expected formatting for this post. \par
}}
\par
{
Definition at line 77 of file rsslAckMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearAckMsg\:RsslAckMsg Structure, Initializers, and Flag values}
{\xe \v RsslAckMsg Structure, Initializers, and Flag values\:rsslClearAckMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearAckMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ACK_MSG}}} \par
}}{
Definition at line 49 of file rsslAckMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslAckMsg Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions}
{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} Helper and Utility functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslAckMsg Helper and Utility functions
\par}
{\tc\tcl2 \v RsslAckMsg Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEP" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACER" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasNakCode}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_NAK_CODE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACES" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACET" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_TEXT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEU" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_PRIVATE_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEV" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEW" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEX" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasNakCode}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_NAK_CODE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEY" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_HAS_TEXT}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 *pAckMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_AKMF_PRIVATE_STREAM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslAckMsgApplyHasExtendedHdr\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgApplyHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEP" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
}{
Definition at line 181 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgApplyHasMsgKey\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgApplyHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
}{
Definition at line 221 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgApplyHasNakCode\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgApplyHasNakCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACER" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasNakCode}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
}{
Definition at line 231 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgApplyHasSeqNum\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgApplyHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACES" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
}{
Definition at line 211 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgApplyHasText\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgApplyHasText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACET" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyHasText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
}{
Definition at line 191 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgApplyPrivateStream\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgApplyPrivateStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEU" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgApplyPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
}{
Definition at line 201 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgCheckHasExtendedHdr\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgCheckHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEV" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 110 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgCheckHasMsgKey\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgCheckHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEW" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 158 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgCheckHasNakCode\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgCheckHasNakCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEX" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasNakCode}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 170 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgCheckHasSeqNum\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgCheckHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEY" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 146 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgCheckHasText\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgCheckHasText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckHasText}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 122 of file rsslAckMsg.h.}\par
}
{\xe \v rsslAckMsgCheckPrivateStream\:RsslAckMsg Helper and Utility functions}
{\xe \v RsslAckMsg Helper and Utility functions\:rsslAckMsgCheckPrivateStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAckMsgCheckPrivateStream}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 * {\i pAckMsg})}}
\par
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pAckMsg} \cell }{Pointer to the acknowledgement message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 134 of file rsslAckMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslGenericMsg Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslGenericMsg Reference Group}
{\xe \v RsslGenericMsg Reference Group}
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Generic Message allows applications to bidirectionally message without any implied interaction semantics (e.g. no Request/Response paradigm). }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} functionality include  "rtr/rsslGenericMsg.h"\par
The Generic Message allows applications to bidirectionally message without any implied interaction semantics (e.g. no Request/Response paradigm). Once a stream is established via an RsslRequestMsg-RsslRefreshMsg/RsslStatusMsg interaction, this message can be sent from consumer to provider as well as from provider to consumer, and can also be leveraged by non-interactive provider applications. Generic messages are transient and are typically not cached by any Enterprise Platform components. The RsslGenericMsg::msgBase::msgKey does not need to match the msgKey information associated with the stream the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} is flowing on. This allows for the key information to be used independently of the stream. Any specific message usage, msgKey usage, expected interactions, and handling instructions are typically defined by a domain message model specification.\par
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslGenericMsg Creation Examples
\par}
{\tc\tcl2 \v RsslGenericMsg Creation Examples}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslGenericMsg and initialize\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 genericMsg;\par
  \par
    // Use the clear function since it sets the msgClass and tend to perform better\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearGenericMsg}}}
(&genericMsg);\par
\par
    // Populate RsslGenericMsg with relevant information\par
    // Indicate that it is complete and has a sequence number\par
    genericMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFD" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_SEQ_NUM}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_MESSAGE_COMPLETE}}}
;\par
\par
    // Populate this with standard header information\par
    genericMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFG" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10;\par
    genericMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFG" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    genericMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFG" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_OPAQUE}}}
; \par
\par
    // If content is pre-encoded, can set on refreshMsg.msgBase.encDataBody buffer and call rsslEncodeMsg().\par
    // If content is not pre-encoded, user can call rsslEncodeMsgInit(), encode content, and rsslEncodeMsgComplete().\par
}
\par}
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslGenericMsg Structure, Initializers and Helpers
\par}
{\tc\tcl2 \v RsslGenericMsg Structure, Initializers and Helpers}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFI" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg Structure, Initializers, and Flag values}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} Structure, Initializers, and flag values. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} Helper and Utility functions. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslGenericMsg Structure, Initializers, and Flag values\par \pard\plain 
{\tc\tcl2 \v RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values}
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} Structure, Initializers, and flag values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} allows applications to bidirectionally send messages without any implied interaction semantics (e.g. no Request/Response paradigm). }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_GENERIC_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFL" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_NONE}}}
 =  0x000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_EXTENDED_HEADER}}}
 =  0x001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_PERM_DATA}}}
 =  0x002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_MSG_KEY}}}
 =  0x004, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_SEQ_NUM}}}
 =  0x008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_MESSAGE_COMPLETE}}}
 =  0x010, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_SECONDARY_SEQ_NUM}}}
 =  0x020, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_PART_NUM}}}
 =  0x040, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_REQ_MSG_KEY}}}
 =  0x080
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Generic Message flags (GNMF = GenericMsg Flags) }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearGenericMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_GENERIC_MSG\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_INIT_GENERIC_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_GENERIC_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
, 0, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_KEY}}}
 \}}}
\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Static clear function does not set RsslGenericMsg::msgBase::msgClass, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearGenericMsg()}}} function does.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On larger structures, like messages, the clear functions tend to outperform the static initializer. It is recommended to use the clear function when initializing any messages. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearGenericMsg}}} \par
}}{
Definition at line 44 of file rsslGenericMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslGenericFlags\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RsslGenericFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFL" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericFlags}}}
}}
\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_GNMF_NONE\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_GNMF_NONE}
{\b {\i RSSL_GNMF_NONE{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x000) No RsslGenericFlags are present. \par
}{\xe \v RSSL_GNMF_HAS_EXTENDED_HEADER\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_GNMF_HAS_EXTENDED_HEADER}
{\b {\i RSSL_GNMF_HAS_EXTENDED_HEADER{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x001) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} has an extended header buffer, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFT" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg::extendedHeader}}}. \par
}{\xe \v RSSL_GNMF_HAS_PERM_DATA\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_GNMF_HAS_PERM_DATA}
{\b {\i RSSL_GNMF_HAS_PERM_DATA{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x002) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} has permission information, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFU" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg::permData}}}. \par
}{\xe \v RSSL_GNMF_HAS_MSG_KEY\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_GNMF_HAS_MSG_KEY}
{\b {\i RSSL_GNMF_HAS_MSG_KEY{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x004) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} has a message key, contained in RsslGenericMsg::msgBase::msgKey. \par
}{\xe \v RSSL_GNMF_HAS_SEQ_NUM\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_GNMF_HAS_SEQ_NUM}
{\b {\i RSSL_GNMF_HAS_SEQ_NUM{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x008) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} has a sequence number, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg::seqNum}}}. \par
}{\xe \v RSSL_GNMF_MESSAGE_COMPLETE\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_GNMF_MESSAGE_COMPLETE}
{\b {\i RSSL_GNMF_MESSAGE_COMPLETE{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x010) Indicates that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} is the final part of a multi-part generic message. This flag should be set on both single-part generic messages, as well as the final message in a multi-part generic message sequence. \par
}{\xe \v RSSL_GNMF_HAS_SECONDARY_SEQ_NUM\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_GNMF_HAS_SECONDARY_SEQ_NUM}
{\b {\i RSSL_GNMF_HAS_SECONDARY_SEQ_NUM{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x020) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} has a secondary sequence number, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg::secondarySeqNum}}} \par
}{\xe \v RSSL_GNMF_HAS_PART_NUM\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_GNMF_HAS_PART_NUM}
{\b {\i RSSL_GNMF_HAS_PART_NUM{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x040) This {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} has a part number, contained in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFX" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg::partNum}}}. \par
}{\xe \v RSSL_GNMF_HAS_REQ_MSG_KEY\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:RSSL_GNMF_HAS_REQ_MSG_KEY}
{\b {\i RSSL_GNMF_HAS_REQ_MSG_KEY{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x080) The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} has the original request's message key, contained in RsslGenericMsg::msgBase::reqMsgKey \par
}}
\par
{
Definition at line 62 of file rsslGenericMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearGenericMsg\:RsslGenericMsg Structure, Initializers, and Flag values}
{\xe \v RsslGenericMsg Structure, Initializers, and Flag values\:rsslClearGenericMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearGenericMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_GENERIC_MSG}}} \par
}}{
Definition at line 51 of file rsslGenericMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslGenericMsg Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions}
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} Helper and Utility functions. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslGenericMsg Helper and Utility functions
\par}
{\tc\tcl2 \v RsslGenericMsg Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b rsslGenericMsgApplyHasSecSeqNum}\~ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasSecondarySeqNum}}}
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b rsslGenericMsgCheckHasSecSeqNum}\~ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGB" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasSecondarySeqNum}}}
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGD" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGF" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_PART_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasSecondarySeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_SECONDARY_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGH" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyMessageComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Applies the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_MESSAGE_COMPLETE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_EXTENDED_HEADER}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_MSG_KEY}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGL" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_PART_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGM" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_PERM_DATA}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGB" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasSecondarySeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_SECONDARY_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGN" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_HAS_SEQ_NUM}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGO" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckMessageComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 *pGenericMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the presence of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_GNMF_MESSAGE_COMPLETE}}} flag on the given {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGP" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetGenericCompleteFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the RSSL_GNMF_MESSAGE_COMPLETE flag on an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetGenericCompleteFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unset the RSSL_GNMF_MESSAGE_COMPLETE flag on an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} buffer. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslGenericMsgApplyHasExtendedHdr\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgApplyHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGD" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
}{
Definition at line 174 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgApplyHasMsgKey\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgApplyHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
}{
Definition at line 194 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgApplyHasPartNum\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgApplyHasPartNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGF" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
}{
Definition at line 214 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgApplyHasPermData\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgApplyHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
}{
Definition at line 184 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgApplyHasSecondarySeqNum\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgApplyHasSecondarySeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasSecondarySeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
}{
Definition at line 235 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgApplyHasSeqNum\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgApplyHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGH" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
}{
Definition at line 204 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgApplyMessageComplete\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgApplyMessageComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgApplyMessageComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
}{
Definition at line 225 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgCheckHasExtendedHdr\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgCheckHasExtendedHdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasExtendedHdr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 90 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgCheckHasMsgKey\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgCheckHasMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasMsgKey}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 114 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgCheckHasPartNum\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgCheckHasPartNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGL" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasPartNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 138 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgCheckHasPermData\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgCheckHasPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGM" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasPermData}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 102 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgCheckHasSecondarySeqNum\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgCheckHasSecondarySeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGB" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasSecondarySeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 162 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgCheckHasSeqNum\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgCheckHasSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGN" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckHasSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 126 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslGenericMsgCheckMessageComplete\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslGenericMsgCheckMessageComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGO" }{}}{\fldrslt {\cs37\ul\cf2 rsslGenericMsgCheckMessageComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 * {\i pGenericMsg})}}
\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pGenericMsg} \cell }{Pointer to the generic message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_TRUE - if exists; RSSL_FALSE if does not exist. \par
}}{
Definition at line 150 of file rsslGenericMsg.h.}\par
}
{\xe \v rsslSetGenericCompleteFlag\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslSetGenericCompleteFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGP" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetGenericCompleteFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFL" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericFlags}}} \par
}}}
{\xe \v rsslUnsetGenericCompleteFlag\:RsslGenericMsg Helper and Utility functions}
{\xe \v RsslGenericMsg Helper and Utility functions\:rsslUnsetGenericCompleteFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslUnsetGenericCompleteFlag}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFL" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericFlags}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsg Union Reference Group\par \pard\plain 
{\tc\tcl2 \v RsslMsg Union Reference Group}
{\xe \v RsslMsg Union Reference Group}
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
OMM Message Union contains all messages. This includes constructs, functions, and values. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The OMM Message Union. All message encoding and decoding functions expect the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} type. Any specific message class can be cast to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, and an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} can be cast to any specific message class. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg.msgBase}}} contains common members that can be used to identify the specific message class or domain type. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_MSG\:RsslMsg Union Reference Group}
{\xe \v RsslMsg Union Reference Group\:RSSL_INIT_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}
 \}}}
\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On larger structures, like messages, the clear functions tend to outperform the static initializer. It is recommended to use the clear function when initializing any messages.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsg}}} \par
}}{
Definition at line 81 of file rsslMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearMsg\:RsslMsg Union Reference Group}
{\xe \v RsslMsg Union Reference Group\:rsslClearMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG}}} \par
}}{
Definition at line 87 of file rsslMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Message Encoding Reference Group\par \pard\plain 
{\tc\tcl2 \v Transport API Message Encoding Reference Group}
{\xe \v Transport API Message Encoding Reference Group}
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transport API Message Encoding functionality, used for all aspects of message header encoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} encoding functionality include  "rtr/rsslMsgEncoders.h"\par
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOT" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Decoding Reference Group}}} for general Transport API Message Decoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rsslEncodeMsg() Usage Example
\par}
{\tc\tcl2 \v rsslEncodeMsg() Usage Example}
The following code example demonstrates stack creation and initialization of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. This also demonstrates the use of the clear function to reuse the structures. This is typical usage prior to encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslMsg and clear\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 encMsg;\par
  \par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsg}}}
(&encMsg);\par
    // Populate the message members.  \par
    encMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPT" }{}}{\fldrslt {\cs37\ul\cf2 msgClass}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MC_UPDATE}}}
;\par
    encMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10;\par
    encMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}
;\par
    encMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    \par
    encMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGV" }{}}{\fldrslt {\cs37\ul\cf2 updateMsg}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYK" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UPMF_DO_NOT_CONFLATE}}}
;\par
    encMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGV" }{}}{\fldrslt {\cs37\ul\cf2 updateMsg}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYN" }{}}{\fldrslt {\cs37\ul\cf2 updateType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYO" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_TRADE}}}
;\par
\par
    //Set pre-encoded payload into message prior to encoding. \par
    //This example assumes the encPayloadBuffer contains a properly encoded field list.\par
    encMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 encDataBody}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = encPayloadBuffer.data;\par
    encMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 encDataBody}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = encPayloadBuffer.length;\par
\par
    //Encode message\par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg}}}
(&encIter, &encMsg)) < RSSL_RET_SUCCESS)\par
    \{\par
        // an error occurred, if we arent in here, our message is successfully encoded\par
        printf("Error %s (%d) encountered with rsslEncodeMsg().  Error Text: %s\\n", \par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
\par}
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rsslEncodeMsgInit()...rsslEncodeMsgComplete() Usage Example
\par}
{\tc\tcl2 \v rsslEncodeMsgInit()...rsslEncodeMsgComplete() Usage Example}
The following code example demonstrates message encoding using the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}}/rsslEncodeMsgComplete() functions.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     //Create RsslRequestMsg \par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 reqMsg; \par
  \par
    //Clear message and populate with information\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRequestMsg}}}
(&reqMsg);\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSH" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_STREAMING}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_PRIORITY}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_HAS_QOS}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RQMF_CONF_INFO_IN_UPDATES}}}
;\par
\par
    //Populate base message information, clear function already set msgClass \par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_NO_DATA}}}
;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
 = 10;\par
    \par
    //Set Priority QoS information\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRJ" }{}}{\fldrslt {\cs37\ul\cf2 priorityClass}}}
 = 5;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRK" }{}}{\fldrslt {\cs37\ul\cf2 priorityCount}}}
 = 2;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 qos}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 timeliness}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_REALTIME}}}
;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 qos}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 rate}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TICK_BY_TICK}}}
;\par
\par
    // Message key is required, populate it \par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSO" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_SERVICE_ID}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_NAME}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_ATTRIB}}}
;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQM" }{}}{\fldrslt {\cs37\ul\cf2 serviceId}}}
 = 1;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = "TRI";\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = 3;\par
    reqMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 attribContainerType}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_ELEMENT_LIST}}}
;\par
    //Attrib will be encoded after call to rsslEncodeMsgInit()\par
\par
    //Begin encoding message, assumes iterator is associated with large enough buffer and version information\par
  \par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit}}}
(&encIter, ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
*)&reqMsg, 0)) < RSSL_RET_SUCCESS)\par
    \{\par
        // Since we said we would encode message key attributes, but did not provide them\par
        // we should be told to encode them at this point\par
        if (retVal == {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}
)\par
        \{\par
            //Encode attributes using same iterator and  specified attribContainerType\par
            //Call element list encoder, since we said type was element list\par
            ....\par
                    \par
            // When element list encoding completes successfully, finish attrib encoding\par
            retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete}}}
(&encIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
);\par
        \}\par
        \par
        // If we werent encoding attributes or we were, but called rsslEncodeMsgKeyAttribComplete\par
        // we should see the retVal telling us things are successful.  Since there is RSSL_DT_NO_DATA\par
        // as payload, there is nothing left to do but complete the message.\par
        if (retVal == RSSL_RET_SUCCESS)\par
        \{\par
            {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete}}}
(&encIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
);\par
        \}\par
        else\par
        \{\par
            printf("Error %s (%d) encountered with encoding process.  Error Text: %s\\n", \par
                    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
        \}\par
    \}\par
    else\par
    \{\par
        printf("Error %s (%d) encountered with encoding process().  Error Text: %s\\n", \par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGX" }{}}{\fldrslt {\cs37\ul\cf2 Message Encode Utility Helper Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are general helpers to assist with the encoding of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structures. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of any non-pre-encoded extended header information when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} where there is no payload or any payload is pre-encoded and set on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}, no extended header or it is pre-encoded, and no message key attributes or they are pre-encoded and populated on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 dataMaxSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begin encoding process for an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of any non-pre-encoded message key attributes when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgReqKeyAttribComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 success)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes encoding of any non-pre-encoded message request key attributes when encoding an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslEncodeExtendedHeaderComplete\:Transport API Message Encoding Reference Group}
{\xe \v Transport API Message Encoding Reference Group\:rsslEncodeExtendedHeaderComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes non-pre-encoded extended header information when using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Populate desired members on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} to begin message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any extended header information, but it is not pre-encoded and populated in the extendedHeader {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when also encoding attributes, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}}) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_EXTENDED_HEADER}}}. Call any necessary extended header encoding functions; when completed call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message request key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgReqKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any payload, but it is not pre-encoded and populated in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when encoding message key attributes or extended header, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} ) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_CONTAINER}}}. Call appropriate payload encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::containerType}}}. If no payload is required or it is provided as pre-encoded, this function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
7.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete()}}} when all content is completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the extended header encoding, if false - roll back encoding. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeMsg\:Transport API Message Encoding Reference Group}
{\xe \v Transport API Message Encoding Reference Group\:rsslEncodeMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Populate desired members on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} union or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}})\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If the message contains message key attributes, call appropriate {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}} encoder functions and populate on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If the message contains extended header information, encode as needed and populate on the respective message's extendedHeader {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab If the message contains message request key attributes, call appropriate {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}} encoder functions and populate on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab If the message contains any payload, encode using the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::containerType}}} encode functions and populate on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg()}}} when all content is populated to encode the entire message and all payload\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} to encode. If any payload, extended header, or message key attributes are required, they must already be populated on this message. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeMsgComplete\:Transport API Message Encoding Reference Group}
{\xe \v Transport API Message Encoding Reference Group\:rsslEncodeMsgComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} encoding \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Populate desired members on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} to begin message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any extended header information, but it is not pre-encoded and populated in the extendedHeader {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when also encoding attributes, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}}) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_EXTENDED_HEADER}}}. Call any necessary extended header encoding functions; when completed call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message request key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgReqKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any payload, but it is not pre-encoded and populated in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when encoding message key attributes or extended header, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} ) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_CONTAINER}}}. Call appropriate payload encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::containerType}}}. If no payload is required or it is provided as pre-encoded, this function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
7.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete()}}} when all content is completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the message encoding, if false - roll back encoding. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeMsgInit\:Transport API Message Encoding Reference Group}
{\xe \v Transport API Message Encoding Reference Group\:rsslEncodeMsgInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i dataMaxSize})}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Begins encoding of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}\par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Populate desired members on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} to begin message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any extended header information, but it is not pre-encoded and populated in the extendedHeader {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when also encoding attributes, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}}) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_EXTENDED_HEADER}}}. Call any necessary extended header encoding functions; when completed call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message request key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgReqKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any payload, but it is not pre-encoded and populated in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when encoding message key attributes or extended header, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} ) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_CONTAINER}}}. Call appropriate payload encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::containerType}}}. If no payload is required or it is provided as pre-encoded, this function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
7.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete()}}} when all content is completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{Partially populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structure to encode \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataMaxSize} \cell }{Max expected encoding size of the payload, if encoding. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information. \par
}}}
{\xe \v rsslEncodeMsgKeyAttribComplete\:Transport API Message Encoding Reference Group}
{\xe \v Transport API Message Encoding Reference Group\:rsslEncodeMsgKeyAttribComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes non-pre-encoded message key attribute encoding when using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Populate desired members on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} to begin message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any extended header information, but it is not pre-encoded and populated in the extendedHeader {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when also encoding attributes, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}}) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_EXTENDED_HEADER}}}. Call any necessary extended header encoding functions; when completed call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message request key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgReqKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any payload, but it is not pre-encoded and populated in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when encoding message key attributes or extended header, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} ) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_CONTAINER}}}. Call appropriate payload encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::containerType}}}. If no payload is required or it is provided as pre-encoded, this function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
7.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete()}}} when all content is completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the message encoding, if false - roll back encoding. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
{\xe \v rsslEncodeMsgReqKeyAttribComplete\:Transport API Message Encoding Reference Group}
{\xe \v Transport API Message Encoding Reference Group\:rsslEncodeMsgReqKeyAttribComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgReqKeyAttribComplete}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i success})}}
\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Completes non-pre-encoded message key attribute encoding when using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} \par Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Populate desired members on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} to begin message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any extended header information, but it is not pre-encoded and populated in the extendedHeader {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when also encoding attributes, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}}) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_EXTENDED_HEADER}}}. Call any necessary extended header encoding functions; when completed call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any message request key attributes, but they are not pre-encoded and populated on the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_MSG_KEY_OPAQUE}}}. Call appropriate encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. When attribute encoding is completed, followed with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgReqKeyAttribComplete()}}} to continue with message encoding\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab If the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} requires any payload, but it is not pre-encoded and populated in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}}, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMD" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgInit()}}} (or when encoding message key attributes or extended header, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete()}}} ) function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_ENCODE_CONTAINER}}}. Call appropriate payload encode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::containerType}}}. If no payload is required or it is provided as pre-encoded, this function will return {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_SUCCESS<BR>}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
7.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete()}}} when all content is completed\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Pointer to the encode iterator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i success} \cell }{If true - successfully complete the message encoding, if false - roll back encoding. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAME" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMsgKeyAttribComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMG" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeExtendedHeaderComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Message Encode Utility Helper Functions\par \pard\plain 
{\tc\tcl2 \v Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions}
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are general helpers to assist with the encoding of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structures. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceDataState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 dataState)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function replaces the encoded data state in an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} with the specified data state. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceDomainType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 domainType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function replaces the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::domainType}}} value in an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} with the specified domain type enumeration. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceGroupId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 groupId)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function replaces the encoded group Id in an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} with the specified group Id. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHC" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplacePostId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 postId)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function replaces the encoded post Id in an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} with the specified post Id. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHD" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 seqNum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function replaces the encoded Sequence Number in an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} with the specified streamId. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceStateCode}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 stateCode)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function replaces the encoded state code in an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} with the specified state code. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceStreamId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 streamId)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function replaces the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::streamId}}} value in an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} with the specified streamId. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHG" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceStreamState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 streamState)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function replaces the encoded stream state in an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} with the specified stream state. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslValidateMsg}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validate a populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslReplaceDataState\:Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions\:rsslReplaceDataState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceDataState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i dataState})}}
\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function will only succeed if the encoded message contains data state information. It cannot add state information to an encoded message that does not have the information.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataState} \cell }{The new data state that the user wishes to set on the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, the stream state has been replaced in the buffer. If RSSL_RET_FAILURE, this indicates that the encoded message did not have a data state, so nothing was changed in the encoded buffer. If RSSL_RET_INVALID_ARGUMENT, there was an issue with the encoded RsslBuffer, and the encoded buffer was not changed. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} \par
}}}
{\xe \v rsslReplaceDomainType\:Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions\:rsslReplaceDomainType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceDomainType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i domainType})}}
\par
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i domainType} \cell }{The new domain type enumeration that the user wishes to set on the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, the domain type enumeration has been replaced in the buffer. If RSSL_RET_INVALID_ARGUMENT, there was an issue with the encoded buffer's length, and the domain type was not replaced. \par
}}}
{\xe \v rsslReplaceGroupId\:Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions\:rsslReplaceGroupId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHB" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceGroupId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\i groupId})}}
\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function will only succeed if the encoded message contains a group Id. It cannot add state information to an encoded message that does not have the information.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i groupId} \cell }{The new group Id that the user wishes to set on the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, the group Id has been replaced in the buffer. If RSSL_RET_FAILURE, this indicates that the encoded message did not have a group Id, so nothing was changed in the encoded buffer. If RSSL_RET_INVALID_ARGUMENT, there was an issue with the encoded RsslBuffer, and the encoded buffer was not changed. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} \par
}}}
{\xe \v rsslReplacePostId\:Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions\:rsslReplacePostId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHC" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplacePostId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i postId})}}
\par
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function will only succeed if the encoded message contains a post Id. It cannot add state information to an encoded message that does not have the information.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i postId} \cell }{The new post Id that the user wishes to set on the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, the post Id has been replaced in the buffer. If RSSL_RET_FAILURE, this indicates that the encoded message did not have a post Id, so nothing was changed in the encoded buffer. If RSSL_RET_INVALID_ARGUMENT, there was an issue with the encoded RsslBuffer, and the encoded buffer was not changed. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} \par
}}}
{\xe \v rsslReplaceSeqNum\:Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions\:rsslReplaceSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHD" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceSeqNum}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i seqNum})}}
\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function will only succeed if the encoded message contains a sequence number. It cannot add a sequence number to an encoded message that does not have the information.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i seqNum} \cell }{The new sequence number that the user wishes to set on the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, the sequence number has been replaced in the buffer. If RSSL_RET_FAILURE, this indicates that the encoded message did not have a sequence number, and nothing was changed in the encoded buffer. If RSSL_RET_INVALID_ARGUMENT, there was an issue with the encoded RsslBuffer, and the encoded buffer was not changed. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} \par
}}}
{\xe \v rsslReplaceStateCode\:Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions\:rsslReplaceStateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHE" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceStateCode}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i stateCode})}}
\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function will only succeed if the encoded message contains a state code. It cannot add state information to an encoded message that does not have the information.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stateCode} \cell }{The new state code that the user wishes to set on the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, the state code has been replaced in the buffer. If RSSL_RET_FAILURE, this indicates that the encoded message did not have a state code, so nothing was changed in the encoded buffer. If RSSL_RET_INVALID_ARGUMENT, there was an issue with the encoded RsslBuffer, and the encoded buffer was not changed. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} \par
}}}
{\xe \v rsslReplaceStreamId\:Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions\:rsslReplaceStreamId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHF" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceStreamId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\i streamId})}}
\par
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i streamId} \cell }{The new stream Id that the user wishes to set on the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, the stream Id has been replaced in the buffer. If RSSL_RET_INVALID_ARGUMENT, there was an issue with the encoded buffer's length, and the stream Id was not replaced. \par
}}}
{\xe \v rsslReplaceStreamState\:Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions\:rsslReplaceStreamState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHG" }{}}{\fldrslt {\cs37\ul\cf2 rsslReplaceStreamState}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i streamState})}}
\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function will only succeed if the encoded message contains stream state information. It cannot add state information to an encoded message that does not have the information.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}} with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i streamState} \cell }{The new stream state that the user wishes to set on the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, the stream state has been replaced in the buffer. If RSSL_RET_FAILURE, this indicates that the encoded message did not have a stream state, so nothing was changed in the encoded buffer. If RSSL_RET_INVALID_ARGUMENT, there was an issue with the encoded RsslBuffer or streamState, and the encoded buffer was not changed. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} \par
}}}
{\xe \v rsslValidateMsg\:Message Encode Utility Helper Functions}
{\xe \v Message Encode Utility Helper Functions\:rsslValidateMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslValidateMsg}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validates fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structure to ensure that it's flags and data members are properly set, and can be encoded without any issues. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{Pointer to a fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}} if the message is valid, and can be properly encoded. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}} if the message is not valid. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReleaseCopiedMsg}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transport API Message Decoding Reference Group\par \pard\plain 
{\tc\tcl2 \v Transport API Message Decoding Reference Group}
{\xe \v Transport API Message Decoding Reference Group}
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transport API Message Decoding functionality, used for all aspects of message header decoding. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} decoding functionality include  "rtr/rsslMsgDecoders.h"\par
See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOS" }{}}{\fldrslt {\cs37\ul\cf2 Transport API Message Encoding Reference Group}}} for general Transport API Message Encoding functionality. \par See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOU" }{}}{\fldrslt {\cs37\ul\cf2 General Message Utility and Helper Functions}}} for general Transport API Message utility and helper functions. \par \par\par{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rsslDecodeMsg() Usage Example
\par}
{\tc\tcl2 \v rsslDecodeMsg() Usage Example}
The following code example demonstrates a decoding scenario using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg()}}} and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsgKeyAttrib()}}} When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} will be populated via the decode process so there is no need to previously clear. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     // Create RsslMsg\par
    {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 decMsg;\par
    // This example assumes the decode iterator was created, cleared, and populated with an RsslBuffer containing\par
    // the encoded content (likely obtained from rsslRead()).\par
  \par
    if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg}}}
(&decIter, &decMsg)) >= RSSL_RET_SUCCESS)\par
    \{\par
        //The message header information is now decoded.\par
        //Check if any message key attributes are present, first get the message key.\par
        const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
* msgKey = rsslGetMessageKey(&decMsg);\par
        //Check if the key contains attributes\par
        if (msgKey->{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSO" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
 & {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MKF_HAS_ATTRIB}}}
)\par
        \{\par
            //Use the same iterator to decode the message key attrib\par
            if ((retVal = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsgKeyAttrib}}}
(&decIter, msgKey)) >= RSSL_RET_SUCCESS)\par
            \{\par
                //Decode attributes using the proper decode function  \par
                switch(msgKey->{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 attribContainerType}}}
)\par
                \{\par
                    //handle appropriate container types and do something with data\par
                    ...\par
                \}\par
            \}\par
            else\par
            \{\par
                //handle error as needed\par
                printf("Error %s (%d) encountered while calling rsslDecodeMsgKeyAttrib().  Error text: %s\\n",\par
                            {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
            \}\par
        \}\par
        \par
        //Now decode any payload information.  \par
        switch(decMsg.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
)\par
        \{\par
            case {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_NO_DATA}}}
:\par
                //Do nothing for no data\par
            break;\par
            // Handle other container types here and do something with content\par
\par
        \}\par
    \}\par
    else\par
    \{\par
        //initial RsslMsg decode failed\par
        printf("Error %s (%d) encountered while decoding RsslMsg.  Error text: %s\\n",\par
                {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeToString}}}
(retVal), retVal, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 rsslRetCodeInfo}}}
(retVal));\par
    \}\par
}
 \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHL" }{}}{\fldrslt {\cs37\ul\cf2 Message Decode Utility Helper Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are general helpers to assist with the decoding of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structures. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decodes an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsgKeyAttrib}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 *pKey)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows the user to continue decoding of any message key attributes with the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} used when calling rsslDecodeMsg. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDecodeMsg\:Transport API Message Decoding Reference Group}
{\xe \v Transport API Message Decoding Reference Group\:rsslDecodeMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If there are any message key attributes and the application wishes to decode them using the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsgKeyAttrib()}}} for RWF container types and continue decoding using the appropriate container type decode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If payload is present and the application wishes to decode it, use the appropriate decode functions, as specified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::containerType}}}\par{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid This does not decode any contained payload, message key attributes, or extended header information. The user can choose whether it requires decoding of those portions of the message.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structure to populate with decoded contents. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::encDataBody}}} will point to any encoded payload. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::encAttrib}}} will point to any encoded message key attributes. The extendedHeader {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} will point to any encoded extended header information. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsgKeyAttrib}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information \par
}\par}
}}
{\xe \v rsslDecodeMsgKeyAttrib\:Transport API Message Decoding Reference Group}
{\xe \v Transport API Message Decoding Reference Group\:rsslDecodeMsgKeyAttrib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsgKeyAttrib}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\i pKey})}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg()}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If there are any message key attributes that are of RWF container type and the application wishes to decode them using the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsgKeyAttrib()}}} and continue decoding using the appropriate container type decode functions, as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}}. This should not be used if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}} is a Non-RWF type.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab If payload is present and the application wishes to decode it, use the appropriate decode functions, as specified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::containerType}}}\par{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid A seperate {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} can be used to decode the message key attributes. This function is only required if using the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} as used with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg()}}}.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{Decode iterator to use for decode process \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pKey} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} pointer from the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structure populated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg()}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid Returns an RsslRet to provide success or failure information. RSSL_RET_INVALID_ARGUMENT is returned if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::attribContainerType}}} is a Non-RWF type. \par
}\par}
}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Message Decode Utility Helper Functions\par \pard\plain 
{\tc\tcl2 \v Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions}
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are general helpers to assist with the decoding of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structures. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHM" }{}}{\fldrslt {\cs37\ul\cf2 rsslAddGroupId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pGroupId, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 groupIdToAdd)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to add a two byte identifier to the group ID buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHN" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractDomainType}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extract {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::domainType}}} from a buffer containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHO" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractGroupId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pGroupId)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extract the group Id from a buffer containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHP" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractMsgClass}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extract {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPT" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::msgClass}}} from a buffer containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractPostId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 *pPostId)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extract the post Id from a buffer containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHR" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractSeqNum}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 *pSeqNum)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extract the sequence number from a buffer containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHS" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractStreamId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *pIter)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extract {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::streamId}}} from a buffer containing an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHT" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetExtendedHeader}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve extended header from the provided decoded message structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHU" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetFlags}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve flags from the provided decoded message structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHV" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetGroupId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve group Id from the provided decoded message structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetMsgKey}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} structure from the provided decoded message structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHX" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetPermData}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve permission expression from the provided decoded message structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHY" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetReqMsgKey}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the request {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} structure from the provided decoded message structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetSeqNum}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve the sequence number from the provided decoded message structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIA" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetState}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieve state from the provided decoded message structure. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslIsFinalMsg}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} is the final message for a stream. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslAddGroupId\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslAddGroupId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHM" }{}}{\fldrslt {\cs37\ul\cf2 rsslAddGroupId}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pGroupId}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\i groupIdToAdd})}}
\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
This should not be run on a group ID buffer contained in a decoded message, as this can cause data corruption. \par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
The user must have allocated enough free space to the buffer to add another two byte identifier. \par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i groupIdToAdd} \cell }{two byte ID to append to the groupID contained in pGroupId buffer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i pGroupId} \cell }{RsslBuffer with any existing groupID information. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On success, returns RSSL_RET_SUCCESS. \par
}}}
{\xe \v rsslExtractDomainType\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslExtractDomainType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHN" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractDomainType}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} that contains the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer()}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::domainType}}} enumeration contained in the buffer. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDomainTypes}}} for Thomson Reuters Domain Model enumerations. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslMsgTypes \par
}}}
{\xe \v rsslExtractGroupId\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslExtractGroupId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHO" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractGroupId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pGroupId})}}
\par
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} that contains the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i pGroupId} \cell }{Pointer to an RsslBuffer. This operation will not copy the data out of the encoded buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, pGroupId has been populated the message's group Id information. If RSSL_RET_FAILURE, the operation has failed, and pGroupId has not been populated. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} \par
}}}
{\xe \v rsslExtractMsgClass\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslExtractMsgClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHP" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractMsgClass}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} that contains the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer()}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPT" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::msgClass}}} enumeration contained in the buffer. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgClasses}}} for enumerations. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgClasses}}} \par
}}}
{\xe \v rsslExtractPostId\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslExtractPostId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractPostId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 * {\i pPostId})}}
\par
{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} that contains the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i pPostId} \cell }{Pointer to an allocated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, pPostId has been populated with the message's sequence number. If RSSL_RET_FAILURE, the operation has failed, and pPostId has not been populated. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} \par
}}}
{\xe \v rsslExtractSeqNum\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslExtractSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHR" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractSeqNum}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 * {\i pSeqNum})}}
\par
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} that contains the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i pSeqNum} \cell }{Pointer to an allocated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If RSSL_RET_SUCCESS, pSeqNum has been populated with the message's sequence number. If RSSL_RET_FAILURE, the operation has failed, and pSeqNum has not been populated. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} \par
}}}
{\xe \v rsslExtractStreamId\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslExtractStreamId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHS" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractStreamId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i pIter})}}
\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pIter} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}} with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} that contains the encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} set on it using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer()}}}. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase::streamId}}} value contained in the buffer. \par
}}}
{\xe \v rsslGetExtendedHeader\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslGetExtendedHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHT" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetExtendedHeader}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Pointer to the Extended Header buffer contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \par
}}}
{\xe \v rsslGetFlags\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslGetFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHU" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetFlags}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Flag values contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \par
}}}
{\xe \v rsslGetGroupId\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslGetGroupId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHV" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetGroupId}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Pointer to the GroupId buffer contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \par
}}}
{\xe \v rsslGetMsgKey\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslGetMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHW" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetMsgKey}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} structure contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \par
}}}
{\xe \v rsslGetPermData\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslGetPermData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHX" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetPermData}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Pointer to the permission data buffer contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \par
}}}
{\xe \v rsslGetReqMsgKey\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslGetReqMsgKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHY" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetReqMsgKey}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} structure contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \par
}}}
{\xe \v rsslGetSeqNum\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslGetSeqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetSeqNum}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Sequence number contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \par
}}}
{\xe \v rsslGetState\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslGetState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIA" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetState}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} structure contained in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. \par
}}}
{\xe \v rsslIsFinalMsg\:Message Decode Utility Helper Functions}
{\xe \v Message Decode Utility Helper Functions\:rsslIsFinalMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIB" }{}}{\fldrslt {\cs37\ul\cf2 rsslIsFinalMsg}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{Pointer to a fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}} if the pMsg is a Final Message for the request, RSSL_FALSE otherwise \par
}}{
Definition at line 127 of file rsslMsg.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
General Message Utility and Helper Functions\par \pard\plain 
{\tc\tcl2 \v General Message Utility and Helper Functions}
{\xe \v General Message Utility and Helper Functions}
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are intended to assist users with using the Transport API Message package structures. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACID" }{}}{\fldrslt {\cs37\ul\cf2 Message Package Library Version}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This allows the user to programmatically extract version information about the library. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIE" }{}}{\fldrslt {\cs37\ul\cf2 Message Utility Helper Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are general helpers to assist with usage of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structures. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIF" }{}}{\fldrslt {\cs37\ul\cf2 Copy Message Utility Helper Functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions provide deep copy and size of functionality for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structures. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Message Package Library Version\par \pard\plain 
{\tc\tcl2 \v Message Package Library Version}
{\xe \v Message Package Library Version}
{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This allows the user to programmatically extract version information about the library. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIG" }{}}{\fldrslt {\cs37\ul\cf2 rsslQueryMessagesLibraryVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
 *pVerInfo)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Programmatically extracts library and product version information that is compiled into this library. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslQueryMessagesLibraryVersion\:Message Package Library Version}
{\xe \v Message Package Library Version\:rsslQueryMessagesLibraryVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIG" }{}}{\fldrslt {\cs37\ul\cf2 rsslQueryMessagesLibraryVersion}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
 * {\i pVerInfo})}}
\par
{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User can call this function to programmatically extract version information, or \par query version information externally (via 'strings' command or something similar\par and grep for the following tags:\par 'VERSION' - contains internal library version information such as node number (e.g. rssl1.4.F2)\par 'PRODUCT' - contains product information such as load/package naming (e.g. upa7.0.0.L1)\par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pVerInfo} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}} structure to populate with library version information \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Message Utility Helper Functions\par \pard\plain 
{\tc\tcl2 \v Message Utility Helper Functions}
{\xe \v Message Utility Helper Functions}
{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are general helpers to assist with usage of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structures. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPU" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgClassToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 msgClass)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided message class enumeration to a string. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslMsgClassToString\:Message Utility Helper Functions}
{\xe \v Message Utility Helper Functions\:rsslMsgClassToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPU" }{}}{\fldrslt {\cs37\ul\cf2 rsslMsgClassToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i msgClass})}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i msgClass} \cell }{message class. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Null terminated character string containing the name of the message class. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgClasses}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Copy Message Utility Helper Functions\par \pard\plain 
{\tc\tcl2 \v Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions}
{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions provide deep copy and size of functionality for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structures. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslCopyMsg Usage Example
\par}
{\tc\tcl2 \v RsslCopyMsg Usage Example}
The following code example demonstrates the usage of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg()}}} with a user-allocated buffer. In this case, the user is expected to pre-allocate the memory that {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}} will copy to. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  // This RsslMsg should already have been populated by the user.\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 SourceMsg;\par
 // RsslMsg pointer for final copy location\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *CopyMsg;\par
 // User allocated buffer\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 copyBuf;\par
 // Doing a full, deep copy of the message. Message does not have a filter list.\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 copyFlags = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACII" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_ALL_FLAGS}}}
;\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 filter = 0;\par
\par
 // Find size of the source message and allocate memory.\par
 copyBuf.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslSizeOfMsg}}}
(&SourceMsg, copyFlags);\par
 copyBuf.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
 = (char*)malloc(copyBuf.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
);\par
\par
 // Copy message into copyBuf.\par
 CopyMsg = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}}
(&SourceMsg, copyFlags, filter, &copyBuf);\par
 \par
 // ... //\par
 \par
 // When done with the Copied Message, free the data buffer.\par
 free(copyBuf.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
);\par
}
 \par\par This code example demonstrates the usage of RsslCopyMsg() without a user-allocated buffer. Here, the user is expected to use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReleaseCopiedMsg()}}} to free the allocated memory. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  // This RsslMsg should already have been populated by the user.\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 SourceMsg;\par
 // RsslMsg pointer for final copy location\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *CopyMsg;\par
 // Doing a full, deep copy of the message. Message does not have a filter list.\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 copyFlags = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACII" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_ALL_FLAGS}}}
;\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 filter = 0;\par
\par
 // Copy message into copyBuf.\par
 CopyMsg = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}}
(&SourceMsg, copyFlags, filter, NULL);\par
 \par
 // ... //\par
 \par
 // When done with the Copied Message, free the data buffer.\par
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReleaseCopiedMsg}}}
(CopyMsg);\par
}
 \par\par \par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIK" }{}}{\fldrslt {\cs37\ul\cf2 RsslCopyMsgFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_NONE}}}
 =  0x00000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_STATE_TEXT}}}
 =  0x00001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_PERM_DATA}}}
 =  0x00002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_KEY_NAME}}}
 =  0x00004, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_KEY_ATTRIB}}}
 =  0x00008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_KEY}}}
 =  0x0000C, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_EXTENDED_HEADER}}}
 =  0x00010, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_DATA_BODY}}}
 =  0x00020, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_MSG_BUFFER}}}
 =  0x00040, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_GROUP_ID}}}
 =  0x00080, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_NAK_TEXT}}}
 =  0x00100, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_REQ_KEY_NAME}}}
 =  0x00200, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_REQ_KEY_ATTRIB}}}
 =  0x00400, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_REQ_KEY}}}
 =  0x00600, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACII" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_ALL_FLAGS}}}
 =  0x00FFF, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CMF_NO_EMPTY_ALLOC}}}
 =  0x10000
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Copy Message flags (CMF = CopyMsg Flags) These flags are used by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}} to control what is copied. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pSrcMsg, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 copyMsgFlags, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 filterBlocks, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *pCopyBuffer)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} to a user-allocated or dynamically allocated buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReleaseCopiedMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pMsg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Release allocated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} memory created by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslSizeOfMsg}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 *pSrcMsg, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 copyMsgFlags)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calculates a deep SizeOf on {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structure. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslCopyMsgFlags\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RsslCopyMsgFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIK" }{}}{\fldrslt {\cs37\ul\cf2 RsslCopyMsgFlags}}}
}}
\par
{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_CMF_NONE\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_NONE}
{\b {\i RSSL_CMF_NONE{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00000) No Flags set, no sub-structs will be copied \par
}{\xe \v RSSL_CMF_STATE_TEXT\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_STATE_TEXT}
{\b {\i RSSL_CMF_STATE_TEXT{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00001) State text will be copied \par
}{\xe \v RSSL_CMF_PERM_DATA\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_PERM_DATA}
{\b {\i RSSL_CMF_PERM_DATA{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00002) Perm exp will be copied \par
}{\xe \v RSSL_CMF_KEY_NAME\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_KEY_NAME}
{\b {\i RSSL_CMF_KEY_NAME{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00004) Key name will be copied \par
}{\xe \v RSSL_CMF_KEY_ATTRIB\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_KEY_ATTRIB}
{\b {\i RSSL_CMF_KEY_ATTRIB{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00008) Key attrib will be copied \par
}{\xe \v RSSL_CMF_KEY\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_KEY}
{\b {\i RSSL_CMF_KEY{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0000C) Entire key will be copied \par
}{\xe \v RSSL_CMF_EXTENDED_HEADER\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_EXTENDED_HEADER}
{\b {\i RSSL_CMF_EXTENDED_HEADER{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00010) Extended header will be copied \par
}{\xe \v RSSL_CMF_DATA_BODY\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_DATA_BODY}
{\b {\i RSSL_CMF_DATA_BODY{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00020) Data body will be copied \par
}{\xe \v RSSL_CMF_MSG_BUFFER\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_MSG_BUFFER}
{\b {\i RSSL_CMF_MSG_BUFFER{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00040) Encoded message buffer will be copied \par
}{\xe \v RSSL_CMF_GROUP_ID\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_GROUP_ID}
{\b {\i RSSL_CMF_GROUP_ID{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00080) Group Id will be copied \par
}{\xe \v RSSL_CMF_NAK_TEXT\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_NAK_TEXT}
{\b {\i RSSL_CMF_NAK_TEXT{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00100) Nak Text will be copied \par
}{\xe \v RSSL_CMF_REQ_KEY_NAME\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_REQ_KEY_NAME}
{\b {\i RSSL_CMF_REQ_KEY_NAME{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00200) req Key name will be copied \par
}{\xe \v RSSL_CMF_REQ_KEY_ATTRIB\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_REQ_KEY_ATTRIB}
{\b {\i RSSL_CMF_REQ_KEY_ATTRIB{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00400) req Key attrib will be copied \par
}{\xe \v RSSL_CMF_REQ_KEY\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_REQ_KEY}
{\b {\i RSSL_CMF_REQ_KEY{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00600) Entire req key will be copied \par
}{\xe \v RSSL_CMF_ALL_FLAGS\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_ALL_FLAGS}
{\b {\i RSSL_CMF_ALL_FLAGS{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00FFF) Everything will be copied \par
}{\xe \v RSSL_CMF_NO_EMPTY_ALLOC\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:RSSL_CMF_NO_EMPTY_ALLOC}
{\b {\i RSSL_CMF_NO_EMPTY_ALLOC{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x10000) Do not allocate if all blocks are filtered out \par
}}
\par
{
Definition at line 247 of file rsslMsg.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslCopyMsg\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:rsslCopyMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pSrcMsg}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i copyMsgFlags}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i filterBlocks}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i pCopyBuffer})}}
\par
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies the fully populated {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structure according to the provided {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIK" }{}}{\fldrslt {\cs37\ul\cf2 RsslCopyMsgFlags}}}. Depending on the flag combination provided, this will be either a deep copy if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACII" }{}}{\fldrslt {\cs37\ul\cf2 RsslCopyFlags::RSSL_CMF_ALL_FLAGS}}} is used, or a shallow copy if no flags are present. If a buffer is provided through the pCopyBuffer parameter, this function will copy the source {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} into the user provided buffer. If a buffer is not provided, the function will dynamically allocate the memory required to copy the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If a user allocated buffer is not provided, the memory allocated for the new copy will not be automatically freed. The user must call rsslReleaseCopiedMsg to manually free the data once they are finished with the copy.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSrcMsg} \cell }{Source {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i copyMsgFlags} \cell }{Copy Message Flags, control how message is copied. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIK" }{}}{\fldrslt {\cs37\ul\cf2 RsslCopyMsgFlags}}} for more information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filterBlocks} \cell }{Block Mask of Blocks to be included in the final msg \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pCopyBuffer} \cell }{Optional buffer to copy msg into - in this case user needs to allocate and free memory \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid On success, returns a pointer to the copied {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. On failure, returns 0. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReleaseCopiedMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIK" }{}}{\fldrslt {\cs37\ul\cf2 RsslCopyMsgFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslValidateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslSizeOfMsg}}} \par
}}}
{\xe \v rsslReleaseCopiedMsg\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:rsslReleaseCopiedMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReleaseCopiedMsg}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pMsg})}}
\par
{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function should only be used if rsslCopyMsg allocated memory for the copied {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. If the user allocated memory for the copy(using the pCopyBuffer parameter), this function does not need to be called.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pMsg} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} to be freed \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHH" }{}}{\fldrslt {\cs37\ul\cf2 rsslValidateMsg}}} \par
}}}
{\xe \v rsslSizeOfMsg\:Copy Message Utility Helper Functions}
{\xe \v Copy Message Utility Helper Functions\:rsslSizeOfMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslSizeOfMsg}}}
 (const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}
 * {\i pSrcMsg}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i copyMsgFlags})}}
\par
{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is intended to assist users who wish to cache or copy the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} structures by calculating the fully allocated size of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}. In addition to the size of the structure, it also will add in the size of allocated buffers in the message structure(e.g. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::name}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVE" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg::extendedHeader}}}) according to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIK" }{}}{\fldrslt {\cs37\ul\cf2 RsslCopyMsgFlags}}} options set in the copyMsgFlags parameter.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function will not give an accurate size of an encoded {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} sent on the wire.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pSrcMsg} \cell }{Source {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i copyMsgFlags} \cell }{Copy Message Flags to control which parts of the message are sized \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Size(in bytes) of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}'s allocated memory. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHI" }{}}{\fldrslt {\cs37\ul\cf2 rsslCopyMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIK" }{}}{\fldrslt {\cs37\ul\cf2 RsslCopyMsgFlags}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Thomson Reuters Domain Models\par \pard\plain 
{\tc\tcl2 \v Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models}
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Thomson Reuters Domain Model Package contains the enumerations and data structures used with Thomson Reuters provided domain message models. This content is available through the Thomson Reuters Enterprise Platform, EleKtron, Reuters Data Feed Direct, and various other sources. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Thomson Reuters Domain Model Helper and Utility functions
\par}
{\tc\tcl2 \v Thomson Reuters Domain Model Helper and Utility functions}
\par}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJB" }{}}{\fldrslt {\cs37\ul\cf2 Thomson Reuters Domain Model Helper and Utility functions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the Thomson Reuters Domain Model Helper and Utility functions. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJC" }{}}{\fldrslt {\cs37\ul\cf2 TRDM Common Enumerations}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The TRDM Common Enumerations are used across several Thomson Reuters Domain Models. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJD" }{}}{\fldrslt {\cs37\ul\cf2 TRDM Login Domain}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Login Domain is used to register a user with the system. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJE" }{}}{\fldrslt {\cs37\ul\cf2 TRDM Dictionary Domain}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Dictionary Domain is used transmit the RDM Field Dictionary across the wire. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJF" }{}}{\fldrslt {\cs37\ul\cf2 TRDM Directory Domain}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Directory Domain is used to communicate information about services available on the system. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJG" }{}}{\fldrslt {\cs37\ul\cf2 Class of Service Elements}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class of Service elements are used for negotiating features of a qualified stream. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJH" }{}}{\fldrslt {\cs37\ul\cf2 RDMEnhancedSymbolListSupportFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJI" }{}}{\fldrslt {\cs37\ul\cf2 RDM_SYMBOL_LIST_SUPPORT_NAMES_ONLY}}}
 =  0x0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJJ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_SYMBOL_LIST_SUPPORT_DATA_STREAMS}}}
 =  0x1
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enhanced Symbol List behavior support flags. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJK" }{}}{\fldrslt {\cs37\ul\cf2 RDMSymbolListDataStreamRequestFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJL" }{}}{\fldrslt {\cs37\ul\cf2 RDM_SYMBOL_LIST_NAMES_ONLY}}}
 =  0x0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJM" }{}}{\fldrslt {\cs37\ul\cf2 RDM_SYMBOL_LIST_DATA_STREAMS}}}
 =  0x1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJN" }{}}{\fldrslt {\cs37\ul\cf2 RDM_SYMBOL_LIST_DATA_SNAPSHOTS}}}
 =  0x2
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Symbol List requestable behavior flags. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDomainTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_LOGIN}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_SOURCE}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_DICTIONARY}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_PRICE}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_BY_ORDER}}}
 =  7, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_BY_PRICE}}}
 =  8, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_MAKER}}}
 =  9, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_SYMBOL_LIST}}}
 =  10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_SERVICE_PROVIDER_STATUS}}}
 =  11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_HISTORY}}}
 =  12, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_HEADLINE}}}
 =  13, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_STORY}}}
 =  14, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_REPLAYHEADLINE}}}
 =  15, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_REPLAYSTORY}}}
 =  16, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_TRANSACTION}}}
 =  17, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_YIELD_CURVE}}}
 =  22, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_CONTRIBUTION}}}
 =  27, 
{\b RSSL_DMT_PROVIDER_ADMIN} =  29, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_ANALYTICS}}}
 =  30, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_REFERENCE}}}
 =  31, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_NEWS_TEXT_ANALYTICS}}}
 =  33, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_ECONOMIC_INDICATOR}}}
 =  34, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_POLL}}}
 =  35, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_FORECAST}}}
 =  36, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MARKET_BY_TIME}}}
 =  37, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_SYSTEM}}}
 =  127, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MAX_RESERVED}}}
 =  127, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACKN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DMT_MAX_VALUE}}}
 =  255
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Domain Type enumeration values, see Usage Guide for domain model definitions (DMT = DomainType) This will be extended as new message types are defined and implemented. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ACCEPTING_CONS_STATUS} = \{ 23 , (char*)"AcceptingConsumerStatus" \}{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ACCEPTING_REQS} = \{ 17 , (char*)"AcceptingRequests" \}{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ADDRESS} = \{ 7, (char*)"Address" \}{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ALLOW_SUSPECT_DATA} = \{ 16 , (char*)"AllowSuspectData" \}{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_APPAUTH_TOKEN} = \{ 29 , (char*)"ApplicationAuthorizationToken" \}{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_APPID} = \{ 13 , (char*)"ApplicationId" \}{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_APPNAME} = \{ 15 , (char*)"ApplicationName" \}{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_AUTHN_ERROR_CODE} = \{ 23, (char*)"AuthenticationErrorCode" \}{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_AUTHN_ERROR_TEXT} = \{ 23, (char*)"AuthenticationErrorText" \}{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_AUTHN_EXTENDED} = \{ 22, (char*)"AuthenticationExtended" \}{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_AUTHN_EXTENDED_RESP} = \{ 26, (char*)"AuthenticationExtendedResp" \}{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_AUTHN_TOKEN} = \{ 19, (char*)"AuthenticationToken" \}{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_AUTHN_TT_REISSUE} = \{ 23, (char*)"AuthenticationTTReissue" \}{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_BATCH_ITEM_LIST} = \{ 9 , (char*)":ItemList" \}{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_BATCH_STREAMID_LIST} = \{ 13, (char *)":StreamIdList" \}{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_CAPABILITIES} = \{ 12 , (char*)"Capabilities" \}{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_CHANNEL_ID} = \{ 9, (char*)"ChannelId" \}{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_CONNECTION_CONFIG} = \{ 16 , (char*)"ConnectionConfig" \}{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_CONS_CONN_STATUS} = \{ 24 , (char*)"ConsumerConnectionStatus" \}{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_CONS_STATUS} = \{ 14 , (char*)"ConsumerStatus" \}{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DATA} = \{ 4 , (char*)"Data" \}{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DATA_STREAMS} = \{ 12 , (char*)":DataStreams" \}{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DICT_TYPE} = \{ 4, (char*)"Type" \}{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DICT_VERSION} = \{ 7, (char*)"Version" \}{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DICTIONARIES_PROVIDED} = \{ 20 , (char*)"DictionariesProvided" \}{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DICTIONARIES_USED} = \{ 16 , (char*)"DictionariesUsed" \}{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DICTIONARY_ID} = \{ 12, (char*)"DictionaryId" \}{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DICTIONARYS_PROVIDED} = \{ 20 , (char*)"DictionariesProvided" \}{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DICTIONARYS_USED} = \{ 16 , (char*)"DictionariesUsed" \}{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DOMAIN} = \{ 6, (char*)"Domain" \}{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_DOWNLOAD_CON_CONFIG} = \{ 24 , (char*)"DownloadConnectionConfig" \}{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ENUM_DISPLAY} = \{7, (char*)"DISPLAY"\}{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ENUM_DT_VERSION} = \{10, (char*)"DT_Version"\}{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ENUM_FIDS} = \{4, (char*)"FIDS"\}{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ENUM_MEANING} = \{7, (char*)"MEANING"\}{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ENUM_RT_VERSION} = \{10, (char*)"RT_Version"\}{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ENUM_VALUE} = \{5, (char*)"VALUE"\}{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_FIELD_ENUMLENGTH} = \{10, (char*)"ENUMLENGTH"\}{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_FIELD_ID} = \{3, (char*)"FID"\}{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_FIELD_LENGTH} = \{6, (char*)"LENGTH"\}{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_FIELD_LONGNAME} = \{8, (char*)"LONGNAME"\}{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_FIELD_NAME} = \{4, (char*)"NAME"\}{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_FIELD_RIPPLETO} = \{8, (char*)"RIPPLETO"\}{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_FIELD_RWFLEN} = \{6, (char*)"RWFLEN"\}{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_FIELD_RWFTYPE} = \{7, (char*)"RWFTYPE"\}{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_FIELD_TYPE} = \{ 4, (char*)"TYPE" \}{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_GAP_CHANNEL_ID} = \{ 12, (char*)"GapChannelId" \}{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_GAP_MCAST_CHANNELS} = \{ 20, (char*)"GapMulticastChannels" \}{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_GAP_RECOVERY_SERVER_HOST} = \{ 21, (char*)"GapRecoveryServerHost" \}{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_GAP_RECOVERY_SERVER_PORT} = \{ 21, (char*)"GapRecoveryServerPort" \}{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_GROUP} = \{ 5 , (char*)"Group" \}{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_HOSTNAME} = \{ 8 , (char*)"Hostname" \}{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_INST_ID} = \{ 10 , (char*)"InstanceId" \}{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_IS_SOURCE} = \{ 8 , (char*)"IsSource" \}{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ITEM_LIST} = \{ 8 , (char*)"ItemList" \}{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_LINK_CODE} = \{ 8 , (char*)"LinkCode" \}{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_LINK_STATE} = \{ 9 , (char*)"LinkState" \}{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_LOAD_FACT} = \{ 10 , (char*)"LoadFactor" \}{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_MERG_TO_GRP} = \{ 13 , (char*)"MergedToGroup" \}{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_MULTICAST_GROUP} = \{ 14, (char*)"MulticastGroup" \}{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_NAME} = \{ 4 , (char*)"Name" \}{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_NUM_STANDBY_SERVERS} = \{ 17 , (char*)"NumStandbyServers" \}{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_OPEN_LIMIT} = \{ 9 , (char*)"OpenLimit" \}{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_OPEN_WINDOW} = \{ 10 , (char*)"OpenWindow" \}{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_PASSWORD} = \{ 8 , (char*)"Password" \}{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_PERSISTENT_MOUNT} = \{ 15 , (char*)"PersistentMount" \}{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_PORT} = \{ 4 , (char*)"Port" \}{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_POSITION} = \{ 8 , (char*)"Position" \}{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_PROV_PERM_EXP} = \{ 28 , (char*)"ProvidePermissionExpressions" \}{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_PROV_PERM_PROF} = \{ 24 , (char*)"ProvidePermissionProfile" \}{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_QOS} = \{ 3 , (char*)"QoS" \}{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_REFERENCE_DATA_SERVER_HOST} = \{ 23, (char*)"ReferenceDataServerHost" \}{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_REFERENCE_DATA_SERVER_PORT} = \{ 23, (char*)"ReferenceDataServerPort" \}{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_ROLE} = \{ 4 , (char*)"Role" \}{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SEQUENCE_NUMBER_RECOVERY} = \{ 22 , (char*)"SequenceNumberRecovery" \}{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SEQUENCE_RETRY_INTERVAL} = \{ 21 , (char*)"SequenceRetryInterval" \}{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SERVER_TYPE} = \{ 10 , (char*)"ServerType" \}{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SETDEF_FIDS} = \{4, (char*)"FIDS"\}{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SETDEF_NAMES} = \{5, (char*)"NAMES"\}{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SETDEF_NUMENTRIES} = \{10, (char*)"NUMENTRIES"\}{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SETDEF_TYPES} = \{5, (char*)"TYPES"\}{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SINGLE_OPEN} = \{ 10 , (char*)"SingleOpen" \}{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SNAPSHOT_SERVER_HOST} = \{ 18, (char*)"SnapshotServerHost" \}{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SNAPSHOT_SERVER_PORT} = \{ 18, (char*)"SnapshotServerPort" \}{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SOURCE_MIROR_MODE} = \{ 19 , (char*)"SourceMirroringMode" \}{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SOURCE_MIRROR_MODE} = \{ 19 , (char*)"SourceMirroringMode" \}{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_STATUS} = \{ 6 , (char*)"Status" \}{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_STREAMING_CHANNEL_ID} = \{ 18, (char*)"StreamingChannelId" \}{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_STREAMING_MCAST_CHANNELS} = \{ 26, (char*)"StreamingMulticastChannels" \}{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPORT_BATCH} = \{ 20 , (char*)"SupportBatchRequests" \}{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPORT_ENH_SL} = \{ 25 , (char*)"SupportEnhancedSymbolList" \}{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPORT_OPR} = \{ 27 , (char*)"SupportOptimizedPauseResume" \}{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPORT_POST} = \{ 14 , (char*)"SupportOMMPost" \}{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPORT_PR} = \{ 18 , (char*)"SupportPauseResume" \}{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPORT_PROVIDER_DICTIONARY_DOWNLOAD} = \{ 33 , (char*)"SupportProviderDictionaryDownload" \}{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPORT_STANDBY} = \{ 14 , (char*)"SupportStandby" \}{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPORT_VIEW} = \{ 19 , (char*)"SupportViewRequests" \}{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPS_OOB_SNAPSHOTS} = \{ 26 , (char*)"SupportsOutOfBandSnapshots" \}{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SUPPS_QOS_RANGE} = \{ 16 , (char*)"SupportsQoSRange" \}{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SVC_STATE} = \{ 12 , (char*)"ServiceState" \}{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SYMBOL_LIST_BEHAVIORS} = \{ 20 , (char*)":SymbolListBehaviors" \}{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_SYSTEM_ID} = \{ 8 , (char*)"SystemID" \}{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_TEXT} = \{ 4 , (char*)"Text" \}{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_TYPE} = \{ 4 , (char*)"Type" \}{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_UPDATE_BUFFER_LIMIT} = \{ 17 , (char*)"UpdateBufferLimit" \}{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_VENDOR} = \{ 6 , (char*)"Vendor" \}{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_VERSION} = \{ 7 , (char*)"Version" \}{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_VIEW_DATA} = \{ 9 , (char*)":ViewData" \}{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_VIEW_TYPE} = \{ 9 , (char*)":ViewType" \}{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_WARMSTANDBY_INFO} = \{ 15 , (char*)"WarmStandbyInfo" \}{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_WARMSTANDBY_MODE} = \{ 15 , (char*)"WarmStandbyMode" \}{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RDMEnhancedSymbolListSupportFlags\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RDMEnhancedSymbolListSupportFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJH" }{}}{\fldrslt {\cs37\ul\cf2 RDMEnhancedSymbolListSupportFlags}}}
}}
\par
{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_SYMBOL_LIST_SUPPORT_NAMES_ONLY\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RDM_SYMBOL_LIST_SUPPORT_NAMES_ONLY}
{\b {\i RDM_SYMBOL_LIST_SUPPORT_NAMES_ONLY{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0) Supports names only, no additional functionality. \par
}{\xe \v RDM_SYMBOL_LIST_SUPPORT_DATA_STREAMS\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RDM_SYMBOL_LIST_SUPPORT_DATA_STREAMS}
{\b {\i RDM_SYMBOL_LIST_SUPPORT_DATA_STREAMS{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x1) Supports symbol list data streams. \par
}}
\par
{
Definition at line 255 of file rsslRDM.h.}\par
}
{\xe \v RDMSymbolListDataStreamRequestFlags\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RDMSymbolListDataStreamRequestFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJK" }{}}{\fldrslt {\cs37\ul\cf2 RDMSymbolListDataStreamRequestFlags}}}
}}
\par
{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_SYMBOL_LIST_NAMES_ONLY\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RDM_SYMBOL_LIST_NAMES_ONLY}
{\b {\i RDM_SYMBOL_LIST_NAMES_ONLY{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0) Request names only. \par
}{\xe \v RDM_SYMBOL_LIST_DATA_STREAMS\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RDM_SYMBOL_LIST_DATA_STREAMS}
{\b {\i RDM_SYMBOL_LIST_DATA_STREAMS{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x1) Request symbol list data streams. \par
}{\xe \v RDM_SYMBOL_LIST_DATA_SNAPSHOTS\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RDM_SYMBOL_LIST_DATA_SNAPSHOTS}
{\b {\i RDM_SYMBOL_LIST_DATA_SNAPSHOTS{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x2) Request symbol list data snapshots. \par
}}
\par
{
Definition at line 264 of file rsslRDM.h.}\par
}
{\xe \v RsslDomainTypes\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RsslDomainTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDomainTypes}}}
}}
\par
{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_DMT_LOGIN\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_LOGIN}
{\b {\i RSSL_DMT_LOGIN{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Login Message \par
}{\xe \v RSSL_DMT_SOURCE\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_SOURCE}
{\b {\i RSSL_DMT_SOURCE{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Source Message \par
}{\xe \v RSSL_DMT_DICTIONARY\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_DICTIONARY}
{\b {\i RSSL_DMT_DICTIONARY{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Dictionary Message \par
}{\xe \v RSSL_DMT_MARKET_PRICE\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_MARKET_PRICE}
{\b {\i RSSL_DMT_MARKET_PRICE{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(6) Market Price Message \par
}{\xe \v RSSL_DMT_MARKET_BY_ORDER\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_MARKET_BY_ORDER}
{\b {\i RSSL_DMT_MARKET_BY_ORDER{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(7) Market by Order/Order Book Message \par
}{\xe \v RSSL_DMT_MARKET_BY_PRICE\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_MARKET_BY_PRICE}
{\b {\i RSSL_DMT_MARKET_BY_PRICE{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(8) Market by Price/Market Depth Message \par
}{\xe \v RSSL_DMT_MARKET_MAKER\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_MARKET_MAKER}
{\b {\i RSSL_DMT_MARKET_MAKER{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(9) Market Maker Message \par
}{\xe \v RSSL_DMT_SYMBOL_LIST\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_SYMBOL_LIST}
{\b {\i RSSL_DMT_SYMBOL_LIST{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(10) Symbol List Messages \par
}{\xe \v RSSL_DMT_SERVICE_PROVIDER_STATUS\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_SERVICE_PROVIDER_STATUS}
{\b {\i RSSL_DMT_SERVICE_PROVIDER_STATUS{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(11) Service Provider Status domain, used with Elektron Pulse \par
}{\xe \v RSSL_DMT_HISTORY\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_HISTORY}
{\b {\i RSSL_DMT_HISTORY{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(12) History Message \par
}{\xe \v RSSL_DMT_HEADLINE\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_HEADLINE}
{\b {\i RSSL_DMT_HEADLINE{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(13) Headline Message \par
}{\xe \v RSSL_DMT_STORY\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_STORY}
{\b {\i RSSL_DMT_STORY{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(14) Story Message \par
}{\xe \v RSSL_DMT_REPLAYHEADLINE\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_REPLAYHEADLINE}
{\b {\i RSSL_DMT_REPLAYHEADLINE{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(15) Replay Headline Message \par
}{\xe \v RSSL_DMT_REPLAYSTORY\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_REPLAYSTORY}
{\b {\i RSSL_DMT_REPLAYSTORY{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(16) Replay Story Message \par
}{\xe \v RSSL_DMT_TRANSACTION\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_TRANSACTION}
{\b {\i RSSL_DMT_TRANSACTION{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(17) Transaction Message \par
}{\xe \v RSSL_DMT_YIELD_CURVE\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_YIELD_CURVE}
{\b {\i RSSL_DMT_YIELD_CURVE{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(22) Yield Curve \par
}{\xe \v RSSL_DMT_CONTRIBUTION\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_CONTRIBUTION}
{\b {\i RSSL_DMT_CONTRIBUTION{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(27) Contribution domain for user-stream contributions \par
}{\xe \v RSSL_DMT_ANALYTICS\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_ANALYTICS}
{\b {\i RSSL_DMT_ANALYTICS{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(30) Analitics content \par
}{\xe \v RSSL_DMT_REFERENCE\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_REFERENCE}
{\b {\i RSSL_DMT_REFERENCE{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(31) Reference content \par
}{\xe \v RSSL_DMT_NEWS_TEXT_ANALYTICS\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_NEWS_TEXT_ANALYTICS}
{\b {\i RSSL_DMT_NEWS_TEXT_ANALYTICS{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(33) News Text Analytics domain for machine readable news content \par
}{\xe \v RSSL_DMT_ECONOMIC_INDICATOR\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_ECONOMIC_INDICATOR}
{\b {\i RSSL_DMT_ECONOMIC_INDICATOR{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(34) Economic Indicator content \par
}{\xe \v RSSL_DMT_POLL\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_POLL}
{\b {\i RSSL_DMT_POLL{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(35) Poll content \par
}{\xe \v RSSL_DMT_FORECAST\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_FORECAST}
{\b {\i RSSL_DMT_FORECAST{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(36) Forecast content \par
}{\xe \v RSSL_DMT_MARKET_BY_TIME\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_MARKET_BY_TIME}
{\b {\i RSSL_DMT_MARKET_BY_TIME{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Market By Time content \par
}{\xe \v RSSL_DMT_SYSTEM\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_SYSTEM}
{\b {\i RSSL_DMT_SYSTEM{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(127) System domain for use with domain netural content (e.g. tunnel stream creation) \par
}{\xe \v RSSL_DMT_MAX_RESERVED\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_MAX_RESERVED}
{\b {\i RSSL_DMT_MAX_RESERVED{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(127) Maximum reserved message type value \par
}{\xe \v RSSL_DMT_MAX_VALUE\:Thomson Reuters Domain Models}
{\xe \v Thomson Reuters Domain Models\:RSSL_DMT_MAX_VALUE}
{\b {\i RSSL_DMT_MAX_VALUE{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(255) Maximum value for a message type \par
}}
\par
{
Definition at line 23 of file rsslRDM.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Thomson Reuters Domain Model Helper and Utility functions\par \pard\plain 
{\tc\tcl2 \v Thomson Reuters Domain Model Helper and Utility functions}
{\xe \v Thomson Reuters Domain Model Helper and Utility functions}
{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed information about the Thomson Reuters Domain Model Helper and Utility functions. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDomainTypeFromString}}}
 (char *domainTypeString)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns domainType enummeration value from a domain type string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDomainTypeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 domainType)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided domain type enumeration to a string. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslDomainTypeFromString\:Thomson Reuters Domain Model Helper and Utility functions}
{\xe \v Thomson Reuters Domain Model Helper and Utility functions\:rsslDomainTypeFromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDomainTypeFromString}}}
 (char * {\i domainTypeString})}}
\par
{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i domainTypeString} \cell }{domain type string representation. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Eight bit unsigned integer containing the domain type enumeration that corresponds to the provided string. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDomainTypes}}} \par
}}}
{\xe \v rsslDomainTypeToString\:Thomson Reuters Domain Model Helper and Utility functions}
{\xe \v Thomson Reuters Domain Model Helper and Utility functions\:rsslDomainTypeToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API const char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDomainTypeToString}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i domainType})}}
\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i domainType} \cell }{Domain type enumeration to translate to string. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Null terminated character string containing the name of the domain type. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDomainTypes}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Transport Common Data Structures and Enumerations\par \pard\plain 
{\tc\tcl2 \v RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations}
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Common Data Structures and Enumerations are used by the RSSL API to store information. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Error message. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RSSL_MAX_FLUSH_STRATEGY}}}
\~ 32\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum size flush strategy for RSSL. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslSocket}}}
{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Socket Identifier Type. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelState}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CH_STATE_CLOSED}}}
 =  -1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CH_STATE_INACTIVE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CH_STATE_INITIALIZING}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CH_STATE_ACTIVE}}}
 =  2
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Channel states. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslCompTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_COMP_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_COMP_ZLIB}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_COMP_LZ4}}}
 =  0x02
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Supported Compression types. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPI" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_INIT}}}
 =  -1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_HTTP}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_UNIDIR_SHMEM}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_RELIABLE_MCAST}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SEQ_MCAST}}}
 =  6
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Connection types. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslIoctlCodes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MAX_NUM_BUFFERS}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_NUM_GUARANTEED_BUFFERS}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_HIGH_WATER_MARK}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SYSTEM_READ_BUFFERS}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SYSTEM_WRITE_BUFFERS}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_PRIORITY_FLUSH_ORDER}}}
 =  7, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SERVER_NUM_POOL_BUFFERS}}}
 =  8, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_COMPRESSION_THRESHOLD}}}
 =  9, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SERVER_PEAK_BUF_RESET}}}
 =  10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRACE}}}
 =  11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_REGISTER_HASH_ID}}}
 =  14, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_UNREGISTER_HASH_ID}}}
 =  15
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL IOCtl codes. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQD" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetUserName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *userName)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQE" }{}}{\fldrslt {\cs37\ul\cf2 rsslHostByName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *hostName, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 *ipAddr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the IP address of a hostname. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_RSSL_MAX_FLUSH_STRATEGY\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_RSSL_MAX_FLUSH_STRATEGY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RSSL_MAX_FLUSH_STRATEGY}}}
\~ 32}}
\par
{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQF" }{}}{\fldrslt {\cs37\ul\cf2 rsslWrite}}} \par
rsslIoctl \par
}}{
Definition at line 32 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslChannelState\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RsslChannelState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelState}}}
}}
\par
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_CH_STATE_CLOSED\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CH_STATE_CLOSED}
{\b {\i RSSL_CH_STATE_CLOSED{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-1) Channel has been CLOSED. \par
}{\xe \v RSSL_CH_STATE_INACTIVE\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CH_STATE_INACTIVE}
{\b {\i RSSL_CH_STATE_INACTIVE{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Channel is in the INACTIVE state. \par
}{\xe \v RSSL_CH_STATE_INITIALIZING\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CH_STATE_INITIALIZING}
{\b {\i RSSL_CH_STATE_INITIALIZING{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Channel is in the INITIALIZING state. \par
}{\xe \v RSSL_CH_STATE_ACTIVE\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CH_STATE_ACTIVE}
{\b {\i RSSL_CH_STATE_ACTIVE{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Channel is in the ACTIVE state. \par
}}
\par
{
Definition at line 37 of file rsslTransport.h.}\par
}
{\xe \v RsslCompTypes\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RsslCompTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslCompTypes}}}
}}
\par
{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_COMP_NONE\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_COMP_NONE}
{\b {\i RSSL_COMP_NONE{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) No compression will be negotiated. \par
}{\xe \v RSSL_COMP_ZLIB\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_COMP_ZLIB}
{\b {\i RSSL_COMP_ZLIB{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) RSSL will attempt to use Zlib compression. \par
}{\xe \v RSSL_COMP_LZ4\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_COMP_LZ4}
{\b {\i RSSL_COMP_LZ4{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) RSSL will attempt to use LZ4 compression \par
}}
\par
{
Definition at line 48 of file rsslTransport.h.}\par
}
{\xe \v RsslConnectionTypes\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RsslConnectionTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPI" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionTypes}}}
}}
\par
{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_CONN_TYPE_INIT\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CONN_TYPE_INIT}
{\b {\i RSSL_CONN_TYPE_INIT{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(-1) Channel is not connected \par
}{\xe \v RSSL_CONN_TYPE_SOCKET\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CONN_TYPE_SOCKET}
{\b {\i RSSL_CONN_TYPE_SOCKET{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Channel is a standard TCP socket connection type \par
}{\xe \v RSSL_CONN_TYPE_ENCRYPTED\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CONN_TYPE_ENCRYPTED}
{\b {\i RSSL_CONN_TYPE_ENCRYPTED{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Channel is encrypted \par
}{\xe \v RSSL_CONN_TYPE_HTTP\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CONN_TYPE_HTTP}
{\b {\i RSSL_CONN_TYPE_HTTP{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Channel is an HTTP connection based tunneling type \par
}{\xe \v RSSL_CONN_TYPE_UNIDIR_SHMEM\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CONN_TYPE_UNIDIR_SHMEM}
{\b {\i RSSL_CONN_TYPE_UNIDIR_SHMEM{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Channel is using a shared memory connection \par
}{\xe \v RSSL_CONN_TYPE_RELIABLE_MCAST\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CONN_TYPE_RELIABLE_MCAST}
{\b {\i RSSL_CONN_TYPE_RELIABLE_MCAST{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Channel is a reliable multicast based connection. This can be on a unified/mesh network where send and receive networks are the same or a segmented network where send and receive networks are different \par
}{\xe \v RSSL_CONN_TYPE_SEQ_MCAST\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_CONN_TYPE_SEQ_MCAST}
{\b {\i RSSL_CONN_TYPE_SEQ_MCAST{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(6) Channel is an unreliable, sequenced multicast connection for reading from an Elektron Direct Feed system. This is a client-only, read-only transport. This transport is supported on Linux only. \par
}}
\par
{
Definition at line 80 of file rsslTransport.h.}\par
}
{\xe \v RsslIoctlCodes\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RsslIoctlCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslIoctlCodes}}}
}}
\par
{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid rsslIoctl \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQG" }{}}{\fldrslt {\cs37\ul\cf2 rsslServerIoctl}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_MAX_NUM_BUFFERS\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_MAX_NUM_BUFFERS}
{\b {\i RSSL_MAX_NUM_BUFFERS{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Channel: Used for changing the max number of buffers for this channel \par
}{\xe \v RSSL_NUM_GUARANTEED_BUFFERS\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_NUM_GUARANTEED_BUFFERS}
{\b {\i RSSL_NUM_GUARANTEED_BUFFERS{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Channel: Used for changing the number of guaranteed buffers for this channel \par
}{\xe \v RSSL_HIGH_WATER_MARK\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_HIGH_WATER_MARK}
{\b {\i RSSL_HIGH_WATER_MARK{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Channel: Used to set the upper buffer usage threshold for this channel \par
}{\xe \v RSSL_SYSTEM_READ_BUFFERS\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_SYSTEM_READ_BUFFERS}
{\b {\i RSSL_SYSTEM_READ_BUFFERS{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Channel: Used to change the number of system read buffers (SO_RCVBUF) for this channel \par
}{\xe \v RSSL_SYSTEM_WRITE_BUFFERS\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_SYSTEM_WRITE_BUFFERS}
{\b {\i RSSL_SYSTEM_WRITE_BUFFERS{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Channel: Used to change the number of system write buffers (SO_SNDBUF) for this channel (6) Reserved \par
}{\xe \v RSSL_PRIORITY_FLUSH_ORDER\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_PRIORITY_FLUSH_ORDER}
{\b {\i RSSL_PRIORITY_FLUSH_ORDER{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(7) Channel: Used to set the priority flush order for this channel \par
}{\xe \v RSSL_SERVER_NUM_POOL_BUFFERS\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_SERVER_NUM_POOL_BUFFERS}
{\b {\i RSSL_SERVER_NUM_POOL_BUFFERS{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(8) Server: Used to increase or decrease the number of server shared pool buffers \par
}{\xe \v RSSL_COMPRESSION_THRESHOLD\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_COMPRESSION_THRESHOLD}
{\b {\i RSSL_COMPRESSION_THRESHOLD{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(9) Channel: When compression is on, this value is the smallest size packet that will be compressed (default is 30 bytes) \par
}{\xe \v RSSL_SERVER_PEAK_BUF_RESET\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_SERVER_PEAK_BUF_RESET}
{\b {\i RSSL_SERVER_PEAK_BUF_RESET{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(10) Server: Used to reset the peak number of server shared pool buffers \par
}{\xe \v RSSL_TRACE\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_TRACE}
{\b {\i RSSL_TRACE{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(11) Channel: used to turn RWF message tracing on and off (12) Reserved (13) Reserved \par
}{\xe \v RSSL_REGISTER_HASH_ID\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_REGISTER_HASH_ID}
{\b {\i RSSL_REGISTER_HASH_ID{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(14) Channel: Used with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_RELIABLE_MCAST}}} connections. Registers a hash so that a filtering-enabled channel allows it. \par
}{\xe \v RSSL_UNREGISTER_HASH_ID\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:RSSL_UNREGISTER_HASH_ID}
{\b {\i RSSL_UNREGISTER_HASH_ID{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(15) Channel: Used with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_RELIABLE_MCAST}}} connections. Unregisters a hash so that a filtering-enabled channel no longer allows it. \par
}}
\par
{
Definition at line 59 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslGetUserName\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:rsslGetUserName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQD" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetUserName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i userName})}}
\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par This function gets the user name that the owner of the current process is logged in under. The returned user name is truncated if length of user name from machine is greater than length of userName->length.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i userName} \cell }{User name of user \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value \par
}}}
{\xe \v rsslHostByName\:RSSL Transport Common Data Structures and Enumerations}
{\xe \v RSSL Transport Common Data Structures and Enumerations\:rsslHostByName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQE" }{}}{\fldrslt {\cs37\ul\cf2 rsslHostByName}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i hostName}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 * {\i ipAddr})}}
\par
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par This function gets the IP address of a hostname in host byte order.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hostName} \cell }{Hostname to get IP address for \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ipAddr} \cell }{IP address of the hostname \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Initialization and Uninitialization\par \pard\plain 
{\tc\tcl2 \v RSSL Initialization and Uninitialization}
{\xe \v RSSL Initialization and Uninitialization}
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are used to allocate internal memory and boot strap any underlying dependencies used by the RSSL Transport. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQH" }{}}{\fldrslt {\cs37\ul\cf2 RsslInitializeExOpts}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure that provides additional initialization information for the RSSL API. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQI" }{}}{\fldrslt {\cs37\ul\cf2 rsslJITOpts}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Just-In-Time loaded library configuration options. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_INITIALIZE_EX_OPTS}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_LOCK_NONE}}}
, RSSL_INIT_SSL_LIB_JIT_OPTS \}{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static initializer for {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQH" }{}}{\fldrslt {\cs37\ul\cf2 RsslInitializeExOpts}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_SSL_LIB_JIT_OPTS}\~ \{ NULL, NULL \}{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQM" }{}}{\fldrslt {\cs37\ul\cf2 RsslLockingTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_LOCK_NONE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_LOCK_GLOBAL_AND_CHANNEL}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_LOCK_GLOBAL}}}
 =  2
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options of which locks are enabled in RSSL. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQP" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitialize}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQM" }{}}{\fldrslt {\cs37\ul\cf2 RsslLockingTypes}}}
 rsslLocking, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the RSSL API and all internal members. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitializeEx}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQH" }{}}{\fldrslt {\cs37\ul\cf2 RsslInitializeExOpts}}}
 *rsslInitOpts, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the RSSL API and all internal members. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQR" }{}}{\fldrslt {\cs37\ul\cf2 rsslUninitialize}}}
 ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uninitializes the RSSL API and all internal members. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslLockingTypes\:RSSL Initialization and Uninitialization}
{\xe \v RSSL Initialization and Uninitialization\:RsslLockingTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQM" }{}}{\fldrslt {\cs37\ul\cf2 RsslLockingTypes}}}
}}
\par
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQP" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitialize}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_LOCK_NONE\:RSSL Initialization and Uninitialization}
{\xe \v RSSL Initialization and Uninitialization\:RSSL_LOCK_NONE}
{\b {\i RSSL_LOCK_NONE{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) No locking will be enabled. Use if only one thread is using RSSL. \par
}{\xe \v RSSL_LOCK_GLOBAL_AND_CHANNEL\:RSSL Initialization and Uninitialization}
{\xe \v RSSL Initialization and Uninitialization\:RSSL_LOCK_GLOBAL_AND_CHANNEL}
{\b {\i RSSL_LOCK_GLOBAL_AND_CHANNEL{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Global lock and per-channel locks enabled. Can access functions from different threads \par
}{\xe \v RSSL_LOCK_GLOBAL\:RSSL Initialization and Uninitialization}
{\xe \v RSSL Initialization and Uninitialization\:RSSL_LOCK_GLOBAL}
{\b {\i RSSL_LOCK_GLOBAL{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Only the global lock is enabled. RsslChannels can be used by different threads, however each channel should not be used by more than one thread. \par
}}
\par
{
Definition at line 182 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslInitialize\:RSSL Initialization and Uninitialization}
{\xe \v RSSL Initialization and Uninitialization\:rsslInitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQP" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitialize}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQM" }{}}{\fldrslt {\cs37\ul\cf2 RsslLockingTypes}}}
 {\i rsslLocking}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par This is the first function called when using the RSSL. It initializes internal data structures and pre-allocates some memory.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rsslLocking} \cell }{Method of locking used. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value or RsslInitRets value. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQM" }{}}{\fldrslt {\cs37\ul\cf2 RsslLockingTypes}}} \par
}}}
{\xe \v rsslInitializeEx\:RSSL Initialization and Uninitialization}
{\xe \v RSSL Initialization and Uninitialization\:rsslInitializeEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitializeEx}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQH" }{}}{\fldrslt {\cs37\ul\cf2 RsslInitializeExOpts}}}
 * {\i rsslInitOpts}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par This is the first function called when using the RSSL. It initializes internal data structures and pre-allocates some memory.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rsslInitOpts} \cell }{Initialize options. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value or RsslInitRets value. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQH" }{}}{\fldrslt {\cs37\ul\cf2 RsslInitializeExOpts}}} \par
}}}
{\xe \v rsslUninitialize\:RSSL Initialization and Uninitialization}
{\xe \v RSSL Initialization and Uninitialization\:rsslUninitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQR" }{}}{\fldrslt {\cs37\ul\cf2 rsslUninitialize}}}
 ()}}
\par
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par This is the last function called when using the RSSL. It uninitializes internal data structures and deletes any allocated memory.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Server Operations\par \pard\plain 
{\tc\tcl2 \v RSSL Server Operations}
{\xe \v RSSL Server Operations}
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Server structure is used to create and maintain a listening socket that allows the application to accept connections created with rsslConnect. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Server structure returned via the rsslBind call. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQT" }{}}{\fldrslt {\cs37\ul\cf2 RsslServerInfo}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Server Info returned by rsslGetServerInfo call. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Bind Operation}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslBind function establishes a listening socket connection that can be used for both standard and HTTP rsslConnect connections. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQV" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetServerInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 *srvr, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQT" }{}}{\fldrslt {\cs37\ul\cf2 RsslServerInfo}}}
 *info, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets information about the server. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQW" }{}}{\fldrslt {\cs37\ul\cf2 rsslServerBufferUsage}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 *srvr, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the total number of used buffers for the server. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQG" }{}}{\fldrslt {\cs37\ul\cf2 rsslServerIoctl}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 *srvr, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslIoctlCodes}}}
 code, void *value, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows changing some I/O values programmatically for an Rssl Server. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslGetServerInfo\:RSSL Server Operations}
{\xe \v RSSL Server Operations\:rsslGetServerInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQV" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetServerInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 * {\i srvr}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQT" }{}}{\fldrslt {\cs37\ul\cf2 RsslServerInfo}}}
 * {\i info}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par If information about the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}} is needed, such as peakBufferUsage, this function can be called to retrieve this information.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i srvr} \cell }{RSSL Server to get information about \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i info} \cell }{RSSL Server Info structure to be populated \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value \par
}}}
{\xe \v rsslServerBufferUsage\:RSSL Server Operations}
{\xe \v RSSL Server Operations\:rsslServerBufferUsage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQW" }{}}{\fldrslt {\cs37\ul\cf2 rsslServerBufferUsage}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 * {\i srvr}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use: \par This function can be called to find out the number of used buffers for the server. This, in combination with the bufferPoolSize used as input to the rsslBind call, can be used to monitor and potentially throttle buffer usage.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i srvr} \cell }{RSSL Server to obtain buffer usage for \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslInt32 If less than 0, this is an RsslRet value, otherwise it is the total number of buffers in use by the server \par
}}}
{\xe \v rsslServerIoctl\:RSSL Server Operations}
{\xe \v RSSL Server Operations\:rsslServerIoctl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQG" }{}}{\fldrslt {\cs37\ul\cf2 rsslServerIoctl}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 * {\i srvr}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslIoctlCodes}}}
 {\i code}, void * {\i value}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par If an I/O value needs to be changed for a server, this is used. Currently this only supports changing the shared pool size.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i srvr} \cell }{RSSL Server to change I/O value for \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i code} \cell }{Code of I/O Option to change \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Value to change Option to \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Bind Operation\par \pard\plain 
{\tc\tcl2 \v RSSL Bind Operation}
{\xe \v RSSL Bind Operation}
{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslBind function establishes a listening socket connection that can be used for both standard and HTTP rsslConnect connections. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Bind Operation Options}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 rsslBind}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}}
 *opts, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an RSSL Server by binding to a port. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslBind\:RSSL Bind Operation}
{\xe \v RSSL Bind Operation\:rsslBind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 rsslBind}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}}
 * {\i opts}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Initialize {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Set {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}} to desired values\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call rsslBind to create {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opts} \cell }{Options used when binding \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslServer* Bound RSSL server or NULL \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Bind Operation Options\par \pard\plain 
{\tc\tcl2 \v RSSL Bind Operation Options}
{\xe \v RSSL Bind Operation Options}
{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Bind Options used in the rsslBind call. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BIND_OPTS}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_COMP_NONE}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}
, 60, 20, 6144, 50, 50, 10, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 0, 0, 0, 0, 0, 0, RSSL_INIT_TCP_OPTS, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Bind Options initialization. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearBindOpts}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}}
 *opts)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears RSSL Bind Options. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_BIND_OPTS\:RSSL Bind Operation Options}
{\xe \v RSSL Bind Operation Options\:RSSL_INIT_BIND_OPTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BIND_OPTS}}}
\~ \{ 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_COMP_NONE}}}
, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_TRUE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}
, 60, 20, 6144, 50, 50, 10, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 0, 0, 0, 0, 0, 0, RSSL_INIT_TCP_OPTS, 0 \}}}
\par
{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}} \par
}}{
Definition at line 794 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearBindOpts\:RSSL Bind Operation Options}
{\xe \v RSSL Bind Operation Options\:rsslClearBindOpts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearBindOpts}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}}
 * {\i opts})}}
\par
{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This initializes the RSSL Bind options and is typically used instead of the RSSL_INIT_BIND_OPTS initializer. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opts} \cell }{Rssl Bind Options \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions}}} \par
}}{
Definition at line 804 of file rsslTransport.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Channel Operations\par \pard\plain 
{\tc\tcl2 \v RSSL Channel Operations}
{\xe \v RSSL Channel Operations}
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Channel structure is used to represent a connection between two components that can send and receive information across a network. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Channel structure returned via {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAccept()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect()}}} calls. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Client Channel Connection Operation}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslConnect function establishes an outbound connection to a server. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Server Channel Accept Operation}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslAccept function is used to begin the accepting process for an incoming connection request. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Client and Server Channel Operations}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are used by both the Client and Server to finalize the rsslChannel initialization, read from the channel, write to the channel, and request buffers from the shared pool buffers. \par
}}}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Client Channel Connection Operation\par \pard\plain 
{\tc\tcl2 \v RSSL Client Channel Connection Operation}
{\xe \v RSSL Client Channel Connection Operation}
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslConnect function establishes an outbound connection to a server. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Client Channel Connection Options}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}
 *opts, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connects a client to a listening server. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRF" }{}}{\fldrslt {\cs37\ul\cf2 rsslReconnectClient}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reconnects a client to a listening server - used for tunneling connection types. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslConnect\:RSSL Client Channel Connection Operation}
{\xe \v RSSL Client Channel Connection Operation\:rsslConnect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}
 * {\i opts}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Initialize {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Set {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} to desired values\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call rsslConnect to create {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Read or write with the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}\par\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opts} \cell }{Options used when connecting \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslChannel* Connected RSSL channel or NULL \par
}}}
{\xe \v rsslReconnectClient\:RSSL Client Channel Connection Operation}
{\xe \v RSSL Client Channel Connection Operation\:rsslReconnectClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRF" }{}}{\fldrslt {\cs37\ul\cf2 rsslReconnectClient}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call rsslReconnectClient with already active {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function only performs a reconnection for client connections and only when tunnelType is enabled. This function is designed so the application can proactively bridge a connection to keep data flow alive through proxy servers.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel to reconnect \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet of Success or failure \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Client Channel Connection Options\par \pard\plain 
{\tc\tcl2 \v RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options}
{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRG" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionInfo}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring the network connection. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Connect Options used in the rsslConnect call. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRH" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncryptionOpts}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring an encrypted tunneled connection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}). see rsslConnect see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRI" }{}}{\fldrslt {\cs37\ul\cf2 RsslMCastOpts}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring multicast specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_RELIABLE_MCAST}}}). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslProxyOpts}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRK" }{}}{\fldrslt {\cs37\ul\cf2 RsslSegmentedNetwork}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring a segmented network (seperate send and receive networks). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeqMCastOpts}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring sequenced multicast specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SEQ_MCAST}}}). see rsslConnect see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRM" }{}}{\fldrslt {\cs37\ul\cf2 RsslShmemOpts}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring shared memory specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_UNIDIR_SHMEM}}}). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslTcpOpts}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring TCP specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_HTTP}}}). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRO" }{}}{\fldrslt {\cs37\ul\cf2 RsslUnifiedNetwork}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring a unified/fully connected mesh network. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_CONNECT_OPTS}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}
, RSSL_INIT_CONNECTION_INFO, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_COMP_NONE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 60, 50, 10, 0, 0, 0, 0, 0, 0, RSSL_INIT_TCP_OPTS, RSSL_INIT_MCAST_OPTS, RSSL_INIT_SHMEM_OPTS, RSSL_INIT_SEQ_MCAST_OPTS, RSSL_INIT_PROXY_OPTS, 0, RSSL_INIT_ENCRYPTION_OPTS \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Connect Options initialization. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_CONNECTION_INFO}\~ \{\{ 0, 0, 0, 0, 0, 0\}\}{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_ENCRYPTION_OPTS}\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ENC_TLSV1}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ENC_TLSV1_1}}}
 | {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ENC_TLSV1_2}}}
\}{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_MCAST_OPTS}\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MCAST_NO_FLAGS}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 5, 7, 3, 1, 4, 3, 3, 3, 65535, 128, 190000, 180000, NULL, NULL, NULL, 0, 0, NULL, 0 \}{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_PROXY_OPTS}\~ \{0, 0\}{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_SEQ_MCAST_OPTS}\~ \{ 3000, 0 \}{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_SHMEM_OPTS}\~ \{ 0 \}{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_TCP_OPTS}\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
 \}{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSB" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncryptionProtocolTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ENC_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ENC_TLSV1}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ENC_TLSV1_1}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ENC_TLSV1_2}}}
 =  0x04
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMCastFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MCAST_NO_FLAGS}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MCAST_FILTERING_ON}}}
 =  0x01
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearConnectOpts}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}
 *opts)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears RSSL Connect Options. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_CONNECT_OPTS\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:RSSL_INIT_CONNECT_OPTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_CONNECT_OPTS}}}
\~ \{ 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}
, RSSL_INIT_CONNECTION_INFO, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_COMP_NONE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 60, 50, 10, 0, 0, 0, 0, 0, 0, RSSL_INIT_TCP_OPTS, RSSL_INIT_MCAST_OPTS, RSSL_INIT_SHMEM_OPTS, RSSL_INIT_SEQ_MCAST_OPTS, RSSL_INIT_PROXY_OPTS, 0, RSSL_INIT_ENCRYPTION_OPTS \}}}
\par
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} \par
}}{
Definition at line 556 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslEncryptionProtocolTypes\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:RsslEncryptionProtocolTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSB" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncryptionProtocolTypes}}}
}}
\par
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_ENC_NONE\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:RSSL_ENC_NONE}
{\b {\i RSSL_ENC_NONE{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No encryption. \par
}{\xe \v RSSL_ENC_TLSV1\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:RSSL_ENC_TLSV1}
{\b {\i RSSL_ENC_TLSV1{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) Encryption using TLSv1 protocol \par
}{\xe \v RSSL_ENC_TLSV1_1\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:RSSL_ENC_TLSV1_1}
{\b {\i RSSL_ENC_TLSV1_1{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) Encryption using TLSv1.1 protocol \par
}{\xe \v RSSL_ENC_TLSV1_2\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:RSSL_ENC_TLSV1_2}
{\b {\i RSSL_ENC_TLSV1_2{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x08) Encryption using TLSv1.2 protocol \par
}}
\par
{
Definition at line 455 of file rsslTransport.h.}\par
}
{\xe \v RsslMCastFlags\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:RsslMCastFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMCastFlags}}}
}}
\par
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_MCAST_NO_FLAGS\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:RSSL_MCAST_NO_FLAGS}
{\b {\i RSSL_MCAST_NO_FLAGS{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
None. \par
}{\xe \v RSSL_MCAST_FILTERING_ON\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:RSSL_MCAST_FILTERING_ON}
{\b {\i RSSL_MCAST_FILTERING_ON{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables hash-based filtering of incoming messages. \par
}}
\par
{
Definition at line 390 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearConnectOpts\:RSSL Client Channel Connection Options}
{\xe \v RSSL Client Channel Connection Options\:rsslClearConnectOpts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearConnectOpts}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}
 * {\i opts})}}
\par
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This initializes the Rssl Connect Options and is typically used instead of RSSL_INIT_CONNECT_OPTS initializer. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opts} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} \par
}}{
Definition at line 569 of file rsslTransport.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Server Channel Accept Operation\par \pard\plain 
{\tc\tcl2 \v RSSL Server Channel Accept Operation}
{\xe \v RSSL Server Channel Accept Operation}
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslAccept function is used to begin the accepting process for an incoming connection request. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Accept Operation Options}}}
\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Accept Operation Options\par \pard\plain 
{\tc\tcl2 \v RSSL Accept Operation Options}
{\xe \v RSSL Accept Operation Options}
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 RsslAcceptOptions}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Accept Options used in the rsslAccept call. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ACCEPT_OPTS}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Accept Options initialization. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAccept}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 *srvr, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 RsslAcceptOptions}}}
 *opts, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accepts an incoming connection and returns a channel which corresponds to it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearAcceptOpts}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 RsslAcceptOptions}}}
 *opts)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears RSSL Accept Options. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSK" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseServer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 *srvr, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Closes an RSSL Server. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_ACCEPT_OPTS\:RSSL Accept Operation Options}
{\xe \v RSSL Accept Operation Options\:RSSL_INIT_ACCEPT_OPTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ACCEPT_OPTS}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 0 \}}}
\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 RsslAcceptOptions}}} \par
}}{
Definition at line 883 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslAccept\:RSSL Accept Operation Options}
{\xe \v RSSL Accept Operation Options\:rsslAccept}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAccept}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 * {\i srvr}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 RsslAcceptOptions}}}
 * {\i opts}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par After a server is created using the rsslBind call, the rsslAccept call can be made. When the socketId of the server detects something to be read, this will check for incoming client connections. When a client successfully connects, a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} is returned which corresponds to this connection. This channel can be used to read or write with the connected client. If a clients connect message is not accepted (nakMount = RSSL_TRUE), a negative acknowledgment can be sent when the rsslInitChannel handshake is completed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i srvr} \cell }{RSSL Server to accept incoming connections on \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opts} \cell }{RSSL Accept Options \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslChannel* Accepted RSSL channel or NULL in failure. \par
}}}
{\xe \v rsslClearAcceptOpts\:RSSL Accept Operation Options}
{\xe \v RSSL Accept Operation Options\:rsslClearAcceptOpts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearAcceptOpts}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 RsslAcceptOptions}}}
 * {\i opts})}}
\par
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This initializes the Rssl Accept Options and is typically used instead of RSSL_INIT_ACCEPT_OPTS initializer. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opts} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 RsslAcceptOptions}}} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 RsslAcceptOptions}}} \par
}}{
Definition at line 893 of file rsslTransport.h.}\par
}
{\xe \v rsslCloseServer\:RSSL Accept Operation Options}
{\xe \v RSSL Accept Operation Options\:rsslCloseServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSK" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseServer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}
 * {\i srvr}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par When done using a Server, this call closes it. Active channels connected to this server will not be closed; this allows them to continue receiving data even if the server is not accepting more connections.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i srvr} \cell }{RSSL Server to close \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Client and Server Channel Operations\par \pard\plain 
{\tc\tcl2 \v RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations}
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
These functions are used by both the Client and Server to finalize the rsslChannel initialization, read from the channel, write to the channel, and request buffers from the shared pool buffers. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}} Information for the In Progress Connection State If a backward compatibility reconnection occurs, the file descriptor may change. This is how that information is relayed. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslNodeId}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslReadEx input arguments. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslReadEx output arguments. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Read Operations}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslRead function is used to read data received from the active rsslChannel. \par
}}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSQ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Write Operations}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslWrite function is used to write data to the active rsslChannel. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_IN_PROG_INFO}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_IP_NONE}}}
, 0, 0, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}} static initialization. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACST" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_READ_IN_ARGS}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_IN_NO_FLAGS}}}
 \}{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}} static initialization. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_READ_OUT_ARGS}}}
\~ \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_OUT_NO_FLAGS}}}
, 0, 0\}{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}} static initialization. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSX" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_IP_NONE}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_IP_FD_CHANGE}}}
 =  0x01
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslInProgFlags used when connection state is in progress Flags for the InProgress state. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadFlagsIn}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_IN_NO_FLAGS}}}
 =  0x00
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL readFlags in. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTA" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_OUT_NO_FLAGS}}}
 =  0x0000, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_OUT_FTGROUP_ID}}}
 =  0x0001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_OUT_NODE_ID}}}
 =  0x0002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_OUT_SEQNUM}}}
 =  0x0004, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_OUT_HASH_ID}}}
 =  0x0008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_OUT_UNICAST}}}
 =  0x0010, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_OUT_INSTANCE_ID}}}
 =  0x0020, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTH" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_READ_OUT_RETRANSMIT}}}
 =  0x0040
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL RsslReadOutFlags. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearInProgInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}}
 *inProgInfo)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}} structure for reuse. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearReadInArgs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}}
 *readInArgs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}} structure passed in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearReadOutArgs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}}
 *readOutArgs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}} structure passed in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTL" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseChannel}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Closes an RSSL Channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTM" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitChannel}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}}
 *inProg, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Continues channel initialization for non-blocking channels. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_IN_PROG_INFO\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_INIT_IN_PROG_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_IN_PROG_INFO}}}
\~ \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_IP_NONE}}}
, 0, 0, 0 \}}}
\par
{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearInProgInfo}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTM" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitChannel()}}} \par
}}{
Definition at line 984 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslInProgFlags\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RsslInProgFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSX" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgFlags}}}
}}
\par
{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTM" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitChannel}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_IP_NONE\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_IP_NONE}
{\b {\i RSSL_IP_NONE{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No change \par
}{\xe \v RSSL_IP_FD_CHANGE\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_IP_FD_CHANGE}
{\b {\i RSSL_IP_FD_CHANGE{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
File Descriptor change occurred \par
}}
\par
{
Definition at line 973 of file rsslTransport.h.}\par
}
{\xe \v RsslReadFlagsIn\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RsslReadFlagsIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadFlagsIn}}}
}}
\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTN" }{}}{\fldrslt {\cs37\ul\cf2 rsslReadEx}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_READ_IN_NO_FLAGS\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_READ_IN_NO_FLAGS}
{\b {\i RSSL_READ_IN_NO_FLAGS{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No read flags \par
}}
\par
{
Definition at line 1036 of file rsslTransport.h.}\par
}
{\xe \v RsslReadOutFlags\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RsslReadOutFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTA" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutFlags}}}
}}
\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTN" }{}}{\fldrslt {\cs37\ul\cf2 rsslReadEx}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_READ_OUT_NO_FLAGS\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_READ_OUT_NO_FLAGS}
{\b {\i RSSL_READ_OUT_NO_FLAGS{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No read flags \par
}{\xe \v RSSL_READ_OUT_FTGROUP_ID\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_READ_OUT_FTGROUP_ID}
{\b {\i RSSL_READ_OUT_FTGROUP_ID{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) set when a valid FT Group ID is returned \par
}{\xe \v RSSL_READ_OUT_NODE_ID\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_READ_OUT_NODE_ID}
{\b {\i RSSL_READ_OUT_NODE_ID{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) set when a valid NODE ID is returned \par
}{\xe \v RSSL_READ_OUT_SEQNUM\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_READ_OUT_SEQNUM}
{\b {\i RSSL_READ_OUT_SEQNUM{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) set when a seqnum is returned \par
}{\xe \v RSSL_READ_OUT_HASH_ID\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_READ_OUT_HASH_ID}
{\b {\i RSSL_READ_OUT_HASH_ID{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x08) set when a hash ID is returned \par
}{\xe \v RSSL_READ_OUT_UNICAST\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_READ_OUT_UNICAST}
{\b {\i RSSL_READ_OUT_UNICAST{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x10) set when the message was sent unicast to this node \par
}{\xe \v RSSL_READ_OUT_INSTANCE_ID\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_READ_OUT_INSTANCE_ID}
{\b {\i RSSL_READ_OUT_INSTANCE_ID{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x20) set when the message has an instance ID set \par
}{\xe \v RSSL_READ_OUT_RETRANSMIT\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:RSSL_READ_OUT_RETRANSMIT}
{\b {\i RSSL_READ_OUT_RETRANSMIT{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x40) indicates that this message is a retransmission of previous content \par
}}
\par
{
Definition at line 1057 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearInProgInfo\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:rsslClearInProgInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearInProgInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}}
 * {\i inProgInfo})}}
\par
{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_IN_PROG_INFO}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTM" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitChannel()}}} \par
}}{
Definition at line 990 of file rsslTransport.h.}\par
}
{\xe \v rsslClearReadInArgs\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:rsslClearReadInArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearReadInArgs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}}
 * {\i readInArgs})}}
\par
{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i readInArgs} \cell }{a pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}} structure to be cleared \cell }
{\row }
}
}{
Definition at line 1097 of file rsslTransport.h.}\par
}
{\xe \v rsslClearReadOutArgs\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:rsslClearReadOutArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearReadOutArgs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}}
 * {\i readOutArgs})}}
\par
{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i readOutArgs} \cell }{a pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}} structure to be cleared \cell }
{\row }
}
}{
Definition at line 1106 of file rsslTransport.h.}\par
}
{\xe \v rsslCloseChannel\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:rsslCloseChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTL" }{}}{\fldrslt {\cs37\ul\cf2 rsslCloseChannel}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par When done using a Channel, this call closes it.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel to close \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value \par
}}}
{\xe \v rsslInitChannel\:RSSL Client and Server Channel Operations}
{\xe \v RSSL Client and Server Channel Operations\:rsslInitChannel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTM" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitChannel}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}}
 * {\i inProg}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Connect using {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect()}}}\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab While Channel state is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CH_STATE_INITIALIZING}}} and the channels socketId detects data to read, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTM" }{}}{\fldrslt {\cs37\ul\cf2 rsslInitChannel()}}}\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This is not necessary for blocking channels, which will return in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CH_STATE_ACTIVE}}} state after the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect()}}} call.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel to continue initialization on \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inProg} \cell }{InProg Info for compatibility mode reconnections \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value or RsslReturnCodes value \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Read Operations\par \pard\plain 
{\tc\tcl2 \v RSSL Read Operations}
{\xe \v RSSL Read Operations}
{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslRead function is used to read data received from the active rsslChannel. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTO" }{}}{\fldrslt {\cs37\ul\cf2 rsslRead}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 *readRet, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads on a given channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTN" }{}}{\fldrslt {\cs37\ul\cf2 rsslReadEx}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}}
 *readInArgs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}}
 *readOutArgs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 *readRet, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended reads on a given channel. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslRead\:RSSL Read Operations}
{\xe \v RSSL Read Operations\:rsslRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTO" }{}}{\fldrslt {\cs37\ul\cf2 rsslRead}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 * {\i readRet}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par rsslRead is called and returns buffer with any data read from the channels socketId. The buffer is only good until the next time rsslRead is called. The buffer used for reading is populated by this call, it is not necessary to use rsslGetBuffer to create a buffer. rsslRead will assign readRet a positive value if there is more data to read, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_READ_WOULD_BLOCK}}} if the read call is blocked, or a failure code.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel to read from \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i readRet} \cell }{RsslRet value or RsslReturnCodes value which is the return value of read. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBuffer Buffer that contains data read from network \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}} \par
}}}
{\xe \v rsslReadEx\:RSSL Read Operations}
{\xe \v RSSL Read Operations\:rsslReadEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTN" }{}}{\fldrslt {\cs37\ul\cf2 rsslReadEx}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}}
 * {\i readInArgs}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}}
 * {\i readOutArgs}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 * {\i readRet}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par rsslReadEx is called and returns buffer with any data read from the channels socketId. The buffer is only good until the next time rsslReadEx is called. The buffer used for reading is populated by this call, it is not necessary to use rsslGetBuffer to create a buffer. rsslReadEx will assign readRet a positive value if there is more data to read, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RET_READ_WOULD_BLOCK}}} if the read call is blocked, or a failure code.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel to read from \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}}} \cell }{input arguments ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSN" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs}}}) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs}}}} \cell }{various output values from the read \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i readRet} \cell }{RsslRet value or RsslReturnCodes value which is the return value of read \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBuffer Buffer that contains data read from network \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Write Operations\par \pard\plain 
{\tc\tcl2 \v RSSL Write Operations}
{\xe \v RSSL Write Operations}
{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rsslWrite function is used to write data to the active rsslChannel. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslWriteEx input arguments. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslWriteEx output arguments. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL Channel Buffer Operations}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Channel Buffer functions are used to acquire and release buffers from the guaranteed output buffers associated with an active rsslChannel or the shared buffer pool associated with an rsslServer. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_WRITE_IN_ARGS}\~ \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_IN_NO_FLAGS}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_HIGH_PRIORITY}}}
\}{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_INIT_WRITE_OUT_ARGS}\~ \{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_OUT_NO_FLAGS}}}
, 0, 0\}{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTX" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_NO_FLAGS}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_DO_NOT_COMPRESS}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_DIRECT_SOCKET_WRITE}}}
 =  0x02
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslWriteFlags Flags passed into the rsslWrite function call. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteFlagsIn}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_IN_NO_FLAGS}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_IN_DO_NOT_COMPRESS}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_IN_DIRECT_SOCKET_WRITEN}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_IN_DIRECT_SOCKET_WRITE}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_IN_SEQNUM}}}
 =  0x04, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_IN_RETRANSMIT}}}
 =  0x10
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslWriteFlagsIn Flags passed into the rsslWriteEx function call. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUG" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_WRITE_OUT_NO_FLAGS}}}
 =  0x00
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslWriteFlags passed into the rsslWriteEx function call. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUH" }{}}{\fldrslt {\cs37\ul\cf2 RsslWritePriorities}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_HIGH_PRIORITY}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MEDIUM_PRIORITY}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_LOW_PRIORITY}}}
 =  2
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Write Priorities. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearWriteInArgs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs}}}
 *writeInArgs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs}}} structure passed in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUL" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearWriteOutArgs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs}}}
 *writeOutArgs)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs}}} structure passed in. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUM" }{}}{\fldrslt {\cs37\ul\cf2 rsslFlush}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flushes data waiting to be written on a given channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUN" }{}}{\fldrslt {\cs37\ul\cf2 rsslPing}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends a heartbeat message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQF" }{}}{\fldrslt {\cs37\ul\cf2 rsslWrite}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *buffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUH" }{}}{\fldrslt {\cs37\ul\cf2 RsslWritePriorities}}}
 rsslPriority, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 writeFlags, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 *bytesWritten, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 *uncompressedBytesWritten, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes on a given channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUO" }{}}{\fldrslt {\cs37\ul\cf2 rsslWriteEx}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *buffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs}}}
 *writeInArgs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs}}}
 *writeOutArgs, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended writes on a given channel. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslWriteFlags\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RsslWriteFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTX" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteFlags}}}
}}
\par
{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQF" }{}}{\fldrslt {\cs37\ul\cf2 rsslWrite}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_WRITE_NO_FLAGS\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_NO_FLAGS}
{\b {\i RSSL_WRITE_NO_FLAGS{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No Write Flags \par
}{\xe \v RSSL_WRITE_DO_NOT_COMPRESS\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_DO_NOT_COMPRESS}
{\b {\i RSSL_WRITE_DO_NOT_COMPRESS{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) indicates that this message should not be compressed even if compression is enabled for this connection \par
}{\xe \v RSSL_WRITE_DIRECT_SOCKET_WRITE\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_DIRECT_SOCKET_WRITE}
{\b {\i RSSL_WRITE_DIRECT_SOCKET_WRITE{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) Write will attempt to pass the data directly to the transport, avoiding the queuing. If anything is currently queued, data will be queued. This option will increase CPU use but may decrease latency \par
}}
\par
{
Definition at line 1250 of file rsslTransport.h.}\par
}
{\xe \v RsslWriteFlagsIn\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RsslWriteFlagsIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUB" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteFlagsIn}}}
}}
\par
{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUO" }{}}{\fldrslt {\cs37\ul\cf2 rsslWriteEx}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_WRITE_IN_NO_FLAGS\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_IN_NO_FLAGS}
{\b {\i RSSL_WRITE_IN_NO_FLAGS{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No Write Flags \par
}{\xe \v RSSL_WRITE_IN_DO_NOT_COMPRESS\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_IN_DO_NOT_COMPRESS}
{\b {\i RSSL_WRITE_IN_DO_NOT_COMPRESS{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) indicates that this message should not be compressed even if compression is enabled for this connection \par
}{\xe \v RSSL_WRITE_IN_DIRECT_SOCKET_WRITEN\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_IN_DIRECT_SOCKET_WRITEN}
{\b {\i RSSL_WRITE_IN_DIRECT_SOCKET_WRITEN{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "deprecated__deprecated000007" }{}}{\fldrslt {\cs37\ul\cf2 Deprecated}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: (0x02) Write will attempt to pass the data directly to the transport, avoiding the queuing. If anything is currently queued, data will be queued. This option will increase CPU use but may decrease latency \par
}
}{\xe \v RSSL_WRITE_IN_DIRECT_SOCKET_WRITE\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_IN_DIRECT_SOCKET_WRITE}
{\b {\i RSSL_WRITE_IN_DIRECT_SOCKET_WRITE{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) Write will attempt to pass the data directly to the transport, avoiding the queuing. If anything is currently queued, data will be queued. This option will increase CPU use but may decrease latency \par
}{\xe \v RSSL_WRITE_IN_SEQNUM\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_IN_SEQNUM}
{\b {\i RSSL_WRITE_IN_SEQNUM{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) indicates that the writer wants to attach a sequence number to this message \par
}{\xe \v RSSL_WRITE_IN_RETRANSMIT\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_IN_RETRANSMIT}
{\b {\i RSSL_WRITE_IN_RETRANSMIT{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x10) indicates that this message is a retransmission of previous content. This requires a user supplied sequence number to indicate which packet is being retransmitted \par
}}
\par
{
Definition at line 1271 of file rsslTransport.h.}\par
}
{\xe \v RsslWriteOutFlags\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RsslWriteOutFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUG" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutFlags}}}
}}
\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUO" }{}}{\fldrslt {\cs37\ul\cf2 rsslWriteEx}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_WRITE_OUT_NO_FLAGS\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_WRITE_OUT_NO_FLAGS}
{\b {\i RSSL_WRITE_OUT_NO_FLAGS{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) No Write Flags \par
}}
\par
{
Definition at line 1295 of file rsslTransport.h.}\par
}
{\xe \v RsslWritePriorities\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RsslWritePriorities}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUH" }{}}{\fldrslt {\cs37\ul\cf2 RsslWritePriorities}}}
}}
\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQF" }{}}{\fldrslt {\cs37\ul\cf2 rsslWrite}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RSSL_HIGH_PRIORITY\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_HIGH_PRIORITY}
{\b {\i RSSL_HIGH_PRIORITY{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Assigns message to the high priority flush \par
}{\xe \v RSSL_MEDIUM_PRIORITY\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_MEDIUM_PRIORITY}
{\b {\i RSSL_MEDIUM_PRIORITY{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Assigns message to the medium priority flush \par
}{\xe \v RSSL_LOW_PRIORITY\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:RSSL_LOW_PRIORITY}
{\b {\i RSSL_LOW_PRIORITY{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Assigns message to the low priority flush \par
}}
\par
{
Definition at line 1261 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearWriteInArgs\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:rsslClearWriteInArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearWriteInArgs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs}}}
 * {\i writeInArgs})}}
\par
{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i writeInArgs} \cell }{a pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs}}} structure to be cleared \cell }
{\row }
}
}{
Definition at line 1314 of file rsslTransport.h.}\par
}
{\xe \v rsslClearWriteOutArgs\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:rsslClearWriteOutArgs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUL" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearWriteOutArgs}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs}}}
 * {\i writeOutArgs})}}
\par
{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i writeOutArgs} \cell }{a pointer to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs}}} structure to be cleared \cell }
{\row }
}
}{
Definition at line 1324 of file rsslTransport.h.}\par
}
{\xe \v rsslFlush\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:rsslFlush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUM" }{}}{\fldrslt {\cs37\ul\cf2 rsslFlush}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par rsslFlush pushes the data in the write buffer out to the network. This should be called when write returns that there is data to flush. Under certain circumstances, write will automatically flush data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel to attempt flush on \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value or the number of bytes pending flush \par
}}}
{\xe \v rsslPing\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:rsslPing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUN" }{}}{\fldrslt {\cs37\ul\cf2 rsslPing}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par rsslPing is called to send some type of ping or heartbeat message. rsslPing will send only the message header across the network. This helps reduce overhead on the network, and does not incur any cost of parsing or assembling a special ping message type. It is the user's responsibility to send the ping message in the correct time frame. Since it is assumed a ping or heartbeat is only sent when other writing is not taking place, rsslFlush is automatically called once. The return value will be the number of bytes left to flush.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel to send ping or heartbeat on \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value or the number of bytes pending flush \par
}}}
{\xe \v rsslWrite\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:rsslWrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQF" }{}}{\fldrslt {\cs37\ul\cf2 rsslWrite}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i buffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUH" }{}}{\fldrslt {\cs37\ul\cf2 RsslWritePriorities}}}
 {\i rsslPriority}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\i writeFlags}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 * {\i bytesWritten}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 * {\i uncompressedBytesWritten}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par rsslWrite is called after buffer is populated with a message. This message is then written to the channels internal write buffer. If write is successful, the passed in buffer will be released automatically. In the event of a failure the user needs to call rsslReleaseBuffer. In the success case, rsslWrite will return the number of bytes pending flush.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Data is not written across the network until rsslFlush is called.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel to write to \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{Buffer to write to the network \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rsslPriority} \cell }{Priority to flush the message (high, medium, or low) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i writeFlags} \cell }{Flags for writing the buffer (RsslWriteFlags) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytesWritten} \cell }{Returns total number of bytes written. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uncompressedBytesWritten} \cell }{Returns number of bytes written before compression. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value, RsslReturnCodes value, or the number of bytes pending flush \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTX" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteFlags}}} \par
}}}
{\xe \v rsslWriteEx\:RSSL Write Operations}
{\xe \v RSSL Write Operations\:rsslWriteEx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUO" }{}}{\fldrslt {\cs37\ul\cf2 rsslWriteEx}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i buffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs}}}
 * {\i writeInArgs}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs}}}
 * {\i writeOutArgs}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use:\par rsslWrite is called after buffer is populated with a message. This message is then written to the channels internal write buffer. If write is successful, the passed in buffer will be released automatically. In the event of a failure the user needs to call rsslReleaseBuffer. In the success case, rsslWrite will return the number of bytes pending flush.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Data is not written across the network until rsslFlush is called.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel to write to \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{Buffer to write to the network \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i writeInArgs} \cell }{input arguments to the function ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTP" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs}}}) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i writeOutArgs} \cell }{various output values following the write(RsslWriteFlags) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value, RsslReturnCodes value, or the number of bytes pending flush \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTX" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteFlags}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Channel Buffer Operations\par \pard\plain 
{\tc\tcl2 \v RSSL Channel Buffer Operations}
{\xe \v RSSL Channel Buffer Operations}
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Channel Buffer functions are used to acquire and release buffers from the guaranteed output buffers associated with an active rsslChannel or the shared buffer pool associated with an rsslServer. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 size, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 packedBuffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves a RsslBuffer for use. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUP" }{}}{\fldrslt {\cs37\ul\cf2 rsslPackBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 *chnl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *buffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows user to pack multiple RSSL encoded messages into the same RSSL Buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReleaseBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *buffer, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 *error)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Releases a RsslBuffer after use. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslGetBuffer\:RSSL Channel Buffer Operations}
{\xe \v RSSL Channel Buffer Operations\:rsslGetBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABI" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\i size}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\i packedBuffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use: \par This is called when a buffer is needed to write data to. Generally, the user will populate the RsslBuffer structure and then pass it to the rsslWrite function.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{RSSL Channel who requests the buffer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{Size of the requested buffer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i packedBuffer} \cell }{Set to RSSL_TRUE if you plan on packing multiple messages into the same buffer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBuffer RSSL buffer to be filled in with valid memory \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 RsslReturnCodes}}} \par
}}}
{\xe \v rsslPackBuffer\:RSSL Channel Buffer Operations}
{\xe \v RSSL Channel Buffer Operations\:rsslPackBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUP" }{}}{\fldrslt {\cs37\ul\cf2 rsslPackBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\i chnl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i buffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use: \par This is called when the application wants to perform message packing. Call rsslGetBuffer to get a new buffer Call necessary encode functions Call rsslPackBuffer to write size of packed buffer and prepare for next packed buffer Repeat above two steps until ready to write Call rsslWrite with buffer\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chnl} \cell }{{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} that the message is being sent on. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{Rssl buffer to be packed (length must be set to encoded size) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslBuffer Buffer pointing to new position to encode data to \par
}}}
{\xe \v rsslReleaseBuffer\:RSSL Channel Buffer Operations}
{\xe \v RSSL Channel Buffer Operations\:rsslReleaseBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslReleaseBuffer}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i buffer}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMS" }{}}{\fldrslt {\cs37\ul\cf2 RsslError}}}
 * {\i error})}}
\par
{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical use: \par This is called when a buffer is done being used. The rsslWrite function will release the buffer if it successfully writes. The user should only need to use this function when they get a buffer that they do not need or when rsslWrite fails.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{RSSL buffer to be released \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error} \cell }{RSSL Error, to be populated in event of an error \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslRet RSSL return value \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Dictionary\par \pard\plain 
{\tc\tcl2 \v Data Dictionary}
{\xe \v Data Dictionary}
{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A data dictionary Houses all known fields loaded from a field dictionary and their corresponding enum types loaded from an enum type dictionary. The dictionary also saves general information about the dictionary itself -- this is found in the "!tag" comments in the file or in the summary data of dictionaries encoded via the official domain model. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A data dictionary entry, containing field information and an enumeration table reference if present. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single defined enumerated value. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUU" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A table of enumerated types. A field that uses this table will contain a value corresponding to an enumerated type in this table. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATA_DICTIONARY}}}
\~ \{ RSSL_MAX_FID + 1, RSSL_MIN_FID - 1, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
\}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}} initializer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_MAX_FID}\~ 32767{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b RSSL_MIN_FID}\~ -32768{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMfFieldTypes}}}
 \{ {\b RSSL_MFEED_NONE} =  -1, 
{\b RSSL_MFEED_TIME_SECONDS} =  0, 
{\b RSSL_MFEED_INTEGER} =  1, 
{\b RSSL_MFEED_NUMERIC} =  2, 
{\b RSSL_MFEED_DATE} =  3, 
{\b RSSL_MFEED_PRICE} =  4, 
{\b RSSL_MFEED_ALPHANUMERIC} =  5, 
{\b RSSL_MFEED_ENUMERATED} =  6, 
{\b RSSL_MFEED_TIME} =  7, 
{\b RSSL_MFEED_BINARY} =  8, 
{\b RSSL_MFEED_LONG_ALPHANUMERIC} =  9, 
{\b RSSL_MFEED_OPAQUE} =  10
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumerated Marketfeed types. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEE" }{}}{\fldrslt {\cs37\ul\cf2 getDictionaryEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *pDictionary, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
 fieldId)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the entry in the dictionary corresponding to the given fieldId, if the entry exists. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUZ" }{}}{\fldrslt {\cs37\ul\cf2 getFieldEntryEnumType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}}
 *pEntry, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the corresponding enumerated type in the dictionary entry's table, if the type exists. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDataDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *pDataDict)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}. This should be done prior to the first call of a dictionary loading function, if the initializer is not used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVB" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeEnumTypeDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *dIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *dictionary, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 verbosity, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode the enumerated types information contained in an encoded enum types dictionary according to the domain model. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVC" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *dIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *dictionary, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 verbosity, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decode the field dictionary information contained in a data payload according to the domain model. This function may be called multiple times on the same dictionary, to load information from dictionaries that have been encoded in multiple parts. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDeleteDataDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *dictionary)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uninitializes a data dictionary and frees all memory associated with it. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnumTypeDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *eIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *dictionary, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 verbosity, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encode the enumerated types dictionary according the domain model, using the information from the tables and referencing fields present in this dictionary. Note: This function will use the type RSSL_DT_ASCII_STRING for the DISPLAY array. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnumTypeDictionaryAsMultiPart}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *eIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *dictionary, int *currentFid, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 verbosity, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encode the enumerated types dictionary according the domain model, using the information from the tables and referencing fields present in this dictionary. This function supports building the encoded data in multiple parts -- if there is not enough available buffer space to encode the entire dictionary, subsequent calls can be made to this function, each producing the next segment of fields. Note: This function will use the type RSSL_DT_ASCII_STRING for the DISPLAY array. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 *eIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *dictionary, int *currentFid, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 verbosity, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encode the field definitions dictionary information into a data payload according the domain model, using the field information from the entries present in this dictionary. This function supports building the encoded data in multiple parts -- if there is not enough available buffer space to encode the entire dictionary, subsequent calls can be made to this function, each producing the next segment of fields. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVG" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractDictionaryType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 *dIter, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVH" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryTypes}}}
 *dictionaryType, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extract dictionary type from the encoded payload of an RSSL message where the domain type is RSSL_DMT_DICTIONARY Typical use:\par }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVI" }{}}{\fldrslt {\cs37\ul\cf2 rsslLoadEnumTypeDictionary}}}
 (const char *filename, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *dictionary, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds information from an enumerated types dictionary file to the data dictionary object. Subsequent calls to this function may be made to the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}} to load additional dictionaries(provided that there are no duplicate table references for any field) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslLoadFieldDictionary}}}
 (const char *filename, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *dictionary, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 *errorText)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds information from a field dictionary file to the data dictionary object. Subsequent calls to this function may be made to the same {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}} to load additional dictionaries(provided the fields do not conflict). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVK" }{}}{\fldrslt {\cs37\ul\cf2 rsslPrintDataDictionary}}}
 (FILE *fileptr, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 *dictionary)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fully dumps information contained in a data dictionary object to a file. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_DATA_DICTIONARY\:Data Dictionary}
{\xe \v Data Dictionary\:RSSL_INIT_DATA_DICTIONARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATA_DICTIONARY}}}
\~ \{ RSSL_MAX_FID + 1, RSSL_MIN_FID - 1, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FALSE}}}
, 0, 0, 0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BUFFER}}}
\}}}
\par
{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDataDictionary}}} \par
}}{
Definition at line 131 of file rsslDataDictionary.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RsslMfFieldTypes\:Data Dictionary}
{\xe \v Data Dictionary\:RsslMfFieldTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMfFieldTypes}}}
}}
\par
{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RsslStateValue, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}{
Definition at line 29 of file rsslDataDictionary.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getDictionaryEntry\:Data Dictionary}
{\xe \v Data Dictionary\:getDictionaryEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEE" }{}}{\fldrslt {\cs37\ul\cf2 getDictionaryEntry}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i pDictionary}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
 {\i fieldId})}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}} \par
}}{
Definition at line 146 of file rsslDataDictionary.h.}\par
}
{\xe \v getFieldEntryEnumType\:Data Dictionary}
{\xe \v Data Dictionary\:getFieldEntryEnumType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUZ" }{}}{\fldrslt {\cs37\ul\cf2 getFieldEntryEnumType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}}
 * {\i pEntry}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 {\i value})}}
\par
{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}} \par
}}{
Definition at line 155 of file rsslDataDictionary.h.}\par
}
{\xe \v rsslClearDataDictionary\:Data Dictionary}
{\xe \v Data Dictionary\:rsslClearDataDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDataDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i pDataDict})}}
\par
{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUV" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATA_DICTIONARY}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}} \par
}}{
Definition at line 137 of file rsslDataDictionary.h.}\par
}
{\xe \v rsslDecodeEnumTypeDictionary\:Data Dictionary}
{\xe \v Data Dictionary\:rsslDecodeEnumTypeDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVB" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeEnumTypeDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i dIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i dictionary}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 {\i verbosity}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dIter} \cell }{An iterator to use. Must be set to the encoded buffer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionary} \cell }{The dictionary to store the decoded enumerated types information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verbosity} \cell }{The desired verbosity to decode. See RDMDictionaryVerbosityValues. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the decoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnumTypeDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnumTypeDictionaryAsMultiPart}}} \par
}}}
{\xe \v rsslDecodeFieldDictionary\:Data Dictionary}
{\xe \v Data Dictionary\:rsslDecodeFieldDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVC" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i dIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i dictionary}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 {\i verbosity}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dIter} \cell }{An iterator to use. Must be set to the encoded buffer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionary} \cell }{The dictionary to store the decoded field information. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verbosity} \cell }{The desired verbosity to decode. See RDMDictionaryVerbosityValues. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the decoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldDictionary}}} \par
}}}
{\xe \v rsslDeleteDataDictionary\:Data Dictionary}
{\xe \v Data Dictionary\:rsslDeleteDataDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDeleteDataDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i dictionary})}}
\par
{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}} \par
}}}
{\xe \v rsslEncodeEnumTypeDictionary\:Data Dictionary}
{\xe \v Data Dictionary\:rsslEncodeEnumTypeDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnumTypeDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i eIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i dictionary}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 {\i verbosity}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i eIter} \cell }{Iterator to be used for encoding. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionary} \cell }{The dictionary to encode enumerated type information from. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verbosity} \cell }{The desired verbosity to encode. See RDMDictionaryVerbosityValues. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the encoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnumTypeDictionaryAsMultiPart}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVB" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeEnumTypeDictionary}}} \par
}}}
{\xe \v rsslEncodeEnumTypeDictionaryAsMultiPart\:Data Dictionary}
{\xe \v Data Dictionary\:rsslEncodeEnumTypeDictionaryAsMultiPart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnumTypeDictionaryAsMultiPart}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i eIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i dictionary}, int * {\i currentFid}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 {\i verbosity}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i eIter} \cell }{Iterator to be used for encoding. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionary} \cell }{The dictionary to encode enumerated type information from. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i currentFid} \cell }{Tracks which fields have been encoded in case of multi-part encoding. Must be initialized to 0 on the first call and is updated with each successfully encoded part. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verbosity} \cell }{The desired verbosity to encode. See RDMDictionaryVerbosityValues. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the encoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeEnumTypeDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVB" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeEnumTypeDictionary}}} \par
}}}
{\xe \v rsslEncodeFieldDictionary\:Data Dictionary}
{\xe \v Data Dictionary\:rsslEncodeFieldDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldDictionary}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeIterator}}}
 * {\i eIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i dictionary}, int * {\i currentFid}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 {\i verbosity}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i eIter} \cell }{Iterator to be used for encoding. Prior to each call, the iterator must be cleared and initialized to the buffer to be used for encoding. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionary} \cell }{The dictionary to encode field information from. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i currentFid} \cell }{Tracks which fields have been encoded in case of multi-part encoding. Must be initialized to dictionary->minFid on the first call and is updated with each successfully encoded part. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verbosity} \cell }{The desired verbosity to encode. See RDMDictionaryVerbosityValues. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the encoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid RSSL_RET_DICT_PART_ENCODED when encoding parts, RSSL_RET_SUCCESS for final part or single complete payload. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVC" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldDictionary}}} \par
}}}
{\xe \v rsslExtractDictionaryType\:Data Dictionary}
{\xe \v Data Dictionary\:rsslExtractDictionaryType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVG" }{}}{\fldrslt {\cs37\ul\cf2 rsslExtractDictionaryType}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodeIterator}}}
 * {\i dIter}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVH" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryTypes}}}
 * {\i dictionaryType}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMI" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMsg()}}}.\par\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab If domainType is RSSL_DMT_DICTIONARY, call this function.\par
\pard\plain \s91\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Call appropriate dictionary decode function based on returned dictionary type (e.g., if returned type is RDM_DICTIONARY_FIELD_DEFINITIONS, call {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVC" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldDictionary()}}}).\par {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dIter} \cell }{An iterator to use. Must be set to the encoded payload of the dictionary message. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dictionaryType} \cell }{The dictionary type, from RDMDictionaryTypes in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVL" }{}}{\fldrslt {\cs37\ul\cf2 rsslRDM.h}}}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i errorText} \cell }{Buffer to hold error text if the decoding fails. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid RsslRet, if success dictionary type is populated. If failure, dictionary type not available. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVH" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryTypes}}} \par
}\par}
}}
{\xe \v rsslLoadEnumTypeDictionary\:Data Dictionary}
{\xe \v Data Dictionary\:rsslLoadEnumTypeDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVI" }{}}{\fldrslt {\cs37\ul\cf2 rsslLoadEnumTypeDictionary}}}
 (const char * {\i filename}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i dictionary}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}} \par
}}}
{\xe \v rsslLoadFieldDictionary\:Data Dictionary}
{\xe \v Data Dictionary\:rsslLoadFieldDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslLoadFieldDictionary}}}
 (const char * {\i filename}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i dictionary}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\i errorText})}}
\par
{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}} \par
}}}
{\xe \v rsslPrintDataDictionary\:Data Dictionary}
{\xe \v Data Dictionary\:rsslPrintDataDictionary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RSSL_API {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVK" }{}}{\fldrslt {\cs37\ul\cf2 rsslPrintDataDictionary}}}
 (FILE * {\i fileptr}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}
 * {\i dictionary})}}
\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}} \par
}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TRDM Common Enumerations\par \pard\plain 
{\tc\tcl2 \v TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations}
{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The TRDM Common Enumerations are used across several Thomson Reuters Domain Models. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVM" }{}}{\fldrslt {\cs37\ul\cf2 RDMInstrumentNameTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVN" }{}}{\fldrslt {\cs37\ul\cf2 RDM_INSTRUMENT_NAME_TYPE_UNSPECIFIED}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSP" }{}}{\fldrslt {\cs37\ul\cf2 RDM_INSTRUMENT_NAME_TYPE_RIC}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVO" }{}}{\fldrslt {\cs37\ul\cf2 RDM_INSTRUMENT_NAME_TYPE_CONTRIBUTOR}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVP" }{}}{\fldrslt {\cs37\ul\cf2 RDM_INSTRUMENT_NAME_TYPE_MAX_RESERVED}}}
 =  127
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVQ" }{}}{\fldrslt {\cs37\ul\cf2 RDMUpdateEventTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVR" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_UNSPECIFIED}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVS" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_QUOTE}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYO" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_TRADE}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVT" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_NEWS_ALERT}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVU" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_VOLUME_ALERT}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVV" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_ORDER_INDICATION}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVW" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_CLOSING_RUN}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVX" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_CORRECTION}}}
 =  7, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVY" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_MARKET_DIGEST}}}
 =  8, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVZ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_QUOTES_TRADE}}}
 =  9, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWA" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_MULTIPLE}}}
 =  10, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWB" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_VERIFY}}}
 =  11, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWC" }{}}{\fldrslt {\cs37\ul\cf2 RDM_UPD_EVENT_TYPE_MAX_RESERVED}}}
 =  127
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWD" }{}}{\fldrslt {\cs37\ul\cf2 RDMViewTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWE" }{}}{\fldrslt {\cs37\ul\cf2 RDM_VIEW_TYPE_FIELD_ID_LIST}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWF" }{}}{\fldrslt {\cs37\ul\cf2 RDM_VIEW_TYPE_ELEMENT_NAME_LIST}}}
 =  2
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RDMInstrumentNameTypes\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDMInstrumentNameTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVM" }{}}{\fldrslt {\cs37\ul\cf2 RDMInstrumentNameTypes}}}
}}
\par
{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_INSTRUMENT_NAME_TYPE_UNSPECIFIED\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_INSTRUMENT_NAME_TYPE_UNSPECIFIED}
{\b {\i RDM_INSTRUMENT_NAME_TYPE_UNSPECIFIED{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Symbology is not specified or not applicable \par
}{\xe \v RDM_INSTRUMENT_NAME_TYPE_RIC\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_INSTRUMENT_NAME_TYPE_RIC}
{\b {\i RDM_INSTRUMENT_NAME_TYPE_RIC{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Reuters Instrument Code \par
}{\xe \v RDM_INSTRUMENT_NAME_TYPE_CONTRIBUTOR\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_INSTRUMENT_NAME_TYPE_CONTRIBUTOR}
{\b {\i RDM_INSTRUMENT_NAME_TYPE_CONTRIBUTOR{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Contributor identification information for user-stream contributions (RSSL_DMT_CONTRIBUTION) \par
}{\xe \v RDM_INSTRUMENT_NAME_TYPE_MAX_RESERVED\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_INSTRUMENT_NAME_TYPE_MAX_RESERVED}
{\b {\i RDM_INSTRUMENT_NAME_TYPE_MAX_RESERVED{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(127) Maximum reserved Quote Symbology \par
}}
\par
{
Definition at line 61 of file rsslRDM.h.}\par
}
{\xe \v RDMUpdateEventTypes\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDMUpdateEventTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVQ" }{}}{\fldrslt {\cs37\ul\cf2 RDMUpdateEventTypes}}}
}}
\par
{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_UPD_EVENT_TYPE_UNSPECIFIED\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_UNSPECIFIED}
{\b {\i RDM_UPD_EVENT_TYPE_UNSPECIFIED{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Unspecified Update Event \par
}{\xe \v RDM_UPD_EVENT_TYPE_QUOTE\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_QUOTE}
{\b {\i RDM_UPD_EVENT_TYPE_QUOTE{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Update Event Quote \par
}{\xe \v RDM_UPD_EVENT_TYPE_TRADE\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_TRADE}
{\b {\i RDM_UPD_EVENT_TYPE_TRADE{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Update Event Trade \par
}{\xe \v RDM_UPD_EVENT_TYPE_NEWS_ALERT\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_NEWS_ALERT}
{\b {\i RDM_UPD_EVENT_TYPE_NEWS_ALERT{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Update Event News Alert \par
}{\xe \v RDM_UPD_EVENT_TYPE_VOLUME_ALERT\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_VOLUME_ALERT}
{\b {\i RDM_UPD_EVENT_TYPE_VOLUME_ALERT{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Update Event Volume Alert \par
}{\xe \v RDM_UPD_EVENT_TYPE_ORDER_INDICATION\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_ORDER_INDICATION}
{\b {\i RDM_UPD_EVENT_TYPE_ORDER_INDICATION{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Update Event Order Indication \par
}{\xe \v RDM_UPD_EVENT_TYPE_CLOSING_RUN\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_CLOSING_RUN}
{\b {\i RDM_UPD_EVENT_TYPE_CLOSING_RUN{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(6) Update Event Closing Run \par
}{\xe \v RDM_UPD_EVENT_TYPE_CORRECTION\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_CORRECTION}
{\b {\i RDM_UPD_EVENT_TYPE_CORRECTION{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(7) Update Event Correction \par
}{\xe \v RDM_UPD_EVENT_TYPE_MARKET_DIGEST\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_MARKET_DIGEST}
{\b {\i RDM_UPD_EVENT_TYPE_MARKET_DIGEST{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(8) Update Event Market Digest \par
}{\xe \v RDM_UPD_EVENT_TYPE_QUOTES_TRADE\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_QUOTES_TRADE}
{\b {\i RDM_UPD_EVENT_TYPE_QUOTES_TRADE{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(9) Update Event Quotes followed by a Trade \par
}{\xe \v RDM_UPD_EVENT_TYPE_MULTIPLE\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_MULTIPLE}
{\b {\i RDM_UPD_EVENT_TYPE_MULTIPLE{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(10) Update Event with filtering and conflation applied \par
}{\xe \v RDM_UPD_EVENT_TYPE_VERIFY\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_VERIFY}
{\b {\i RDM_UPD_EVENT_TYPE_VERIFY{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(11) Fields may have changed \par
}{\xe \v RDM_UPD_EVENT_TYPE_MAX_RESERVED\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_UPD_EVENT_TYPE_MAX_RESERVED}
{\b {\i RDM_UPD_EVENT_TYPE_MAX_RESERVED{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(127) Maximum reserved update event type \par
}}
\par
{
Definition at line 70 of file rsslRDM.h.}\par
}
{\xe \v RDMViewTypes\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDMViewTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWD" }{}}{\fldrslt {\cs37\ul\cf2 RDMViewTypes}}}
}}
\par
{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_VIEW_TYPE_FIELD_ID_LIST\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_VIEW_TYPE_FIELD_ID_LIST}
{\b {\i RDM_VIEW_TYPE_FIELD_ID_LIST{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) View Data contains a list of Field IDs \par
}{\xe \v RDM_VIEW_TYPE_ELEMENT_NAME_LIST\:TRDM Common Enumerations}
{\xe \v TRDM Common Enumerations\:RDM_VIEW_TYPE_ELEMENT_NAME_LIST}
{\b {\i RDM_VIEW_TYPE_ELEMENT_NAME_LIST{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) View Data contains a list of Element Names \par
}}
\par
{
Definition at line 88 of file rsslRDM.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TRDM Login Domain\par \pard\plain 
{\tc\tcl2 \v TRDM Login Domain}
{\xe \v TRDM Login Domain}
{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Login Domain is used to register a user with the system. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWG" }{}}{\fldrslt {\cs37\ul\cf2 RDMLoginBatchSupportFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWH" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_BATCH_NONE}}}
 =  0x0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWI" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_BATCH_SUPPORT_REQUESTS}}}
 =  0x1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWJ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_BATCH_SUPPORT_REISSUES}}}
 =  0x2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWK" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_BATCH_SUPPORT_CLOSES}}}
 =  0x4
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWL" }{}}{\fldrslt {\cs37\ul\cf2 RDMLoginRoleTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWM" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_ROLE_CONS}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWN" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_ROLE_PROV}}}
 =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWO" }{}}{\fldrslt {\cs37\ul\cf2 RDMLoginServerTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWP" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_SERVER_TYPE_ACTIVE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWQ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_SERVER_TYPE_STANDBY}}}
 =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWR" }{}}{\fldrslt {\cs37\ul\cf2 RDMLoginUserIdTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWS" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_USER_NAME}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWT" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_USER_EMAIL_ADDRESS}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWU" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_USER_TOKEN}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWV" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_USER_COOKIE}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWW" }{}}{\fldrslt {\cs37\ul\cf2 RDM_LOGIN_USER_AUTHN_TOKEN}}}
 =  5
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RDMLoginBatchSupportFlags\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDMLoginBatchSupportFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWG" }{}}{\fldrslt {\cs37\ul\cf2 RDMLoginBatchSupportFlags}}}
}}
\par
{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_LOGIN_BATCH_NONE\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_BATCH_NONE}
{\b {\i RDM_LOGIN_BATCH_NONE{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0) Provider does not support batching. \par
}{\xe \v RDM_LOGIN_BATCH_SUPPORT_REQUESTS\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_BATCH_SUPPORT_REQUESTS}
{\b {\i RDM_LOGIN_BATCH_SUPPORT_REQUESTS{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x1) Provider supports batch requests. \par
}{\xe \v RDM_LOGIN_BATCH_SUPPORT_REISSUES\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_BATCH_SUPPORT_REISSUES}
{\b {\i RDM_LOGIN_BATCH_SUPPORT_REISSUES{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x2) Provider supports batch reissue requests. \par
}{\xe \v RDM_LOGIN_BATCH_SUPPORT_CLOSES\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_BATCH_SUPPORT_CLOSES}
{\b {\i RDM_LOGIN_BATCH_SUPPORT_CLOSES{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x4) Provider supports batch closes. \par
}}
\par
{
Definition at line 123 of file rsslRDM.h.}\par
}
{\xe \v RDMLoginRoleTypes\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDMLoginRoleTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWL" }{}}{\fldrslt {\cs37\ul\cf2 RDMLoginRoleTypes}}}
}}
\par
{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_LOGIN_ROLE_CONS\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_ROLE_CONS}
{\b {\i RDM_LOGIN_ROLE_CONS{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Application logs in as a consumer \par
}{\xe \v RDM_LOGIN_ROLE_PROV\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_ROLE_PROV}
{\b {\i RDM_LOGIN_ROLE_PROV{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Application logs in as a provider \par
}}
\par
{
Definition at line 104 of file rsslRDM.h.}\par
}
{\xe \v RDMLoginServerTypes\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDMLoginServerTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWO" }{}}{\fldrslt {\cs37\ul\cf2 RDMLoginServerTypes}}}
}}
\par
{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_LOGIN_SERVER_TYPE_ACTIVE\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_SERVER_TYPE_ACTIVE}
{\b {\i RDM_LOGIN_SERVER_TYPE_ACTIVE{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Active Server \par
}{\xe \v RDM_LOGIN_SERVER_TYPE_STANDBY\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_SERVER_TYPE_STANDBY}
{\b {\i RDM_LOGIN_SERVER_TYPE_STANDBY{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Standby Server \par
}}
\par
{
Definition at line 118 of file rsslRDM.h.}\par
}
{\xe \v RDMLoginUserIdTypes\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDMLoginUserIdTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWR" }{}}{\fldrslt {\cs37\ul\cf2 RDMLoginUserIdTypes}}}
}}
\par
{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_LOGIN_USER_NAME\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_USER_NAME}
{\b {\i RDM_LOGIN_USER_NAME{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Name \par
}{\xe \v RDM_LOGIN_USER_EMAIL_ADDRESS\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_USER_EMAIL_ADDRESS}
{\b {\i RDM_LOGIN_USER_EMAIL_ADDRESS{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Email address \par
}{\xe \v RDM_LOGIN_USER_TOKEN\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_USER_TOKEN}
{\b {\i RDM_LOGIN_USER_TOKEN{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) User Token, typically a Triple A (AAA) token. \par
}{\xe \v RDM_LOGIN_USER_COOKIE\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_USER_COOKIE}
{\b {\i RDM_LOGIN_USER_COOKIE{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) User information is specified in a cookie. \par
}{\xe \v RDM_LOGIN_USER_AUTHN_TOKEN\:TRDM Login Domain}
{\xe \v TRDM Login Domain\:RDM_LOGIN_USER_AUTHN_TOKEN}
{\b {\i RDM_LOGIN_USER_AUTHN_TOKEN{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) String defining User Authentication Token \par
}}
\par
{
Definition at line 110 of file rsslRDM.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TRDM Dictionary Domain\par \pard\plain 
{\tc\tcl2 \v TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain}
{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Dictionary Domain is used transmit the RDM Field Dictionary across the wire. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWX" }{}}{\fldrslt {\cs37\ul\cf2 RDMFieldDictionary and enumtype.def Dictionary loading, encoding, and decoding helpers.}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Utility structures and functions that can be used to handle the loading, encoding, and decoding of the RDMFieldDictionary and enumtype.def dictionary. These also allow for performant field entry lookups. \par
}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVH" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWY" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_FIELD_DEFINITIONS}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACWZ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_ENUM_TABLES}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXA" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_RECORD_TEMPLATES}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXB" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_DISPLAY_TEMPLATES}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXC" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_DATA_DEFINITIONS}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXD" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_STYLE_SHEET}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXE" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_REFERENCE}}}
 =  7, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXF" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_FIELD_SET_DEFINITION}}}
 =  8, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXG" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_ELEMENT_SET_DEFINITION}}}
 =  9
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumerations describing the Type of a particular dictionary. These values are associated with the "Type" tag of a dictionary, found in the associated file or summary data. Functions for loading or decoding these dictionaries will look for this information and use it to verify that the correct type of dictionary is being interpreted. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXH" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_INFO}}}
 =  0x00, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXI" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_MINIMAL}}}
 =  0x03, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXJ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_NORMAL}}}
 =  0x07, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXK" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DICTIONARY_VERBOSE}}}
 =  0x0F
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumerations describing how much information about a particular dictionary is desired. These values are typically set in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} MsgKey filter when the request for the dictionary is made. See the UPA RDM Usage Guide for details. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RDMDictionaryTypes\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDMDictionaryTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVH" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryTypes}}}
}}
\par
{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_DICTIONARY_FIELD_DEFINITIONS\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_FIELD_DEFINITIONS}
{\b {\i RDM_DICTIONARY_FIELD_DEFINITIONS{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Field Dictionary type, typically referring to an RDMFieldDictionary \par
}{\xe \v RDM_DICTIONARY_ENUM_TABLES\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_ENUM_TABLES}
{\b {\i RDM_DICTIONARY_ENUM_TABLES{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Enumeration Dictionary type, typically referring to an enumtype.def \par
}{\xe \v RDM_DICTIONARY_RECORD_TEMPLATES\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_RECORD_TEMPLATES}
{\b {\i RDM_DICTIONARY_RECORD_TEMPLATES{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Record template type, typically referring to a template to help with caching of data - can be referred to by fieldListNum or elemListNum \par
}{\xe \v RDM_DICTIONARY_DISPLAY_TEMPLATES\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_DISPLAY_TEMPLATES}
{\b {\i RDM_DICTIONARY_DISPLAY_TEMPLATES{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Display template type, typically provides information about displaying data (e.g. position on screen, etc) \par
}{\xe \v RDM_DICTIONARY_DATA_DEFINITIONS\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_DATA_DEFINITIONS}
{\b {\i RDM_DICTIONARY_DATA_DEFINITIONS{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Set Data Definition type, contains data definitions that would apply globally to any messages sent or received from the provider of the dictionary \par
}{\xe \v RDM_DICTIONARY_STYLE_SHEET\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_STYLE_SHEET}
{\b {\i RDM_DICTIONARY_STYLE_SHEET{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(6) Style sheet type, can be used to send style information \par
}{\xe \v RDM_DICTIONARY_REFERENCE\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_REFERENCE}
{\b {\i RDM_DICTIONARY_REFERENCE{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(7) Dictionary reference type, additional dictionary information \par
}{\xe \v RDM_DICTIONARY_FIELD_SET_DEFINITION\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_FIELD_SET_DEFINITION}
{\b {\i RDM_DICTIONARY_FIELD_SET_DEFINITION{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(8) Global Field Set Definition type \par
}{\xe \v RDM_DICTIONARY_ELEMENT_SET_DEFINITION\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_ELEMENT_SET_DEFINITION}
{\b {\i RDM_DICTIONARY_ELEMENT_SET_DEFINITION{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(9) Global Element Set Definition type \par
}}
\par
{
Definition at line 149 of file rsslRDM.h.}\par
}
{\xe \v RDMDictionaryVerbosityValues\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDMDictionaryVerbosityValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEW" }{}}{\fldrslt {\cs37\ul\cf2 RDMDictionaryVerbosityValues}}}
}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} \par
}}{{{\b Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_DICTIONARY_INFO\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_INFO}
{\b {\i RDM_DICTIONARY_INFO{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00) "Dictionary Info" Verbosity, no data - version information only \par
}{\xe \v RDM_DICTIONARY_MINIMAL\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_MINIMAL}
{\b {\i RDM_DICTIONARY_MINIMAL{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x03) "Minimal" Verbosity, e.g. Cache + ShortName \par
}{\xe \v RDM_DICTIONARY_NORMAL\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_NORMAL}
{\b {\i RDM_DICTIONARY_NORMAL{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x07) "Normal" Verbosity, e.g. all but description \par
}{\xe \v RDM_DICTIONARY_VERBOSE\:TRDM Dictionary Domain}
{\xe \v TRDM Dictionary Domain\:RDM_DICTIONARY_VERBOSE}
{\b {\i RDM_DICTIONARY_VERBOSE{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x0F) "Verbose" Verbosity, e.g. all with description \par
}}
\par
{
Definition at line 168 of file rsslRDM.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RDMFieldDictionary and enumtype.def Dictionary loading, encoding, and decoding helpers.\par \pard\plain 
{\tc\tcl2 \v RDMFieldDictionary and enumtype.def Dictionary loading, encoding, and decoding helpers.}
{\xe \v RDMFieldDictionary and enumtype.def Dictionary loading, encoding, and decoding helpers.}
{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Utility structures and functions that can be used to handle the loading, encoding, and decoding of the RDMFieldDictionary and enumtype.def dictionary. These also allow for performant field entry lookups. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modules\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUR" }{}}{\fldrslt {\cs37\ul\cf2 Data Dictionary}}}
\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TRDM Directory Domain\par \pard\plain 
{\tc\tcl2 \v TRDM Directory Domain}
{\xe \v TRDM Directory Domain}
{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Directory Domain is used to communicate information about services available on the system. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXL" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryDataTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXM" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_DATA_TYPE_MIN_RESERVED}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXN" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_DATA_TYPE_NONE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXO" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_DATA_TYPE_TIME}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXP" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_DATA_TYPE_ALERT}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXQ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_DATA_TYPE_HEADLINE}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXR" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_DATA_TYPE_STATUS}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXS" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_DATA_TYPE_MAX_RESERVED}}}
 =  1023
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXT" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryLinkCodes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXU" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_LINK_CODE_NONE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXV" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_LINK_CODE_OK}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXW" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_LINK_CODE_RECOVERY_STARTED}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXX" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_LINK_CODE_RECOVERY_COMPLETED}}}
 =  3
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXY" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryLinkTypes}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXZ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_LINK_TYPE_INTERACTIVE}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYA" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_LINK_TYPE_BROADCAST}}}
 =  2
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYB" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryServiceFilterFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYC" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_INFO_FILTER}}}
 =  0x00000001, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYD" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_STATE_FILTER}}}
 =  0x00000002, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYE" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_GROUP_FILTER}}}
 =  0x00000004, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYF" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_LOAD_FILTER}}}
 =  0x00000008, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYG" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_DATA_FILTER}}}
 =  0x00000010, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYH" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_LINK_FILTER}}}
 =  0x00000020, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYI" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_SEQ_MCAST_FILTER}}}
 =  0x00000040
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYJ" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryServiceFilterIds}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYK" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_INFO_ID}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYL" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_STATE_ID}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYM" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_GROUP_ID}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYN" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_LOAD_ID}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYO" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_DATA_ID}}}
 =  5, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYP" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_LINK_ID}}}
 =  6, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYQ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_SEQ_MCAST_ID}}}
 =  7
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYR" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryServiceStates}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYS" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_STATE_DOWN}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYT" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SERVICE_STATE_UP}}}
 =  1
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYU" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectorySourceMirroringMode}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYV" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SOURCE_MIRROR_MODE_ACTIVE_NO_STANDBY}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYW" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SOURCE_MIRROR_MODE_ACTIVE_WITH_STANDBY}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYX" }{}}{\fldrslt {\cs37\ul\cf2 RDM_DIRECTORY_SOURCE_MIRROR_MODE_STANDBY}}}
 =  2
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RDMDirectoryDataTypes\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDMDirectoryDataTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXL" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryDataTypes}}}
}}
\par
{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_DIRECTORY_DATA_TYPE_MIN_RESERVED\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_DATA_TYPE_MIN_RESERVED}
{\b {\i RDM_DIRECTORY_DATA_TYPE_MIN_RESERVED{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Minimum reserved Data Type \par
}{\xe \v RDM_DIRECTORY_DATA_TYPE_NONE\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_DATA_TYPE_NONE}
{\b {\i RDM_DIRECTORY_DATA_TYPE_NONE{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) None \par
}{\xe \v RDM_DIRECTORY_DATA_TYPE_TIME\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_DATA_TYPE_TIME}
{\b {\i RDM_DIRECTORY_DATA_TYPE_TIME{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Time \par
}{\xe \v RDM_DIRECTORY_DATA_TYPE_ALERT\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_DATA_TYPE_ALERT}
{\b {\i RDM_DIRECTORY_DATA_TYPE_ALERT{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Alert \par
}{\xe \v RDM_DIRECTORY_DATA_TYPE_HEADLINE\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_DATA_TYPE_HEADLINE}
{\b {\i RDM_DIRECTORY_DATA_TYPE_HEADLINE{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Headline \par
}{\xe \v RDM_DIRECTORY_DATA_TYPE_STATUS\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_DATA_TYPE_STATUS}
{\b {\i RDM_DIRECTORY_DATA_TYPE_STATUS{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Status \par
}{\xe \v RDM_DIRECTORY_DATA_TYPE_MAX_RESERVED\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_DATA_TYPE_MAX_RESERVED}
{\b {\i RDM_DIRECTORY_DATA_TYPE_MAX_RESERVED{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1023) Maximum reserved Data Type \par
}}
\par
{
Definition at line 226 of file rsslRDM.h.}\par
}
{\xe \v RDMDirectoryLinkCodes\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDMDirectoryLinkCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXT" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryLinkCodes}}}
}}
\par
{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_DIRECTORY_LINK_CODE_NONE\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_LINK_CODE_NONE}
{\b {\i RDM_DIRECTORY_LINK_CODE_NONE{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) None \par
}{\xe \v RDM_DIRECTORY_LINK_CODE_OK\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_LINK_CODE_OK}
{\b {\i RDM_DIRECTORY_LINK_CODE_OK{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Ok \par
}{\xe \v RDM_DIRECTORY_LINK_CODE_RECOVERY_STARTED\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_LINK_CODE_RECOVERY_STARTED}
{\b {\i RDM_DIRECTORY_LINK_CODE_RECOVERY_STARTED{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Recovery Started \par
}{\xe \v RDM_DIRECTORY_LINK_CODE_RECOVERY_COMPLETED\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_LINK_CODE_RECOVERY_COMPLETED}
{\b {\i RDM_DIRECTORY_LINK_CODE_RECOVERY_COMPLETED{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Recovery Completed \par
}}
\par
{
Definition at line 242 of file rsslRDM.h.}\par
}
{\xe \v RDMDirectoryLinkTypes\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDMDirectoryLinkTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACXY" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryLinkTypes}}}
}}
\par
{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_DIRECTORY_LINK_TYPE_INTERACTIVE\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_LINK_TYPE_INTERACTIVE}
{\b {\i RDM_DIRECTORY_LINK_TYPE_INTERACTIVE{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Interactive \par
}{\xe \v RDM_DIRECTORY_LINK_TYPE_BROADCAST\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_LINK_TYPE_BROADCAST}
{\b {\i RDM_DIRECTORY_LINK_TYPE_BROADCAST{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Broadcast \par
}}
\par
{
Definition at line 237 of file rsslRDM.h.}\par
}
{\xe \v RDMDirectoryServiceFilterFlags\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDMDirectoryServiceFilterFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYB" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryServiceFilterFlags}}}
}}
\par
{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_DIRECTORY_SERVICE_INFO_FILTER\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_INFO_FILTER}
{\b {\i RDM_DIRECTORY_SERVICE_INFO_FILTER{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00000001) Source Info Filter Mask \par
}{\xe \v RDM_DIRECTORY_SERVICE_STATE_FILTER\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_STATE_FILTER}
{\b {\i RDM_DIRECTORY_SERVICE_STATE_FILTER{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00000002) Source State Filter Mask \par
}{\xe \v RDM_DIRECTORY_SERVICE_GROUP_FILTER\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_GROUP_FILTER}
{\b {\i RDM_DIRECTORY_SERVICE_GROUP_FILTER{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00000004) Source Group Filter Mask \par
}{\xe \v RDM_DIRECTORY_SERVICE_LOAD_FILTER\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_LOAD_FILTER}
{\b {\i RDM_DIRECTORY_SERVICE_LOAD_FILTER{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00000008) Source Load Filter Mask \par
}{\xe \v RDM_DIRECTORY_SERVICE_DATA_FILTER\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_DATA_FILTER}
{\b {\i RDM_DIRECTORY_SERVICE_DATA_FILTER{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00000010) Source Data Filter Mask \par
}{\xe \v RDM_DIRECTORY_SERVICE_LINK_FILTER\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_LINK_FILTER}
{\b {\i RDM_DIRECTORY_SERVICE_LINK_FILTER{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00000020) Source Communication Link Information \par
}{\xe \v RDM_DIRECTORY_SERVICE_SEQ_MCAST_FILTER\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_SEQ_MCAST_FILTER}
{\b {\i RDM_DIRECTORY_SERVICE_SEQ_MCAST_FILTER{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x00000040) Source Sequenced Multicast Information \par
}}
\par
{
Definition at line 195 of file rsslRDM.h.}\par
}
{\xe \v RDMDirectoryServiceFilterIds\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDMDirectoryServiceFilterIds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYJ" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryServiceFilterIds}}}
}}
\par
{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_DIRECTORY_SERVICE_INFO_ID\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_INFO_ID}
{\b {\i RDM_DIRECTORY_SERVICE_INFO_ID{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Service Info Filter ID \par
}{\xe \v RDM_DIRECTORY_SERVICE_STATE_ID\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_STATE_ID}
{\b {\i RDM_DIRECTORY_SERVICE_STATE_ID{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Source State Filter ID \par
}{\xe \v RDM_DIRECTORY_SERVICE_GROUP_ID\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_GROUP_ID}
{\b {\i RDM_DIRECTORY_SERVICE_GROUP_ID{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Source Group Filter ID \par
}{\xe \v RDM_DIRECTORY_SERVICE_LOAD_ID\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_LOAD_ID}
{\b {\i RDM_DIRECTORY_SERVICE_LOAD_ID{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Source Load Filter ID \par
}{\xe \v RDM_DIRECTORY_SERVICE_DATA_ID\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_DATA_ID}
{\b {\i RDM_DIRECTORY_SERVICE_DATA_ID{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Source Data Filter ID \par
}{\xe \v RDM_DIRECTORY_SERVICE_LINK_ID\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_LINK_ID}
{\b {\i RDM_DIRECTORY_SERVICE_LINK_ID{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(6) Communication Link Filter ID \par
}{\xe \v RDM_DIRECTORY_SERVICE_SEQ_MCAST_ID\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_SEQ_MCAST_ID}
{\b {\i RDM_DIRECTORY_SERVICE_SEQ_MCAST_ID{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(7) Sequenced Multicast Filter ID \par
}}
\par
{
Definition at line 205 of file rsslRDM.h.}\par
}
{\xe \v RDMDirectoryServiceStates\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDMDirectoryServiceStates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYR" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectoryServiceStates}}}
}}
\par
{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_DIRECTORY_SERVICE_STATE_DOWN\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_STATE_DOWN}
{\b {\i RDM_DIRECTORY_SERVICE_STATE_DOWN{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Service state down \par
}{\xe \v RDM_DIRECTORY_SERVICE_STATE_UP\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SERVICE_STATE_UP}
{\b {\i RDM_DIRECTORY_SERVICE_STATE_UP{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Service state up \par
}}
\par
{
Definition at line 215 of file rsslRDM.h.}\par
}
{\xe \v RDMDirectorySourceMirroringMode\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDMDirectorySourceMirroringMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYU" }{}}{\fldrslt {\cs37\ul\cf2 RDMDirectorySourceMirroringMode}}}
}}
\par
{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_DIRECTORY_SOURCE_MIRROR_MODE_ACTIVE_NO_STANDBY\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SOURCE_MIRROR_MODE_ACTIVE_NO_STANDBY}
{\b {\i RDM_DIRECTORY_SOURCE_MIRROR_MODE_ACTIVE_NO_STANDBY{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Indicates the upstream provider is the active and there is no standby provider \par
}{\xe \v RDM_DIRECTORY_SOURCE_MIRROR_MODE_ACTIVE_WITH_STANDBY\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SOURCE_MIRROR_MODE_ACTIVE_WITH_STANDBY}
{\b {\i RDM_DIRECTORY_SOURCE_MIRROR_MODE_ACTIVE_WITH_STANDBY{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Indicates the upstream provider is the active and there is a standby provider \par
}{\xe \v RDM_DIRECTORY_SOURCE_MIRROR_MODE_STANDBY\:TRDM Directory Domain}
{\xe \v TRDM Directory Domain\:RDM_DIRECTORY_SOURCE_MIRROR_MODE_STANDBY}
{\b {\i RDM_DIRECTORY_SOURCE_MIRROR_MODE_STANDBY{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Indicates the upstream provider is a standby \par
}}
\par
{
Definition at line 220 of file rsslRDM.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class of Service Elements\par \pard\plain 
{\tc\tcl2 \v Class of Service Elements}
{\xe \v Class of Service Elements}
{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class of Service elements are used for negotiating features of a qualified stream. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYY" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceAuthenticationType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYZ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_AU_NOT_REQUIRED}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZA" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_AU_OMM_LOGIN}}}
 =  1
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class of Service authentication types. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZB" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceDataIntegrityType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZC" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_DI_BEST_EFFORT}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZD" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_DI_RELIABLE}}}
 =  1
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class of Service data integrity types. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZE" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceFilterFlags}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZF" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_COMMON_PROPERTIES_FLAG}}}
 =  0x01, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZG" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_AUTHENTICATION_FLAG}}}
 =  0x02, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZH" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_FLOW_CONTROL_FLAG}}}
 =  0x04, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZI" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_DATA_INTEGRITY_FLAG}}}
 =  0x08, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZJ" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_GUARANTEE_FLAG}}}
 =  0x10
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class of Service property filter flags. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZK" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceFilterIDs}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZL" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_COMMON_PROPERTIES_ID}}}
 =  1, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZM" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_AUTHENTICATION_ID}}}
 =  2, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZN" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_FLOW_CONTROL_ID}}}
 =  3, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZO" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_DATA_INTEGRITY_ID}}}
 =  4, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZP" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_GUARANTEE_ID}}}
 =  5
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class of Service property filter IDs. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZQ" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceFlowControlType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZR" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_FC_NONE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZS" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_FC_BIDIRECTIONAL}}}
 =  1
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class of Service flow control types. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZT" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceGuaranteeType}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZU" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_GU_NONE}}}
 =  0, 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZV" }{}}{\fldrslt {\cs37\ul\cf2 RDM_COS_GU_PERSISTENT_QUEUE}}}
 =  1
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class of Service guarantee types. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_COS_MAX_FRAGMENT_SIZE} = \{ 16 , (char*)":MaxFragmentSize" \}{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_COS_MAX_MSG_SIZE} = \{ 11, (char*)":MaxMsgSize" \}{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_COS_PROT_MAJOR_VERSION} = \{ 21, (char*)":ProtocolMajorVersion" \}{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_COS_PROT_MINOR_VERSION} = \{ 21, (char*)":ProtocolMinorVersion" \}{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_COS_PROT_TYPE} = \{ 13 , (char*)":ProtocolType" \}{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_COS_RECV_WINDOW_SIZE} = \{ 15, (char*)":RecvWindowSize" \}{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_COS_STREAM_VERSION} = \{ 14, (char*)":StreamVersion" \}{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_COS_SUPPS_FRAGMENTATION} = \{ 22 , (char*)":SupportsFragmentation" \}{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b RSSL_ENAME_COS_TYPE} = \{ 5, (char*)":Type" \}{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v RDMClassOfServiceAuthenticationType\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDMClassOfServiceAuthenticationType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYY" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceAuthenticationType}}}
}}
\par
{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_COS_AU_NOT_REQUIRED\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_AU_NOT_REQUIRED}
{\b {\i RDM_COS_AU_NOT_REQUIRED{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Authentication is not required. \par
}{\xe \v RDM_COS_AU_OMM_LOGIN\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_AU_OMM_LOGIN}
{\b {\i RDM_COS_AU_OMM_LOGIN{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) A login message is exchanged to authenticate the stream. \par
}}
\par
{
Definition at line 304 of file rsslRDM.h.}\par
}
{\xe \v RDMClassOfServiceDataIntegrityType\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDMClassOfServiceDataIntegrityType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZB" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceDataIntegrityType}}}
}}
\par
{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_COS_DI_BEST_EFFORT\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_DI_BEST_EFFORT}
{\b {\i RDM_COS_DI_BEST_EFFORT{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) Delivery of messages is best-effort. \par
}{\xe \v RDM_COS_DI_RELIABLE\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_DI_RELIABLE}
{\b {\i RDM_COS_DI_RELIABLE{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Messages are reliably delivered. \par
}}
\par
{
Definition at line 322 of file rsslRDM.h.}\par
}
{\xe \v RDMClassOfServiceFilterFlags\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDMClassOfServiceFilterFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZE" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceFilterFlags}}}
}}
\par
{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_COS_COMMON_PROPERTIES_FLAG\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_COMMON_PROPERTIES_FLAG}
{\b {\i RDM_COS_COMMON_PROPERTIES_FLAG{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x01) Class of Service Common Properties Filter Flag \par
}{\xe \v RDM_COS_AUTHENTICATION_FLAG\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_AUTHENTICATION_FLAG}
{\b {\i RDM_COS_AUTHENTICATION_FLAG{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x02) Class of Service Authentication Filter Flag \par
}{\xe \v RDM_COS_FLOW_CONTROL_FLAG\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_FLOW_CONTROL_FLAG}
{\b {\i RDM_COS_FLOW_CONTROL_FLAG{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x04) Class of Service Flow Control Filter Flag \par
}{\xe \v RDM_COS_DATA_INTEGRITY_FLAG\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_DATA_INTEGRITY_FLAG}
{\b {\i RDM_COS_DATA_INTEGRITY_FLAG{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x08) Class of Service Data Integrity Filter Flag \par
}{\xe \v RDM_COS_GUARANTEE_FLAG\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_GUARANTEE_FLAG}
{\b {\i RDM_COS_GUARANTEE_FLAG{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0x10) Class of Service Guarantee Filter Flag \par
}}
\par
{
Definition at line 292 of file rsslRDM.h.}\par
}
{\xe \v RDMClassOfServiceFilterIDs\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDMClassOfServiceFilterIDs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZK" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceFilterIDs}}}
}}
\par
{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_COS_COMMON_PROPERTIES_ID\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_COMMON_PROPERTIES_ID}
{\b {\i RDM_COS_COMMON_PROPERTIES_ID{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Class of Service Common Properties Filter ID \par
}{\xe \v RDM_COS_AUTHENTICATION_ID\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_AUTHENTICATION_ID}
{\b {\i RDM_COS_AUTHENTICATION_ID{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(2) Class of Service Authentication Filter ID \par
}{\xe \v RDM_COS_FLOW_CONTROL_ID\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_FLOW_CONTROL_ID}
{\b {\i RDM_COS_FLOW_CONTROL_ID{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(3) Class of Service Flow Control Filter ID \par
}{\xe \v RDM_COS_DATA_INTEGRITY_ID\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_DATA_INTEGRITY_ID}
{\b {\i RDM_COS_DATA_INTEGRITY_ID{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(4) Class of Service Data Integrity Filter ID \par
}{\xe \v RDM_COS_GUARANTEE_ID\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_GUARANTEE_ID}
{\b {\i RDM_COS_GUARANTEE_ID{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(5) Class of Service Guarantee Filter ID \par
}}
\par
{
Definition at line 280 of file rsslRDM.h.}\par
}
{\xe \v RDMClassOfServiceFlowControlType\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDMClassOfServiceFlowControlType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZQ" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceFlowControlType}}}
}}
\par
{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_COS_FC_NONE\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_FC_NONE}
{\b {\i RDM_COS_FC_NONE{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) None \par
}{\xe \v RDM_COS_FC_BIDIRECTIONAL\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_FC_BIDIRECTIONAL}
{\b {\i RDM_COS_FC_BIDIRECTIONAL{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Flow control is performed in both directions. \par
}}
\par
{
Definition at line 313 of file rsslRDM.h.}\par
}
{\xe \v RDMClassOfServiceGuaranteeType\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDMClassOfServiceGuaranteeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACZT" }{}}{\fldrslt {\cs37\ul\cf2 RDMClassOfServiceGuaranteeType}}}
}}
\par
{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator: }}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v RDM_COS_GU_NONE\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_GU_NONE}
{\b {\i RDM_COS_GU_NONE{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(0) None \par
}{\xe \v RDM_COS_GU_PERSISTENT_QUEUE\:Class of Service Elements}
{\xe \v Class of Service Elements\:RDM_COS_GU_PERSISTENT_QUEUE}
{\b {\i RDM_COS_GU_PERSISTENT_QUEUE{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(1) Messages for queue streams are persisted for guaranteed delivery. \par
}}
\par
{
Definition at line 330 of file rsslRDM.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RSSL Library Version Information Structure\par \pard\plain 
{\tc\tcl2 \v RSSL Library Version Information Structure}
{\xe \v RSSL Library Version Information Structure}
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library Version Information structure to be populated with library version info. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_LIBRARY_VERSION_INFO}}}
\~ \{ 0, 0, 0 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}} initializer. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAG" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLibraryVersionInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
 *pLibInfo)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation\par
\pard\plain 
{\xe \v RSSL_INIT_LIBRARY_VERSION_INFO\:RSSL Library Version Information Structure}
{\xe \v RSSL Library Version Information Structure\:RSSL_INIT_LIBRARY_VERSION_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_LIBRARY_VERSION_INFO}}}
\~ \{ 0, 0, 0 \}}}
\par
{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAG" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLibraryVersionInfo}}} \par
}}{
Definition at line 263 of file rsslTypes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rsslClearLibraryVersionInfo\:RSSL Library Version Information Structure}
{\xe \v RSSL Library Version Information Structure\:rsslClearLibraryVersionInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAG" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLibraryVersionInfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}
 * {\i pLibInfo})}}
\par
{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_LIBRARY_VERSION_INFO}}} \par
}}{
Definition at line 270 of file rsslTypes.h.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Directory Documentation{\tc \v Directory Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/local/jenkins/workspace/ETACRunDist/upa/prod/distUnix_Staging/ Directory Reference\par \pard\plain 
{\tc\tcl2 \v /local/jenkins/workspace/ETACRunDist/upa/prod/distUnix_Staging/ Directory Reference}
{\xe \v /local/jenkins/workspace/ETACRunDist/upa/prod/distUnix_Staging/ Directory Reference}
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Directories\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
directory {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLK" }{}}{\fldrslt {\cs37\ul\cf2 Include}}}
\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/local/jenkins/workspace/ETACRunDist/upa/prod/distUnix_Staging/Include/ Directory Reference\par \pard\plain 
{\tc\tcl2 \v /local/jenkins/workspace/ETACRunDist/upa/prod/distUnix_Staging/Include/ Directory Reference}
{\xe \v /local/jenkins/workspace/ETACRunDist/upa/prod/distUnix_Staging/Include/ Directory Reference}
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Directories\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
directory {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLL" }{}}{\fldrslt {\cs37\ul\cf2 rtr}}}
\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/local/jenkins/workspace/ETACRunDist/upa/prod/ Directory Reference\par \pard\plain 
{\tc\tcl2 \v /local/jenkins/workspace/ETACRunDist/upa/prod/ Directory Reference}
{\xe \v /local/jenkins/workspace/ETACRunDist/upa/prod/ Directory Reference}
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Directories\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
directory {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLJ" }{}}{\fldrslt {\cs37\ul\cf2 distUnix_Staging}}}
\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/local/jenkins/workspace/ETACRunDist/upa/prod/distUnix_Staging/Include/rtr/ Directory Reference\par \pard\plain 
{\tc\tcl2 \v /local/jenkins/workspace/ETACRunDist/upa/prod/distUnix_Staging/Include/rtr/ Directory Reference}
{\xe \v /local/jenkins/workspace/ETACRunDist/upa/prod/distUnix_Staging/Include/rtr/ Directory Reference}
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Files\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b os.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslAckMsg.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslArray.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslCloseMsg.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslDataDictionary.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslDataPackage.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslDataTypeEnums.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslDataUtils.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslDateTime.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslElementList.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslFieldList.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslFilterList.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslGenericMsg.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslIterators.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslMap.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslMessagePackage.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslMsg.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslMsgBase.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslMsgDecoders.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslMsgEncoders.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslMsgKey.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslPostMsg.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslPrimitiveDecoders.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslPrimitiveEncoders.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslQos.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslRDM.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslReal.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslRefreshMsg.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslRequestMsg.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslRetCodes.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslRmtes.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslSeries.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslSetData.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslState.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslStatusMsg.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslTransport.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslTypes.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslUpdateMsg.h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b rsslVector.h}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslAcceptOptions Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslAcceptOptions}
{\xe \v RsslAcceptOptions}
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Accept Options used in the rsslAccept call. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAH" }{}}{\fldrslt {\cs37\ul\cf2 nakMount}}}
{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If RSSL_TRUE, rsslAccept will send a NAK - even if the connection request is valid. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAI" }{}}{\fldrslt {\cs37\ul\cf2 userSpecPtr}}}
{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user specified pointer, returned as userSpecPtr of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAccept()}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ACCEPT_OPTS}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAccept}}} \par
}}{
Definition at line 873 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslAckMsg Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslAckMsg}
{\xe \v RsslAckMsg}
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}} is used to acknowledge success/failure or completion of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}. }}\par
{
{\f2 #include <rsslAckMsg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCI" }{}}{\fldrslt {\cs37\ul\cf2 ackId}}}
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ID used to associate this Ack with the message it is acknowledging. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEM" }{}}{\fldrslt {\cs37\ul\cf2 extendedHeader}}}
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended header attributes, used for per-domain defined attributes that are not used when determining stream uniqueness. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDW" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckFlags::RSSL_AKMF_HAS_EXTENDED_HEADER}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDJ" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values are used to indicate optional member presence. The available options are defined by values present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDU" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDM" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common message header members (streamId, domainType, msgKey, etc.), msgKey is optional and typically not sent as streamId can be used to match updates to a specific item stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDN" }{}}{\fldrslt {\cs37\ul\cf2 nakCode}}}
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This enumeration indicates the reason for a negative acknowledgement(NAK). See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEB" }{}}{\fldrslt {\cs37\ul\cf2 RsslNakCodes}}} for values. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDK" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckFlags::RSSL_AKMF_HAS_NAK_CODE}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEN" }{}}{\fldrslt {\cs37\ul\cf2 seqNum}}}
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence number intended to help with temporal ordering. Typically, this will be incremented with every message, but may have gaps depending on the sequencing algorithm being used. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckFlags::RSSL_AKMF_HAS_SEQ_NUM}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDP" }{}}{\fldrslt {\cs37\ul\cf2 text}}}
{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This provides additional information about the acceptance or rejection of the message being acknowledged. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDU" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ACK_MSG}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearAckMsg}}} \par
}}{
Definition at line 24 of file rsslAckMsg.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslArray Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslArray}
{\xe \v RsslArray}
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}} is a uniform primitive type that can contain multiple simple primitive entries. Entries can be either fixed length or variable length. }}\par
{
{\f2 #include <rsslArray.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXQ" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw data contents of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXF" }{}}{\fldrslt {\cs37\ul\cf2 itemLength}}}
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If items are fixed length populate length here - otherwise make 0 for length specified item encoding. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXE" }{}}{\fldrslt {\cs37\ul\cf2 primitiveType}}}
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primitive type (0 - 64) for all items in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 RsslArray}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ARRAY}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearArray}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIE" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeArray}}} \par
}}{
Definition at line 23 of file rsslArray.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslBindOptions Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslBindOptions}
{\xe \v RsslBindOptions}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Bind Options used in the rsslBind call. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAJ" }{}}{\fldrslt {\cs37\ul\cf2 channelsBlocking}}}
{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If RSSL_TRUE, the channels will be allowed to block. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAK" }{}}{\fldrslt {\cs37\ul\cf2 clientToServerPings}}}
{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If RSSL_TRUE, pings will be sent from client side to server side. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAL" }{}}{\fldrslt {\cs37\ul\cf2 componentVersion}}}
{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined component version information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAM" }{}}{\fldrslt {\cs37\ul\cf2 compressionLevel}}}
{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Level of compression to use, 1: More speed - 9: More compression. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAN" }{}}{\fldrslt {\cs37\ul\cf2 compressionType}}}
{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bitmask of RsslCompTypes compression types supported by the server. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPI" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionTypes}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAO" }{}}{\fldrslt {\cs37\ul\cf2 connectionType}}}
{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If RSSL_CONN_TYPE_UNIDIR_SHMEM this will use server to client shared memory. Setting to RSSL_CONN_TYPE_SOCKET or RSSL_CONN_TYPE_HTTP will allow for accepting both socket or HTTP connection types. RSSL_CONN_TYPE_ENCRYPTED is currently not supported for servers. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAP" }{}}{\fldrslt {\cs37\ul\cf2 forceCompression}}}
{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lets the server force the client to use compression. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAQ" }{}}{\fldrslt {\cs37\ul\cf2 guaranteedOutputBuffers}}}
{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the guaranteed number of output buffers for accepted channels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAR" }{}}{\fldrslt {\cs37\ul\cf2 interfaceName}}}
{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Network interface card to bind to. If NULL, will use default NIC. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAS" }{}}{\fldrslt {\cs37\ul\cf2 majorVersion}}}
{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The major version number of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAT" }{}}{\fldrslt {\cs37\ul\cf2 maxFragmentSize}}}
{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum size fragment to be sent without any fragmentation or assembly of messages. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAU" }{}}{\fldrslt {\cs37\ul\cf2 maxOutputBuffers}}}
{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum number of output buffers for accepted channels. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAV" }{}}{\fldrslt {\cs37\ul\cf2 minorVersion}}}
{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The minor version number of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAW" }{}}{\fldrslt {\cs37\ul\cf2 minPingTimeout}}}
{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Least amount of time to use as a timeout for a connected channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAX" }{}}{\fldrslt {\cs37\ul\cf2 numInputBuffers}}}
{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the number of input buffers for reading into (of maxFragmentSize) used to read in data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAY" }{}}{\fldrslt {\cs37\ul\cf2 pingTimeout}}}
{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desired amount of time to use as a timeout for a connected channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAZ" }{}}{\fldrslt {\cs37\ul\cf2 protocolType}}}
{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The protocol type of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBA" }{}}{\fldrslt {\cs37\ul\cf2 serverBlocking}}}
{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If RSSL_TRUE, the server will be allowed to block. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBB" }{}}{\fldrslt {\cs37\ul\cf2 serverToClientPings}}}
{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If RSSL_TRUE, pings will be sent from server side to client side. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBC" }{}}{\fldrslt {\cs37\ul\cf2 serviceName}}}
{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local port number or service name to bind to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBD" }{}}{\fldrslt {\cs37\ul\cf2 sharedPoolLock}}}
{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether to enable mutex locks on the shared buffer pool. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBE" }{}}{\fldrslt {\cs37\ul\cf2 sharedPoolSize}}}
{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the maximum size of the shared buffer pool (of sharedPoolSize * maxFragmentSize). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBF" }{}}{\fldrslt {\cs37\ul\cf2 sysRecvBufSize}}}
{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size (in kilobytes) of the system's receive buffer used for this connection, where applicable. Setting of 0 indicates to use default sizes. This setting will carry through on all connections accepted with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAccept()}}}. This can also be set or changed via rsslIoctl(), however setting prior to connection may allow for larger sizes to be specified. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBG" }{}}{\fldrslt {\cs37\ul\cf2 sysSendBufSize}}}
{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size (in kilobytes) of the system's send buffer used for this connection, where applicable. Setting of 0 indicates to use default sizes. This setting will carry through on all connections accepted with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAccept()}}}. This can also be set or changed per channel via rsslIoctl(), however setting prior to connection may allow for larger sizes to be specified. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 tcp_nodelay}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslTcpOpts}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBH" }{}}{\fldrslt {\cs37\ul\cf2 tcpOpts}}}
{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TCP transport specific options (used by RSSL_CONN_TYPE_SOCKET and RSSL_CONN_TYPE_HTTP). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBI" }{}}{\fldrslt {\cs37\ul\cf2 userSpecPtr}}}
{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user specified pointer, returned as userSpecPtr of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslServer}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQY" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_BIND_OPTS}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANT" }{}}{\fldrslt {\cs37\ul\cf2 rsslBind}}} \par
}}{
Definition at line 759 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v tcp_nodelay\:RsslBindOptions}
{\xe \v RsslBindOptions\:tcp_nodelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBindOptions::tcp_nodelay}}}
}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "deprecated__deprecated000006" }{}}{\fldrslt {\cs37\ul\cf2 Deprecated}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: Only used with connectionType of SOCKET. If RSSL_TRUE, disables Nagle's Algorithm. Users should migrate to the RsslBindOptions::tcpOpts::tcp_nodelay configuration for the same behavior with current and future connection types \par
}
}{
Definition at line 767 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslChannel Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslChannel}
{\xe \v RsslChannel}
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Channel structure returned via {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRA" }{}}{\fldrslt {\cs37\ul\cf2 rsslAccept()}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect()}}} calls. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBJ" }{}}{\fldrslt {\cs37\ul\cf2 clientHostname}}}
{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When returned through rsslAccept, this contains the hostname of the connected client. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBK" }{}}{\fldrslt {\cs37\ul\cf2 clientIP}}}
{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When returned through rsslAccept, this contains the IP address of the connected client. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPI" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionTypes}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBL" }{}}{\fldrslt {\cs37\ul\cf2 connectionType}}}
{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type that this connection is. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBM" }{}}{\fldrslt {\cs37\ul\cf2 majorVersion}}}
{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the major version number of the encoder/decoder that should be used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBN" }{}}{\fldrslt {\cs37\ul\cf2 minorVersion}}}
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the minor version number of the encoder/decoder that should be used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslSocket}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBO" }{}}{\fldrslt {\cs37\ul\cf2 oldSocketId}}}
{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Old Socket Id of this rssl channel - used in rsslRead FD Change events. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBP" }{}}{\fldrslt {\cs37\ul\cf2 pingTimeout}}}
{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the interval of time that a message or ping should be sent. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBQ" }{}}{\fldrslt {\cs37\ul\cf2 protocolType}}}
{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the protocol type of the encoder/decoder that should be used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslSocket}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBR" }{}}{\fldrslt {\cs37\ul\cf2 socketId}}}
{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Socket ID of this RSSL channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelState}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBS" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
State of this RSSL channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBT" }{}}{\fldrslt {\cs37\ul\cf2 userSpecPtr}}}
{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user specified pointer, possibly a closure. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 108 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslChannelInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslChannelInfo}
{\xe \v RsslChannelInfo}
{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Channel Info returned by rsslGetChannelInfo call. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBV" }{}}{\fldrslt {\cs37\ul\cf2 clientToServerPings}}}
{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is true if the client sends pings to the server. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBW" }{}}{\fldrslt {\cs37\ul\cf2 RsslComponentInfo}}}
 ** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBX" }{}}{\fldrslt {\cs37\ul\cf2 componentInfo}}}
{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A variable length array that contains product version information for the component(s) that this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}} is connected to. The number of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBW" }{}}{\fldrslt {\cs37\ul\cf2 RsslComponentInfo}}} structures present in array is indicated by componentInfoCount. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBY" }{}}{\fldrslt {\cs37\ul\cf2 componentInfoCount}}}
{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBW" }{}}{\fldrslt {\cs37\ul\cf2 RsslComponentInfo}}} structures contained in the dynamic componentInfo array. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBZ" }{}}{\fldrslt {\cs37\ul\cf2 compressionThreshold}}}
{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When compression is enabled, any message larger than this threshold will be compressed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslCompTypes}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCA" }{}}{\fldrslt {\cs37\ul\cf2 compressionType}}}
{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the type of compression being used, if it is enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCB" }{}}{\fldrslt {\cs37\ul\cf2 encryptionProtocol}}}
{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current encryption protocol used. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCC" }{}}{\fldrslt {\cs37\ul\cf2 guaranteedOutputBuffers}}}
{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the guaranteed number of output buffers available to the channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCD" }{}}{\fldrslt {\cs37\ul\cf2 maxFragmentSize}}}
{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the max fragment size before fragmentation and reassembly is necessary. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCE" }{}}{\fldrslt {\cs37\ul\cf2 maxOutputBuffers}}}
{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the maximum number of output buffers available to the channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCF" }{}}{\fldrslt {\cs37\ul\cf2 RsslMCastStats}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCG" }{}}{\fldrslt {\cs37\ul\cf2 multicastStats}}}
{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When using a multicast connection type, this will be populated with information about the multicast protocol. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCH" }{}}{\fldrslt {\cs37\ul\cf2 numInputBuffers}}}
{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of input buffers available to the channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCI" }{}}{\fldrslt {\cs37\ul\cf2 pingTimeout}}}
{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the value of the negotiated ping timeout. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCJ" }{}}{\fldrslt {\cs37\ul\cf2 priorityFlushStrategy}}}
 [{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RSSL_MAX_FLUSH_STRATEGY}}}
]{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The currently used flush strategy associated with this channel, H = High, M = Medium, L = Low. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCK" }{}}{\fldrslt {\cs37\ul\cf2 serverToClientPings}}}
{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is true if the server sends pings to the client. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 sysRecvBufSize}}}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the systems Receive Buffer size. This reports the systems receive buffer size respective to the transport type being used (TCP, UDP, etc) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 sysSendBufSize}}}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the systems Send Buffer size. This reports the systems send buffer size respective to the transport type being used (TCP, UDP, etc) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 tcpRecvBufSize}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 tcpSendBufSize}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid rsslGetChannelInfo \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCF" }{}}{\fldrslt {\cs37\ul\cf2 RsslMCastStats}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBW" }{}}{\fldrslt {\cs37\ul\cf2 RsslComponentInfo}}} \par
}}{
Definition at line 298 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v tcpRecvBufSize\:RsslChannelInfo}
{\xe \v RsslChannelInfo\:tcpRecvBufSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo::tcpRecvBufSize}}}
}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "deprecated__deprecated000002" }{}}{\fldrslt {\cs37\ul\cf2 Deprecated}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: This is the TCP Receive Buffer size. For consistency across all transport types, use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo::sysRecvBufSize}}} \par
}
}{
Definition at line 309 of file rsslTransport.h.}\par
}
{\xe \v tcpSendBufSize\:RsslChannelInfo}
{\xe \v RsslChannelInfo\:tcpSendBufSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo::tcpSendBufSize}}}
}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "deprecated__deprecated000001" }{}}{\fldrslt {\cs37\ul\cf2 Deprecated}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: This is the TCP Send Buffer size. For consistency across all transport types, use {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo::sysSendBufSize}}} \par
}
}{
Definition at line 308 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslCloseMsg Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslCloseMsg}
{\xe \v RsslCloseMsg}
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}} is used to indicate that a consuming application is no longer interested in content on the stream being closed. }}\par
{
{\f2 #include <rsslCloseMsg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAS" }{}}{\fldrslt {\cs37\ul\cf2 extendedHeader}}}
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended header attributes, used for per-domain defined attributes that are not used when determining stream uniqueness. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseFlags::RSSL_CLMF_HAS_EXTENDED_HEADER}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAF" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values are used to indicate optional member presence. The available options are defined by values present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAO" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAJ" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common message header members (streamId, domainType, msgKey, etc.). }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_CLOSE_MSG}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACAH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearCloseMsg}}} \par
}}{
Definition at line 21 of file rsslCloseMsg.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslComponentInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslComponentInfo}
{\xe \v RsslComponentInfo}
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connected Component Information, used to identify components from across the connection. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\b componentVersion}{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid rsslGetChannelInfo \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBU" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo}}} \par
}}{
Definition at line 286 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslConnectionInfo Union Reference\par \pard\plain 
{\tc\tcl2 \v RsslConnectionInfo}
{\xe \v RsslConnectionInfo}
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring the network connection. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRK" }{}}{\fldrslt {\cs37\ul\cf2 RsslSegmentedNetwork}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCM" }{}}{\fldrslt {\cs37\ul\cf2 segmented}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRO" }{}}{\fldrslt {\cs37\ul\cf2 RsslUnifiedNetwork}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCN" }{}}{\fldrslt {\cs37\ul\cf2 unified}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRO" }{}}{\fldrslt {\cs37\ul\cf2 RsslUnifiedNetwork}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRK" }{}}{\fldrslt {\cs37\ul\cf2 RsslSegmentedNetwork}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} \par
}}{
Definition at line 511 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v segmented\:RsslConnectionInfo}
{\xe \v RsslConnectionInfo\:segmented}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRK" }{}}{\fldrslt {\cs37\ul\cf2 RsslSegmentedNetwork}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCM" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionInfo::segmented}}}
}}
\par
{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connection parameters when sending and receiving on different networks. This is typically used with multicast networks that have different groups of senders and receivers (e.g. NIProvider can send network and ADH on receive network) \par
}{
Definition at line 512 of file rsslTransport.h.}\par
}
{\xe \v unified\:RsslConnectionInfo}
{\xe \v RsslConnectionInfo\:unified}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRO" }{}}{\fldrslt {\cs37\ul\cf2 RsslUnifiedNetwork}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCN" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionInfo::unified}}}
}}
\par
{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connection parameters when sending and receiving on same network. This is typically used with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_HTTP}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}, and fully connected/mesh multicast networks \par
}{
Definition at line 513 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslConnectOptions Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslConnectOptions}
{\xe \v RsslConnectOptions}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Connect Options used in the rsslConnect call. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCO" }{}}{\fldrslt {\cs37\ul\cf2 blocking}}}
{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If RSSL_TRUE, the connection will block. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCP" }{}}{\fldrslt {\cs37\ul\cf2 componentVersion}}}
{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User defined component version information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslCompTypes}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCQ" }{}}{\fldrslt {\cs37\ul\cf2 compressionType}}}
{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Which compression type, if any, to attempt to negotiate. Compression is only supported for connectionType of SOCKET, HTTP, or ENCRYPTED. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRG" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionInfo}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCR" }{}}{\fldrslt {\cs37\ul\cf2 connectionInfo}}}
{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information about the network hosts/addresses, ports, and network interface cards to leverage during connection. This configuration offers configuration for various network topologies and can be used for all connection types. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPI" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionTypes}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCS" }{}}{\fldrslt {\cs37\ul\cf2 connectionType}}}
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}} this will use encryption, if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_HTTP}}} this will use unencrypted http tunneling, if {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_UNIDIR_SHMEM}}} this will use server to client shared memory. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRH" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncryptionOpts}}}
 {\b encryptionOpts}{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCU" }{}}{\fldrslt {\cs37\ul\cf2 guaranteedOutputBuffers}}}
{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of output buffers guaranteed to this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 hostName}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCV" }{}}{\fldrslt {\cs37\ul\cf2 majorVersion}}}
{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The major version number of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCW" }{}}{\fldrslt {\cs37\ul\cf2 minorVersion}}}
{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The minor version number of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRI" }{}}{\fldrslt {\cs37\ul\cf2 RsslMCastOpts}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCX" }{}}{\fldrslt {\cs37\ul\cf2 multicastOpts}}}
{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multicast transport specific options (used by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_RELIABLE_MCAST}}}). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCY" }{}}{\fldrslt {\cs37\ul\cf2 numInputBuffers}}}
{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the number of buffers (of maxFragmentSize) used to read in data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADCZ" }{}}{\fldrslt {\cs37\ul\cf2 objectName}}}
{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When using connection type of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_HTTP}}} or {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}, this can be used as an object name to pass with the URL in underlying HTTP connection messages. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDA" }{}}{\fldrslt {\cs37\ul\cf2 pingTimeout}}}
{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The desired amount of time to use to timeout the server. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDB" }{}}{\fldrslt {\cs37\ul\cf2 protocolType}}}
{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The protocol type of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslProxyOpts}}}
 {\b proxyOpts}{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeqMCastOpts}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDD" }{}}{\fldrslt {\cs37\ul\cf2 seqMulticastOpts}}}
{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequenced Multicast transport specific options (used by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SEQ_MCAST}}}). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 serviceName}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRM" }{}}{\fldrslt {\cs37\ul\cf2 RsslShmemOpts}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDE" }{}}{\fldrslt {\cs37\ul\cf2 shmemOpts}}}
{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
shmem transport specific options (used by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_UNIDIR_SHMEM}}}). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDF" }{}}{\fldrslt {\cs37\ul\cf2 sysRecvBufSize}}}
{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size (in kilobytes) of the system's receive buffer used for this connection, where applicable. Setting of 0 indicates to use default sizes. This can also be set or changed via rsslIoctl(), however setting prior to connection may allow for larger sizes to be specified. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDG" }{}}{\fldrslt {\cs37\ul\cf2 sysSendBufSize}}}
{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The size (in kilobytes) of the system's send buffer used for this connection, where applicable. Setting of 0 indicates to use default sizes. This can also be set or changed via rsslIoctl(), however setting prior to connection may allow for larger sizes to be specified. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 tcp_nodelay}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslTcpOpts}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDH" }{}}{\fldrslt {\cs37\ul\cf2 tcpOpts}}}
{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TCP transport specific options (used by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_HTTP}}}). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDI" }{}}{\fldrslt {\cs37\ul\cf2 userSpecPtr}}}
{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user specified pointer, returned as userSpecPtr of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_CONNECT_OPTS}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRG" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionInfo}}} \par
}}{
Definition at line 524 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hostName\:RsslConnectOptions}
{\xe \v RsslConnectOptions\:hostName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions::hostName}}}
}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "deprecated__deprecated000003" }{}}{\fldrslt {\cs37\ul\cf2 Deprecated}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: Hostname to connect to/join. All data is exchanged on this hostName:serviceName combination. This option will only function for the SOCKET, HTTP, and ENCRYPTED connection types. Users should migrate to the RsslConnectOptions::connectionInfo::unified::address configuration for the same behavior with current and future connection types \par
}
}{
Definition at line 525 of file rsslTransport.h.}\par
}
{\xe \v serviceName\:RsslConnectOptions}
{\xe \v RsslConnectOptions\:serviceName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions::serviceName}}}
}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "deprecated__deprecated000004" }{}}{\fldrslt {\cs37\ul\cf2 Deprecated}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: Port number or service name to connect to/join. All data is exchanged on this hostName:serviceName combination. This option will only function for the SOCKET, HTTP, and ENCRYPTED connection types. Users should migrate to the RsslConnectOptions::connectionInfo::unified::serviceName configuration for the same behavior with current and future connection types \par
}
}{
Definition at line 526 of file rsslTransport.h.}\par
}
{\xe \v tcp_nodelay\:RsslConnectOptions}
{\xe \v RsslConnectOptions\:tcp_nodelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions::tcp_nodelay}}}
}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "deprecated__deprecated000005" }{}}{\fldrslt {\cs37\ul\cf2 Deprecated}}}:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid DEPRECATED: Only used with connectionType of SOCKET. If RSSL_TRUE, disables Nagle's Algorithm. Users should migrate to the RsslConnectOptions::tcpOpts::tcp_nodelay configuration for the same behavior with current and future connection types \par
}
}{
Definition at line 532 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDataDictionary Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslDataDictionary}
{\xe \v RsslDataDictionary}
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A data dictionary Houses all known fields loaded from a field dictionary and their corresponding enum types loaded from an enum type dictionary. The dictionary also saves general information about the dictionary itself -- this is found in the "!tag" comments in the file or in the summary data of dictionaries encoded via the official domain model. }}\par
{
{\f2 #include <rsslDataDictionary.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}}
 ** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDJ" }{}}{\fldrslt {\cs37\ul\cf2 entriesArray}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDK" }{}}{\fldrslt {\cs37\ul\cf2 enumTableCount}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUU" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable}}}
 ** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDL" }{}}{\fldrslt {\cs37\ul\cf2 enumTables}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDM" }{}}{\fldrslt {\cs37\ul\cf2 info_DictionaryId}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDN" }{}}{\fldrslt {\cs37\ul\cf2 infoEnum_Date}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDO" }{}}{\fldrslt {\cs37\ul\cf2 infoEnum_Desc}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDP" }{}}{\fldrslt {\cs37\ul\cf2 infoEnum_DT_Version}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDQ" }{}}{\fldrslt {\cs37\ul\cf2 infoEnum_Filename}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDR" }{}}{\fldrslt {\cs37\ul\cf2 infoEnum_RT_Version}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDS" }{}}{\fldrslt {\cs37\ul\cf2 infoField_Build}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDT" }{}}{\fldrslt {\cs37\ul\cf2 infoField_Date}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDU" }{}}{\fldrslt {\cs37\ul\cf2 infoField_Desc}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDV" }{}}{\fldrslt {\cs37\ul\cf2 infoField_Filename}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDW" }{}}{\fldrslt {\cs37\ul\cf2 infoField_Version}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\b isInitialized}{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDY" }{}}{\fldrslt {\cs37\ul\cf2 maxFid}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDZ" }{}}{\fldrslt {\cs37\ul\cf2 minFid}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEA" }{}}{\fldrslt {\cs37\ul\cf2 numberOfEntries}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMfFieldTypes}}} \par
}}{
Definition at line 93 of file rsslDataDictionary.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v entriesArray\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:entriesArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry}}}
** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::entriesArray}}}
}}
\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The list of entries, indexed by FieldId. The full range of possible FieldId's may be looked up -- nonexistent fields are NULL. \par
}{
Definition at line 98 of file rsslDataDictionary.h.}\par
}
{\xe \v enumTableCount\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:enumTableCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::enumTableCount}}}
}}
\par
{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total number of tables present. \par
}{
Definition at line 102 of file rsslDataDictionary.h.}\par
}
{\xe \v enumTables\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:enumTables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUU" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable}}}
** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDL" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::enumTables}}}
}}
\par
{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tables present in this dictionary. The entries in entriesArray hold pointers to their respective tables in this list. \par
}{
Definition at line 101 of file rsslDataDictionary.h.}\par
}
{\xe \v info_DictionaryId\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:info_DictionaryId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDM" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::info_DictionaryId}}}
}}
\par
{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: DictionaryId. All dictionaries loaded using this object will have this tag matched if found. \par
}{
Definition at line 105 of file rsslDataDictionary.h.}\par
}
{\xe \v infoEnum_Date\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoEnum_Date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDN" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoEnum_Date}}}
}}
\par
{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Date \par
}{
Definition at line 123 of file rsslDataDictionary.h.}\par
}
{\xe \v infoEnum_Desc\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoEnum_Desc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDO" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoEnum_Desc}}}
}}
\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Desc \par
}{
Definition at line 122 of file rsslDataDictionary.h.}\par
}
{\xe \v infoEnum_DT_Version\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoEnum_DT_Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoEnum_DT_Version}}}
}}
\par
{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: DT_Version \par
}{
Definition at line 112 of file rsslDataDictionary.h.}\par
}
{\xe \v infoEnum_Filename\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoEnum_Filename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoEnum_Filename}}}
}}
\par
{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Filename \par
}{
Definition at line 121 of file rsslDataDictionary.h.}\par
}
{\xe \v infoEnum_RT_Version\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoEnum_RT_Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDR" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoEnum_RT_Version}}}
}}
\par
{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: RT_Version \par
}{
Definition at line 111 of file rsslDataDictionary.h.}\par
}
{\xe \v infoField_Build\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoField_Build}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoField_Build}}}
}}
\par
{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Build \par
}{
Definition at line 117 of file rsslDataDictionary.h.}\par
}
{\xe \v infoField_Date\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoField_Date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDT" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoField_Date}}}
}}
\par
{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Date \par
}{
Definition at line 118 of file rsslDataDictionary.h.}\par
}
{\xe \v infoField_Desc\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoField_Desc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoField_Desc}}}
}}
\par
{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Desc \par
}{
Definition at line 116 of file rsslDataDictionary.h.}\par
}
{\xe \v infoField_Filename\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoField_Filename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDV" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoField_Filename}}}
}}
\par
{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Filename \par
}{
Definition at line 115 of file rsslDataDictionary.h.}\par
}
{\xe \v infoField_Version\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:infoField_Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDW" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::infoField_Version}}}
}}
\par
{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Version \par
}{
Definition at line 108 of file rsslDataDictionary.h.}\par
}
{\xe \v maxFid\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:maxFid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDY" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::maxFid}}}
}}
\par
{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The highest fieldId present in the dictionary \par
}{
Definition at line 96 of file rsslDataDictionary.h.}\par
}
{\xe \v minFid\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:minFid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADDZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::minFid}}}
}}
\par
{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The lowest fieldId present in the dictionary \par
}{
Definition at line 95 of file rsslDataDictionary.h.}\par
}
{\xe \v numberOfEntries\:RsslDataDictionary}
{\xe \v RsslDataDictionary\:numberOfEntries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataDictionary::numberOfEntries}}}
}}
\par
{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The total number of entries in the dictionary \par
}{
Definition at line 97 of file rsslDataDictionary.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDate Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslDate}
{\xe \v RsslDate}
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} type allows for bandwidth optimized representation of a date value containing month, day, and year information. }}\par
{
{\f2 #include <rsslDateTime.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUR" }{}}{\fldrslt {\cs37\ul\cf2 day}}}
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Day of the month (0 - 31 where 0 indicates blank) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 month}}}
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Month of the year (0 - 12 where 0 indicates blank) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 year}}}
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Year (0 - 4095 where 0 indicates blank) }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATE}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATE}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDate}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUV" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankDate}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDate}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDate}}} \par
}}{
Definition at line 21 of file rsslDateTime.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDateTime Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslDateTime}
{\xe \v RsslDateTime}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}} type allows for bandwidth optimized representation of both a date and a time value containing month, day, year, hour, minute, second, millisecond, microsecond, and nanosecond information. }}\par
{
{\f2 #include <rsslDateTime.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWH" }{}}{\fldrslt {\cs37\ul\cf2 date}}}
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslDate}}} portion of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWI" }{}}{\fldrslt {\cs37\ul\cf2 time}}}
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} portion of the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslDateTime}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_DATETIME}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_DATETIME}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDateTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWL" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankDateTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeDateTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeDateTime}}} \par
}}{
Definition at line 147 of file rsslDateTime.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDecIterator Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslDecIterator}
{\xe \v RsslDecIterator}
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator used for RWF decoding. }}\par
{
{\f2 #include <rsslIterators.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEB" }{}}{\fldrslt {\cs37\ul\cf2 _curBufPtr}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEC" }{}}{\fldrslt {\cs37\ul\cf2 _decodingLevel}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADED" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodingLevel}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEE" }{}}{\fldrslt {\cs37\ul\cf2 _levelInfo}}}
 [{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ITER_MAX_LEVELS}}}
]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEF" }{}}{\fldrslt {\cs37\ul\cf2 _majorVersion}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEG" }{}}{\fldrslt {\cs37\ul\cf2 _minorVersion}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEH" }{}}{\fldrslt {\cs37\ul\cf2 _pBuffer}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEI" }{}}{\fldrslt {\cs37\ul\cf2 _pGlobalElemListSetDb}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEJ" }{}}{\fldrslt {\cs37\ul\cf2 _pGlobalFieldListSetDb}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearDecodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion}}} \par
}}{
Definition at line 362 of file rsslIterators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v _curBufPtr\:RsslDecIterator}
{\xe \v RsslDecIterator\:_curBufPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator::_curBufPtr}}}
}}
\par
{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current decoding position in the associated buffer \par
}{
Definition at line 367 of file rsslIterators.h.}\par
}
{\xe \v _decodingLevel\:RsslDecIterator}
{\xe \v RsslDecIterator\:_decodingLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator::_decodingLevel}}}
}}
\par
{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current level in _levelInfo \par
}{
Definition at line 366 of file rsslIterators.h.}\par
}
{\xe \v _levelInfo\:RsslDecIterator}
{\xe \v RsslDecIterator\:_levelInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADED" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecodingLevel}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEE" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator::_levelInfo}}}
[{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ITER_MAX_LEVELS}}}
]}}
\par
{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information needed for decoding across all levels of iterator \par
}{
Definition at line 369 of file rsslIterators.h.}\par
}
{\xe \v _majorVersion\:RsslDecIterator}
{\xe \v RsslDecIterator\:_majorVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEF" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator::_majorVersion}}}
}}
\par
{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RWF Major Version this iterator will encode, should be set with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion()}}} \par
}{
Definition at line 364 of file rsslIterators.h.}\par
}
{\xe \v _minorVersion\:RsslDecIterator}
{\xe \v RsslDecIterator\:_minorVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEG" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator::_minorVersion}}}
}}
\par
{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RWF Minor Version this iterator will encode, should be set with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANR" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorRWFVersion()}}} \par
}{
Definition at line 365 of file rsslIterators.h.}\par
}
{\xe \v _pBuffer\:RsslDecIterator}
{\xe \v RsslDecIterator\:_pBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator::_pBuffer}}}
}}
\par
{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer to decode from, should be set with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetDecodeIteratorBuffer()}}}. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} should indicate the number of bytes available to decode. \par
}{
Definition at line 368 of file rsslIterators.h.}\par
}
{\xe \v _pGlobalElemListSetDb\:RsslDecIterator}
{\xe \v RsslDecIterator\:_pGlobalElemListSetDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator::_pGlobalElemListSetDb}}}
}}
\par
{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to a global set definition for element lists. \par
}{
Definition at line 370 of file rsslIterators.h.}\par
}
{\xe \v _pGlobalFieldListSetDb\:RsslDecIterator}
{\xe \v RsslDecIterator\:_pGlobalFieldListSetDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDecIterator::_pGlobalFieldListSetDb}}}
}}
\par
{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to a global set definition for field lists. \par
}{
Definition at line 371 of file rsslIterators.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDecIterLevel Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslDecIterLevel}
{\xe \v RsslDecIterLevel}
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\b _containerType}{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 * {\b _elemListSetDef}{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b _endBufPtr}{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
 * {\b _fieldListSetDef}{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\b _itemCount}{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b _listType}{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b _nextEntryPtr}{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\b _nextItemPosition}{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\b _nextSetPosition}{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\b _setCount}{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 137 of file rsslIterators.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslDictionaryEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry}
{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A data dictionary entry, containing field information and an enumeration table reference if present. }}\par
{
{\f2 #include <rsslDataDictionary.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEU" }{}}{\fldrslt {\cs37\ul\cf2 acronym}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEV" }{}}{\fldrslt {\cs37\ul\cf2 ddeAcronym}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEW" }{}}{\fldrslt {\cs37\ul\cf2 enumLength}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEX" }{}}{\fldrslt {\cs37\ul\cf2 fid}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEY" }{}}{\fldrslt {\cs37\ul\cf2 fieldType}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEZ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUU" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFA" }{}}{\fldrslt {\cs37\ul\cf2 pEnumTypeTable}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFB" }{}}{\fldrslt {\cs37\ul\cf2 rippleToField}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFC" }{}}{\fldrslt {\cs37\ul\cf2 rwfLength}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFD" }{}}{\fldrslt {\cs37\ul\cf2 rwfType}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMfFieldTypes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}} \par
}}{
Definition at line 70 of file rsslDataDictionary.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v acronym\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:acronym}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEU" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::acronym}}}
}}
\par
{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Acronym \par
}{
Definition at line 72 of file rsslDataDictionary.h.}\par
}
{\xe \v ddeAcronym\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:ddeAcronym}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEV" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::ddeAcronym}}}
}}
\par
{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DDE Acronym \par
}{
Definition at line 73 of file rsslDataDictionary.h.}\par
}
{\xe \v enumLength\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:enumLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEW" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::enumLength}}}
}}
\par
{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Marketfeed enum length \par
}{
Definition at line 78 of file rsslDataDictionary.h.}\par
}
{\xe \v fid\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:fid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEX" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::fid}}}
}}
\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The fieldId the entry corresponds to \par
}{
Definition at line 74 of file rsslDataDictionary.h.}\par
}
{\xe \v fieldType\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:fieldType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEY" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::fieldType}}}
}}
\par
{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Marketfeed Field Type \par
}{
Definition at line 76 of file rsslDataDictionary.h.}\par
}
{\xe \v length\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADEZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::length}}}
}}
\par
{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Marketfeed length \par
}{
Definition at line 77 of file rsslDataDictionary.h.}\par
}
{\xe \v pEnumTypeTable\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:pEnumTypeTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUU" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::pEnumTypeTable}}}
}}
\par
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A reference to the corresponding enumerated types table, if this field uses one. \par
}{
Definition at line 81 of file rsslDataDictionary.h.}\par
}
{\xe \v rippleToField\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:rippleToField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFB" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::rippleToField}}}
}}
\par
{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The field to ripple data to \par
}{
Definition at line 75 of file rsslDataDictionary.h.}\par
}
{\xe \v rwfLength\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:rwfLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFC" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::rwfLength}}}
}}
\par
{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RWF Length \par
}{
Definition at line 80 of file rsslDataDictionary.h.}\par
}
{\xe \v rwfType\:RsslDictionaryEntry}
{\xe \v RsslDictionaryEntry\:rwfType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFD" }{}}{\fldrslt {\cs37\ul\cf2 RsslDictionaryEntry::rwfType}}}
}}
\par
{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RWF type \par
}{
Definition at line 79 of file rsslDataDictionary.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslElementEntry}
{\xe \v RsslElementEntry}
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry::dataType}}} indicates the content type. }}\par
{
{\f2 #include <rsslElementList.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The content type housed in this entry. This can house a primitive or a container type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJO" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded content for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFP" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}} that specifies the name of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_ENTRY}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGL" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementEntryComplete}}} \par
}}{
Definition at line 85 of file rsslElementList.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementList Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslElementList}
{\xe \v RsslElementList}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}} container type allows the user to represent a collection of name - type - value triples, where the value can be a container type or a primitive type. The name and type information is similar to the content that would be cross referenced with a field dictionary when using an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. No dictionary is required to decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementEntry}}} contents. }}\par
{
{\f2 #include <rsslElementList.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGJ" }{}}{\fldrslt {\cs37\ul\cf2 elementListNum}}}
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When present, contains the identifier for an element list template, also known as a record template. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_ELEMENT_LIST_INFO}}}. This information is typically used by caching components to determine the space needed to cache all possible content. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGQ" }{}}{\fldrslt {\cs37\ul\cf2 encEntries}}}
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded payload for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementList}}}. Standard encoded content presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_STANDARD_DATA}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGP" }{}}{\fldrslt {\cs37\ul\cf2 encSetData}}}
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded set defined data content. When encoding, this can be used to provide pre-encoded set data. When decoding, this will contain all encoded set data. Set data presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_SET_DATA}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFN" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence or behavior. The available options are defined by values present in RsslElementListFlags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFT" }{}}{\fldrslt {\cs37\ul\cf2 setId}}}
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When present, contains the set data identifier, referring to the set definition needed to decode any set defined content. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELF_HAS_SET_ID}}}. When not present, value should be assumed to be {\b 0} . }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_LIST}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementListFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJH" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeElementListComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeElementList}}} \par
}}{
Definition at line 39 of file rsslElementList.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementSetDef Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslElementSetDef}
{\xe \v RsslElementSetDef}
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Element List Set Definition. }}\par
{
{\f2 #include <rsslSetData.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFE" }{}}{\fldrslt {\cs37\ul\cf2 count}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry}}}
 * {\b pEntries}{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFG" }{}}{\fldrslt {\cs37\ul\cf2 setId}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGW" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_SET_DEF}}} \par
}}{
Definition at line 197 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v count\:RsslElementSetDef}
{\xe \v RsslElementSetDef\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFE" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef::count}}}
}}
\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of entries in pEntries. \par
}{
Definition at line 199 of file rsslSetData.h.}\par
}
{\xe \v setId\:RsslElementSetDef}
{\xe \v RsslElementSetDef\:setId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFG" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef::setId}}}
}}
\par
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The set id \par
}{
Definition at line 198 of file rsslSetData.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementSetDefDb Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslElementSetDefDb}
{\xe \v RsslElementSetDefDb}
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global Element List Set Definitions Database. }}\par
{
{\f2 #include <rsslSetData.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 ** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFH" }{}}{\fldrslt {\cs37\ul\cf2 definitions}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFI" }{}}{\fldrslt {\cs37\ul\cf2 info_DictionaryId}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFJ" }{}}{\fldrslt {\cs37\ul\cf2 info_version}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\b isInitialized}{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFL" }{}}{\fldrslt {\cs37\ul\cf2 maxSetId}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid RsslElemetnListSetDef \par
}}{
Definition at line 264 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v definitions\:RsslElementSetDefDb}
{\xe \v RsslElementSetDefDb\:definitions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFH" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb::definitions}}}
}}
\par
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer array of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}} definitions. This is allocated with rsslAllocateElementSetDefDb. \par
}{
Definition at line 266 of file rsslSetData.h.}\par
}
{\xe \v info_DictionaryId\:RsslElementSetDefDb}
{\xe \v RsslElementSetDefDb\:info_DictionaryId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFI" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb::info_DictionaryId}}}
}}
\par
{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: DictionaryId. All dictionaries loaded using this object will have this tag matched if found. \par
}{
Definition at line 269 of file rsslSetData.h.}\par
}
{\xe \v info_version\:RsslElementSetDefDb}
{\xe \v RsslElementSetDefDb\:info_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb::info_version}}}
}}
\par
{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Dictionary version \par
}{
Definition at line 268 of file rsslSetData.h.}\par
}
{\xe \v maxSetId\:RsslElementSetDefDb}
{\xe \v RsslElementSetDefDb\:maxSetId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFL" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb::maxSetId}}}
}}
\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum set definition index \par
}{
Definition at line 265 of file rsslSetData.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslElementSetDefEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslElementSetDefEntry}
{\xe \v RsslElementSetDefEntry}
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Element List Set Element Encoding. }}\par
{
{\f2 #include <rsslSetData.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFM" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFN" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearElementSetDefEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_ELEMENT_SET_DEF_ENTRY}}} \par
}}{
Definition at line 169 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v dataType\:RsslElementSetDefEntry}
{\xe \v RsslElementSetDefEntry\:dataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFM" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry::dataType}}}
}}
\par
{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The element data type \par
}{
Definition at line 171 of file rsslSetData.h.}\par
}
{\xe \v name\:RsslElementSetDefEntry}
{\xe \v RsslElementSetDefEntry\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFN" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefEntry::name}}}
}}
\par
{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The element identifier \par
}{
Definition at line 170 of file rsslSetData.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEncIterator Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslEncIterator}
{\xe \v RsslEncIterator}
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator used for RWF encoding. }}\par
{
{\f2 #include <rsslIterators.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFO" }{}}{\fldrslt {\cs37\ul\cf2 _curBufPtr}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFP" }{}}{\fldrslt {\cs37\ul\cf2 _encodingLevel}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFQ" }{}}{\fldrslt {\cs37\ul\cf2 _endBufPtr}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFR" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodingLevel}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFS" }{}}{\fldrslt {\cs37\ul\cf2 _levelInfo}}}
 [{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ITER_MAX_LEVELS}}}
]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFT" }{}}{\fldrslt {\cs37\ul\cf2 _majorVersion}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFU" }{}}{\fldrslt {\cs37\ul\cf2 _minorVersion}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFV" }{}}{\fldrslt {\cs37\ul\cf2 _pBuffer}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFW" }{}}{\fldrslt {\cs37\ul\cf2 _pGlobalElemListSetDb}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFX" }{}}{\fldrslt {\cs37\ul\cf2 _pGlobalFieldListSetDb}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearEncodeIterator}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion}}} \par
}}{
Definition at line 170 of file rsslIterators.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v _curBufPtr\:RsslEncIterator}
{\xe \v RsslEncIterator\:_curBufPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFO" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator::_curBufPtr}}}
}}
\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current encoding position in the associated buffer \par
}{
Definition at line 173 of file rsslIterators.h.}\par
}
{\xe \v _encodingLevel\:RsslEncIterator}
{\xe \v RsslEncIterator\:_encodingLevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPE" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFP" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator::_encodingLevel}}}
}}
\par
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current nesting level \par
}{
Definition at line 177 of file rsslIterators.h.}\par
}
{\xe \v _endBufPtr\:RsslEncIterator}
{\xe \v RsslEncIterator\:_endBufPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator::_endBufPtr}}}
}}
\par
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The end of the buffer for encoding, used to ensure that encoding functions do not go past end of buffer \par
}{
Definition at line 174 of file rsslIterators.h.}\par
}
{\xe \v _levelInfo\:RsslEncIterator}
{\xe \v RsslEncIterator\:_levelInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFR" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodingLevel}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator::_levelInfo}}}
[{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ITER_MAX_LEVELS}}}
]}}
\par
{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information needed for encoding across all levels \par
}{
Definition at line 178 of file rsslIterators.h.}\par
}
{\xe \v _majorVersion\:RsslEncIterator}
{\xe \v RsslEncIterator\:_majorVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator::_majorVersion}}}
}}
\par
{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RWF Major Version this iterator will encode, should be set with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion()}}} \par
}{
Definition at line 175 of file rsslIterators.h.}\par
}
{\xe \v _minorVersion\:RsslEncIterator}
{\xe \v RsslEncIterator\:_minorVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFU" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator::_minorVersion}}}
}}
\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RWF Minor Version this iterator will encode, should be set with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANL" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorRWFVersion()}}} \par
}{
Definition at line 176 of file rsslIterators.h.}\par
}
{\xe \v _pBuffer\:RsslEncIterator}
{\xe \v RsslEncIterator\:_pBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator::_pBuffer}}}
}}
\par
{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer to encode into, should be set with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 rsslSetEncodeIteratorBuffer()}}}. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer::length}}} should indicate the number of bytes available. \par
}{
Definition at line 172 of file rsslIterators.h.}\par
}
{\xe \v _pGlobalElemListSetDb\:RsslEncIterator}
{\xe \v RsslEncIterator\:_pGlobalElemListSetDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOA" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDefDb}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator::_pGlobalElemListSetDb}}}
}}
\par
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to a global set definition for element lists. \par
}{
Definition at line 179 of file rsslIterators.h.}\par
}
{\xe \v _pGlobalFieldListSetDb\:RsslEncIterator}
{\xe \v RsslEncIterator\:_pGlobalFieldListSetDb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADFX" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncIterator::_pGlobalFieldListSetDb}}}
}}
\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to a global set definition for field lists. \par
}{
Definition at line 180 of file rsslIterators.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEncLevel Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslEncLevel}
{\xe \v RsslEncLevel}
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b _containerStartPos}{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\b _containerType}{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b _countWritePtr}{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\b _currentCount}{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 * {\b _elemListSetDef}{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\b _encodingState}{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
 * {\b _fieldListSetDef}{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\b _flags}{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b _initElemStartPos}{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGH" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeSizeMark}}}
 {\b _internalMark}{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGH" }{}}{\fldrslt {\cs37\ul\cf2 RsslEncodeSizeMark}}}
 {\b _internalMark2}{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b _listType}{\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 111 of file rsslIterators.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEncodeSizeMark Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslEncodeSizeMark}
{\xe \v RsslEncodeSizeMark}
{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\b _sizeBytes}{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b _sizePtr}{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 86 of file rsslIterators.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEncryptionOpts Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslEncryptionOpts}
{\xe \v RsslEncryptionOpts}
{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring an encrypted tunneled connection ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}). see rsslConnect see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\b encryptionProtocolFlags}{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 468 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnumType Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslEnumType}
{\xe \v RsslEnumType}
{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A single defined enumerated value. }}\par
{
{\f2 #include <rsslDataDictionary.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGO" }{}}{\fldrslt {\cs37\ul\cf2 display}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGP" }{}}{\fldrslt {\cs37\ul\cf2 meaning}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGQ" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid RsslStateValue, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}{
Definition at line 49 of file rsslDataDictionary.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v display\:RsslEnumType}
{\xe \v RsslEnumType\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType::display}}}
}}
\par
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A brief string representation describing what the type means(For example, this may be an abbreviation of a currency to be displayed to a user) \par
}{
Definition at line 51 of file rsslDataDictionary.h.}\par
}
{\xe \v meaning\:RsslEnumType}
{\xe \v RsslEnumType\:meaning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGP" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType::meaning}}}
}}
\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A more elaborate description of what the value means. This information is typically optional and not displayed. \par
}{
Definition at line 52 of file rsslDataDictionary.h.}\par
}
{\xe \v value\:RsslEnumType}
{\xe \v RsslEnumType\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType::value}}}
}}
\par
{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The actual value representing the type. \par
}{
Definition at line 50 of file rsslDataDictionary.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslEnumTypeTable Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslEnumTypeTable}
{\xe \v RsslEnumTypeTable}
{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A table of enumerated types. A field that uses this table will contain a value corresponding to an enumerated type in this table. }}\par
{
{\f2 #include <rsslDataDictionary.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType}}}
 ** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGR" }{}}{\fldrslt {\cs37\ul\cf2 enumTypes}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGS" }{}}{\fldrslt {\cs37\ul\cf2 fidReferenceCount}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGT" }{}}{\fldrslt {\cs37\ul\cf2 fidReferences}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGU" }{}}{\fldrslt {\cs37\ul\cf2 maxValue}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid RsslStateValue, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} \par
}}{
Definition at line 59 of file rsslDataDictionary.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v enumTypes\:RsslEnumTypeTable}
{\xe \v RsslEnumTypeTable\:enumTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumType}}}
** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable::enumTypes}}}
}}
\par
{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The list of enumerated types. \par
}{
Definition at line 61 of file rsslDataDictionary.h.}\par
}
{\xe \v fidReferenceCount\:RsslEnumTypeTable}
{\xe \v RsslEnumTypeTable\:fidReferenceCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGS" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable::fidReferenceCount}}}
}}
\par
{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of fields in the fidReferences list. \par
}{
Definition at line 62 of file rsslDataDictionary.h.}\par
}
{\xe \v fidReferences\:RsslEnumTypeTable}
{\xe \v RsslEnumTypeTable\:fidReferences}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGT" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable::fidReferences}}}
}}
\par
{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A list of fieldId's representing fields that reference this table \par
}{
Definition at line 63 of file rsslDataDictionary.h.}\par
}
{\xe \v maxValue\:RsslEnumTypeTable}
{\xe \v RsslEnumTypeTable\:maxValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnum}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGU" }{}}{\fldrslt {\cs37\ul\cf2 RsslEnumTypeTable::maxValue}}}
}}
\par
{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The highest value type present. This also indicates the length of the enumTypes list \par
}{
Definition at line 60 of file rsslDataDictionary.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslError Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslError}
{\xe \v RsslError}
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Error message. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMX" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannel}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGV" }{}}{\fldrslt {\cs37\ul\cf2 channel}}}
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL channel the error occurred on. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABN" }{}}{\fldrslt {\cs37\ul\cf2 RsslRet}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGW" }{}}{\fldrslt {\cs37\ul\cf2 rsslErrorId}}}
{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The RSSL Error value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGX" }{}}{\fldrslt {\cs37\ul\cf2 sysError}}}
{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The system error number. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGY" }{}}{\fldrslt {\cs37\ul\cf2 text}}}
 [MAX_RSSL_ERROR_TEXT+1]{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detailed text describing the error. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid MAX_RSSL_ERROR_TEXT \par
}}{
Definition at line 135 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslFieldEntry}
{\xe \v RsslFieldEntry}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. When encoding, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} should be specified. When decoding set data, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} will be populated with information from set definition. When decoding and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::dataType}}} is {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UNKNOWN}}}, user should cross reference {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} with the appropriate field dictionary to determine type and name information. }}\par
{
{\f2 #include <rsslFieldList.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJE" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The content type housed in this entry, which can be a primitive or a container type. When encoding, this is required to be specified. When decoding, value of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_UNKNOWN}}} indicates that application should determine type by cross referencing {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} with appropriate field dictionary. When decoding set defined data, the type from the set definition will be specified here. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded content for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 fieldId}}}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The field identifier that refers to specific name and type information defined by an external field dictionary, such as the RDMFieldDictionary. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Typically, the field dictionary information is specified in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList::dictionaryId}}} or is the default value of {\b 1} . Sending or receiving an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} of {\b 0}  followed by an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}} containing a different dictionary id allows for a temporary change to the dictionary id. This change is valid until either the end of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} content or until another {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}} of {\b 0}  is received.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_ENTRY}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldEntryComplete}}} \par
}}{
Definition at line 94 of file rsslFieldList.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldList Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslFieldList}
{\xe \v RsslFieldList}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}} container type allows the user to represent a collection of field identifier - value pairs, where the value can be a container type or a primitive type. The field identifier ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJF" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry::fieldId}}}) can be cross referenced with a field dictionary to determine the specific type of the content. The dictionary contains specific name and type information (e.g. RDMFieldDictionary). }}\par
{
{\f2 #include <rsslFieldList.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDG" }{}}{\fldrslt {\cs37\ul\cf2 dictionaryId}}}
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When present, contains the identifier associated with the dictionary necessary to decode {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldEntry}}} content. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_FIELD_LIST_INFO}}}. When not present, value should be assumed to be {\b 1} . }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEG" }{}}{\fldrslt {\cs37\ul\cf2 encEntries}}}
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded payload for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldList}}}. Standard encoded content presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_STANDARD_DATA}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEF" }{}}{\fldrslt {\cs37\ul\cf2 encSetData}}}
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded set defined data content. When encoding, this can be used to provide pre-encoded set data. When decoding, this will contain all encoded set data. Set data presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_DATA}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPC" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDH" }{}}{\fldrslt {\cs37\ul\cf2 fieldListNum}}}
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When present, contains the identifier for a field list template, also known as a record template. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_FIELD_LIST_INFO}}}. This information is typically used by caching components to determine the space needed to cache all possible content. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDD" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence or behavior. The available options are defined by values present in RsslFieldListFlags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDL" }{}}{\fldrslt {\cs37\ul\cf2 setId}}}
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When present, contains the set data identifier, referring to the set definition needed to decode any set defined content. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FLF_HAS_SET_ID}}}. When not present, value should be assumed to be {\b 0} . }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_LIST}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDP" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldListFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFieldListComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFieldList}}} \par
}}{
Definition at line 37 of file rsslFieldList.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldSetDef Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslFieldSetDef}
{\xe \v RsslFieldSetDef}
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Field List Set Definition. }}\par
{
{\f2 #include <rsslSetData.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGZ" }{}}{\fldrslt {\cs37\ul\cf2 count}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHA" }{}}{\fldrslt {\cs37\ul\cf2 pEntries}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHB" }{}}{\fldrslt {\cs37\ul\cf2 setId}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEC" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABES" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_SET_DEF}}} \par
}}{
Definition at line 50 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v count\:RsslFieldSetDef}
{\xe \v RsslFieldSetDef\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADGZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef::count}}}
}}
\par
{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the number of entries in pEntries. \par
}{
Definition at line 52 of file rsslSetData.h.}\par
}
{\xe \v pEntries\:RsslFieldSetDef}
{\xe \v RsslFieldSetDef\:pEntries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry}}}
* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHA" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef::pEntries}}}
}}
\par
{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the array of entries this set def will use. \par
}{
Definition at line 53 of file rsslSetData.h.}\par
}
{\xe \v setId\:RsslFieldSetDef}
{\xe \v RsslFieldSetDef\:setId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef::setId}}}
}}
\par
{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The set id \par
}{
Definition at line 51 of file rsslSetData.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldSetDefDb Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslFieldSetDefDb}
{\xe \v RsslFieldSetDefDb}
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global Field List Set Definitions Database. }}\par
{
{\f2 #include <rsslSetData.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
 ** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHC" }{}}{\fldrslt {\cs37\ul\cf2 definitions}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHD" }{}}{\fldrslt {\cs37\ul\cf2 info_DictionaryId}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHE" }{}}{\fldrslt {\cs37\ul\cf2 info_version}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\b isInitialized}{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHG" }{}}{\fldrslt {\cs37\ul\cf2 maxSetId}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}} \par
}}{
Definition at line 115 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v definitions\:RsslFieldSetDefDb}
{\xe \v RsslFieldSetDefDb\:definitions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
** {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb::definitions}}}
}}
\par
{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer array of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}} definitions. This is allocated with rsslAllocateFieldSetDefDb. \par
}{
Definition at line 117 of file rsslSetData.h.}\par
}
{\xe \v info_DictionaryId\:RsslFieldSetDefDb}
{\xe \v RsslFieldSetDefDb\:info_DictionaryId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHD" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb::info_DictionaryId}}}
}}
\par
{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: DictionaryId. All dictionaries loaded using this object will have this tag matched if found. \par
}{
Definition at line 120 of file rsslSetData.h.}\par
}
{\xe \v info_version\:RsslFieldSetDefDb}
{\xe \v RsslFieldSetDefDb\:info_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHE" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb::info_version}}}
}}
\par
{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tag: Dictionary version \par
}{
Definition at line 119 of file rsslSetData.h.}\par
}
{\xe \v maxSetId\:RsslFieldSetDefDb}
{\xe \v RsslFieldSetDefDb\:maxSetId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHG" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefDb::maxSetId}}}
}}
\par
{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum set definition index \par
}{
Definition at line 116 of file rsslSetData.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFieldSetDefEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslFieldSetDefEntry}
{\xe \v RsslFieldSetDefEntry}
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Field List Set Definition Field Entry. }}\par
{
{\f2 #include <rsslSetData.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHH" }{}}{\fldrslt {\cs37\ul\cf2 dataType}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHI" }{}}{\fldrslt {\cs37\ul\cf2 fieldId}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABET" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFieldSetDefEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FIELD_SET_DEF_ENTRY}}} \par
}}{
Definition at line 23 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v dataType\:RsslFieldSetDefEntry}
{\xe \v RsslFieldSetDefEntry\:dataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry::dataType}}}
}}
\par
{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The field data type \par
}{
Definition at line 25 of file rsslSetData.h.}\par
}
{\xe \v fieldId\:RsslFieldSetDefEntry}
{\xe \v RsslFieldSetDefEntry\:fieldId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDefEntry::fieldId}}}
}}
\par
{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The field identifier \par
}{
Definition at line 24 of file rsslSetData.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslFilterEntry}
{\xe \v RsslFilterEntry}
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. If {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::flags}}} contains {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNJ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FTEF_HAS_CONTAINER_TYPE}}}, the contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::containerType}}}; otherwise the contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList::containerType}}}. Any contents should be applied following the rules of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry::action}}} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryActions}}}) }}\par
{
{\f2 #include <rsslFilterList.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNK" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Action to use when applying {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} information. The available actions are defined in RsslFilterEntryActions enumeration. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 RsslContainerType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALX" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The container type associated with the payload of this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMZ" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded content for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNI" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence or behavior. The available options are defined by values present in RsslFilterEntryFlags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABON" }{}}{\fldrslt {\cs37\ul\cf2 id}}}
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Identifier corresponding to one of 32 possible bit-value identifiers. These identifiers are typically defined by a domain model specification and can be used to indicate interest or presence of specific entries through the inclusion of the of the id in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::filter}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNP" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains permission data associated with this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} and its contents. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryFlags::RSSL_FTEF_HAS_PERM_DATA}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_ENTRY}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOK" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOI" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOC" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntryActions}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALW" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeFilterEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALV" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeFilterEntryComplete}}} \par
}}{
Definition at line 106 of file rsslFilterList.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslFilterList Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslFilterList}
{\xe \v RsslFilterList}
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}} is a non-uniform container type of filterId (8-bit identifier) \'96 value pair entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}}, contains an id corresponding to one of 32 possible bit-value identifiers. These identifiers are typically defined by a domain model specification and can be used to indicate interest or presence of specific entries through the inclusion of the of the id in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey::filter}}}. }}\par
{
{\f2 #include <rsslFilterList.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 RsslContainerType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMV" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The most common container type associated with the payload of each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} (e.g. if there are eight entries and six are {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MAP}}} and the remaining two are {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_FIELD_LIST}}}, this would be set to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_DT_MAP}}}) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOQ" }{}}{\fldrslt {\cs37\ul\cf2 encEntries}}}
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded payload for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNG" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence or behavior. The available options are defined by values present in RsslFilterListFlags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOA" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains an approximate total {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALT" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterEntry}}} count for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterList}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_FILTER_LIST}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNM" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearFilterList}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNU" }{}}{\fldrslt {\cs37\ul\cf2 RsslFilterListFlags}}} \par
}}{
Definition at line 40 of file rsslFilterList.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslGenericMsg Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslGenericMsg}
{\xe \v RsslGenericMsg}
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}} allows applications to bidirectionally send messages without any implied interaction semantics (e.g. no Request/Response paradigm). }}\par
{
{\f2 #include <rsslGenericMsg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFT" }{}}{\fldrslt {\cs37\ul\cf2 extendedHeader}}}
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended header attributes, used for per-domain defined attributes that are not used when determining stream uniqueness. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFN" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericFlags::RSSL_GNMF_HAS_EXTENDED_HEADER}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFD" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence and/or stream behavior. The available options are defined by values present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFL" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFG" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common message header members (streamId, domainType, msgKey, etc.). The msgKey is optional. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFX" }{}}{\fldrslt {\cs37\ul\cf2 partNum}}}
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Part Number is a 15-bit value typically used with multi-part generic messages. Value should start with 0 to indicate the initial part, each subsequent part in a multi-part generic message should increment the previous partNum by 1. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFU" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains authorization information for this stream. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericFlags::RSSL_GNMF_HAS_PERM_DATA}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHJ" }{}}{\fldrslt {\cs37\ul\cf2 reqMsgKey}}}
{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optional Key providing unique identifier information for an item stream. If present, this contains the original request message key and is used to uniquely identify a stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 secondarySeqNum}}}
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Secondary Sequence Number often used as an acknowledgment sequence number. Presence is indicated by RsslGenericFlags::RSSL_GNMF_HAS_SECONDARY_SEQ_NUM. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFV" }{}}{\fldrslt {\cs37\ul\cf2 seqNum}}}
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence number intended to help with temporal ordering. Typically, this will be incremented with every message, but may have gaps depending on the sequencing algorithm being used. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericFlags::RSSL_GNMF_HAS_SEQ_NUM}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFL" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_GENERIC_MSG}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFC" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearGenericMsg}}} \par
}}{
Definition at line 24 of file rsslGenericMsg.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInitializeExOpts Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslInitializeExOpts}
{\xe \v RsslInitializeExOpts}
{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure that provides additional initialization information for the RSSL API. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQI" }{}}{\fldrslt {\cs37\ul\cf2 rsslJITOpts}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHK" }{}}{\fldrslt {\cs37\ul\cf2 jitOpts}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQM" }{}}{\fldrslt {\cs37\ul\cf2 RsslLockingTypes}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHL" }{}}{\fldrslt {\cs37\ul\cf2 rsslLocking}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 204 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v jitOpts\:RsslInitializeExOpts}
{\xe \v RsslInitializeExOpts\:jitOpts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQI" }{}}{\fldrslt {\cs37\ul\cf2 rsslJITOpts}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslInitializeExOpts::jitOpts}}}
}}
\par
{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
openSSL JIT options \par
}{
Definition at line 207 of file rsslTransport.h.}\par
}
{\xe \v rsslLocking\:RsslInitializeExOpts}
{\xe \v RsslInitializeExOpts\:rsslLocking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQM" }{}}{\fldrslt {\cs37\ul\cf2 RsslLockingTypes}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInitializeExOpts::rsslLocking}}}
}}
\par
{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock method used for the RSSL API \par
}{
Definition at line 206 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslInProgInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslInProgInfo}
{\xe \v RsslInProgInfo}
{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}} Information for the In Progress Connection State If a backward compatibility reconnection occurs, the file descriptor may change. This is how that information is relayed. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHM" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flags indicating status of connection attempt, populated with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSX" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\b internalConnState}{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslSocket}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHO" }{}}{\fldrslt {\cs37\ul\cf2 newSocket}}}
{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In event of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSY" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgFlags::RSSL_IP_FD_CHANGE}}}, this contains the new file descriptor allowing for addition to any I/O notifier sets. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslSocket}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHP" }{}}{\fldrslt {\cs37\ul\cf2 oldSocket}}}
{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In event of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSY" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgFlags::RSSL_IP_FD_CHANGE}}}, this contains the old file descriptor allowing for removal from any I/O notifier sets. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgInfo}}} \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSX" }{}}{\fldrslt {\cs37\ul\cf2 RsslInProgFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_IN_PROG_INFO}}} \par
}}{
Definition at line 961 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rsslJITOpts Struct Reference\par \pard\plain 
{\tc\tcl2 \v rsslJITOpts}
{\xe \v rsslJITOpts}
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Just-In-Time loaded library configuration options. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHQ" }{}}{\fldrslt {\cs37\ul\cf2 libcryptoName}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHR" }{}}{\fldrslt {\cs37\ul\cf2 libsslName}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 193 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v libcryptoName\:rsslJITOpts}
{\xe \v rsslJITOpts\:libcryptoName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslJITOpts::libcryptoName}}}
}}
\par
{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name of the openSSL libcrypto shared library. The RSSL API will attempt to dynamically load this library for encrypted connections. \par
}{
Definition at line 195 of file rsslTransport.h.}\par
}
{\xe \v libsslName\:rsslJITOpts}
{\xe \v rsslJITOpts\:libsslName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHR" }{}}{\fldrslt {\cs37\ul\cf2 rsslJITOpts::libsslName}}}
}}
\par
{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name of the openSSL libssl shared library. The RSSL API will attempt to dynamically load this library for encrypted connections. \par
}{
Definition at line 194 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslLibraryVersionInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslLibraryVersionInfo}
{\xe \v RsslLibraryVersionInfo}
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Library Version Information structure to be populated with library version info. }}\par
{
{\f2 #include <rsslTypes.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHS" }{}}{\fldrslt {\cs37\ul\cf2 internalVersion}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHT" }{}}{\fldrslt {\cs37\ul\cf2 productDate}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHU" }{}}{\fldrslt {\cs37\ul\cf2 productVersion}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAG" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLibraryVersionInfo}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADAF" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_LIBRARY_VERSION_INFO}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOV" }{}}{\fldrslt {\cs37\ul\cf2 rsslQueryDataLibraryVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIG" }{}}{\fldrslt {\cs37\ul\cf2 rsslQueryMessagesLibraryVersion}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslQueryTransportLibraryVersion}}} \par
}}{
Definition at line 252 of file rsslTypes.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v internalVersion\:RsslLibraryVersionInfo}
{\xe \v RsslLibraryVersionInfo\:internalVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHS" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo::internalVersion}}}
}}
\par
{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal Node information, useful for raising questions or reporting issues \par
}{
Definition at line 255 of file rsslTypes.h.}\par
}
{\xe \v productDate\:RsslLibraryVersionInfo}
{\xe \v RsslLibraryVersionInfo\:productDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHT" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo::productDate}}}
}}
\par
{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Date library was produced for product release \par
}{
Definition at line 256 of file rsslTypes.h.}\par
}
{\xe \v productVersion\:RsslLibraryVersionInfo}
{\xe \v RsslLibraryVersionInfo\:productVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHU" }{}}{\fldrslt {\cs37\ul\cf2 RsslLibraryVersionInfo::productVersion}}}
}}
\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Product Release and Load information \par
}{
Definition at line 254 of file rsslTypes.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslLocalElementSetDefDb Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslLocalElementSetDefDb}
{\xe \v RsslLocalElementSetDefDb}
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local Message Element List Set Definitions Database, must be cleared before use. }}\par
{
{\f2 #include <rsslSetData.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHV" }{}}{\fldrslt {\cs37\ul\cf2 definitions}}}
 [{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELEMENT_SET_MAX_LOCAL_ID}}}
+1]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHW" }{}}{\fldrslt {\cs37\ul\cf2 entries}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical Use: \par If decoding local set definitions from a single thread, RSSL has internal memory that will be \par decoded into. To use this, entries.data and entries.length should be 0. \par If decoding local set definitions from across multiple threads, the user should supply memory \par by populating entries.data. entries.length should be set to the number of bytes available in data. \par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLocalElementSetDefDb}}} \par
}}{
Definition at line 239 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v definitions\:RsslLocalElementSetDefDb}
{\xe \v RsslLocalElementSetDefDb\:definitions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslElementSetDef}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHV" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb::definitions}}}
[{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_ELEMENT_SET_MAX_LOCAL_ID}}}
+1]}}
\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The list of definitions, indexed by ID. \par
}{
Definition at line 240 of file rsslSetData.h.}\par
}
{\xe \v entries\:RsslLocalElementSetDefDb}
{\xe \v RsslLocalElementSetDefDb\:entries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHW" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalElementSetDefDb::entries}}}
}}
\par
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that can point to workspace for encoding or decoding. When encoding a database, the user may optionally populate the SetDef objects with these entries instead of creating separate objects. When decoding, rsslDecodeElementSetDefDb() will decode into any memory populated here or point to internal storage if no memory is provided. \par
}{
Definition at line 241 of file rsslSetData.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslLocalFieldSetDefDb Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslLocalFieldSetDefDb}
{\xe \v RsslLocalFieldSetDefDb}
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local Message Field List Set Definitions Database. Must be cleared before use. }}\par
{
{\f2 #include <rsslSetData.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHX" }{}}{\fldrslt {\cs37\ul\cf2 definitions}}}
 [{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FIELD_SET_MAX_LOCAL_ID}}}
+1]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHY" }{}}{\fldrslt {\cs37\ul\cf2 entries}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical Use: \par If decoding local set definitions from a single thread, RSSL has internal memory that will be \par decoded into. To use this, entries.data and entries.length should be 0. \par If decoding local set definitions from across multiple threads, the user should supply memory \par by populating entries.data. entries.length should be set to the number of bytes available in data. \par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEU" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearLocalFieldSetDefDb}}} \par
}}{
Definition at line 92 of file rsslSetData.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v definitions\:RsslLocalFieldSetDefDb}
{\xe \v RsslLocalFieldSetDefDb\:definitions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldSetDef}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHX" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb::definitions}}}
[{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_FIELD_SET_MAX_LOCAL_ID}}}
+1]}}
\par
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The list of definitions, indexed by ID. \par
}{
Definition at line 93 of file rsslSetData.h.}\par
}
{\xe \v entries\:RsslLocalFieldSetDefDb}
{\xe \v RsslLocalFieldSetDefDb\:entries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHY" }{}}{\fldrslt {\cs37\ul\cf2 RsslLocalFieldSetDefDb::entries}}}
}}
\par
{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A buffer that can point to workspace for encoding or decoding. When encoding a database, the user may optionally populate the SetDef objects with these entries instead of creating separate objects. When decoding, rsslDecodeElementSetDefDb() will decode into any memory populated here or point to internal storage if no memory is provided. \par
}{
Definition at line 94 of file rsslSetData.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMap Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslMap}
{\xe \v RsslMap}
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} is a uniform container type of associated key\'96container pair entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}, contains an entry key and a value. The key is a base primitive type as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}} and the value is a container type as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}}. }}\par
{
{\f2 #include <rsslMap.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 RsslContainerType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The container type associated with the payload of each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJJ" }{}}{\fldrslt {\cs37\ul\cf2 encEntries}}}
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded payload for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIY" }{}}{\fldrslt {\cs37\ul\cf2 encSetDefs}}}
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains encoded set definition information when present. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SET_DEFS}}}. When decoding, this contains encoded set definitions. When encoding, pre-encoded set definition information can be specified here; if not pre-encoded the user can encode set definitions and invoke {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete()}}} when ready to continue encoding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contents. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHW" }{}}{\fldrslt {\cs37\ul\cf2 encSummaryData}}}
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains encoded summary data information when present. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_MPF_HAS_SUMMARY_DATA}}}. When decoding, this contains encoded set definitions. When encoding, pre-encoded summary data information can be specified here; if not pre-encoded the user can encode using the appropriate container type encode functionality and invoke {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete()}}} when ready to continue encoding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}} contents. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence or behavior. The available options are defined by values present in RsslMapFlags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslFieldId}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABID" }{}}{\fldrslt {\cs37\ul\cf2 keyFieldId}}}
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When present, this indicates that the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} key also represents a field in the payload of the entry. Presence is indicated by RsslMapFlags::RSSL_MPF_HAS_KEY_FIELD_ID The key's FID is indicated here. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 RsslPrimitiveType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 keyPrimitiveType}}}
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The primitive type associated with each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} key. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHX" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains an approximate total {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} count for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. This is typically used when splitting entries across a multi-part response (available with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}). Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags::RSSL_MPF_HAS_TOTAL_COUNT_HINT}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIA" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMap}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJW" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJX" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSetDefsComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapSummaryDataComplete}}} \par
}}{
Definition at line 39 of file rsslMap.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMapEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslMapEntry}
{\xe \v RsslMapEntry}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap}}}. The contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::containerType}}} and the key's type is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 RsslMap::keyPrimitiveType}}}. Any contents should be applied following the rules of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry::action}}} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryActions}}}) }}\par
{
{\f2 #include <rsslMap.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHY" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Action to use when applying {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} information. The available actions are defined in RsslMapEntryActions enumeration. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded content for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 encKey}}}
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encoded key content. Can be populated with pre-encoded key content when encoding and contains encoded key content when decoding. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIE" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence or behavior. The available options are defined by values present in RsslMapEntryFlags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIG" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains permission data associated with this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGO" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntry}}} and its contents. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIF" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryFlags::RSSL_MPEF_HAS_PERM_DATA}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MAP_ENTRY}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJC" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJA" }{}}{\fldrslt {\cs37\ul\cf2 RsslMapEntryActions}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeMapEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKE" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKF" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeMapEntryComplete}}} \par
}}{
Definition at line 119 of file rsslMap.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMCastOpts Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslMCastOpts}
{\xe \v RsslMCastOpts}
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring multicast specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_RELIABLE_MCAST}}}). }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHZ" }{}}{\fldrslt {\cs37\ul\cf2 disconnectOnGaps}}}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connection will be removed from network on detection of any gap. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIA" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
set RsslMCastFlags here }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIB" }{}}{\fldrslt {\cs37\ul\cf2 hsmInterface}}}
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Network interface card on which to send host status message(HSM) packets. If NULL, will use default NIC. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIC" }{}}{\fldrslt {\cs37\ul\cf2 hsmInterval}}}
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The time interval over which HSM packets are sent, in seconds. Set this to 0 to disable sending host status messages. This setting may be adjusted by the rrdump tool (see the unicastServiceName option). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADID" }{}}{\fldrslt {\cs37\ul\cf2 hsmMultAddress}}}
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the multicast address over which to send host status message(HSM) packets. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIE" }{}}{\fldrslt {\cs37\ul\cf2 hsmPort}}}
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the multicast port on which to send host status message(HSM) packets. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIF" }{}}{\fldrslt {\cs37\ul\cf2 ndata}}}
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The maximum number of retransmissions that will be attempted for an unacknowledged point-to-point packet. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIG" }{}}{\fldrslt {\cs37\ul\cf2 nmissing}}}
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the maximum number of missed consecutive multicast packets, from a particular node, from which RRCP will attempt to request retransmits. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIH" }{}}{\fldrslt {\cs37\ul\cf2 nrreq}}}
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the maximum number of retransmit requests that will be sent for a missing packet. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADII" }{}}{\fldrslt {\cs37\ul\cf2 packetTTL}}}
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The time-to-live for a multicast datagram on the network. This controls the number of hops content can flow over a network before it will be halted. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIJ" }{}}{\fldrslt {\cs37\ul\cf2 pktPoolLimitHigh}}}
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the high-water mark for RRCP packet pool. If this limit is reached, no further RRCP packets will be allocated until and unless the usage falls below the low-water mark, the pktPoolLimitLow parameter. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIK" }{}}{\fldrslt {\cs37\ul\cf2 pktPoolLimitLow}}}
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the low-water mark for RRCP packet pool. Additional RRCP packets will only be allocated if the usage falls from the high-water mark pktPoolLimitHigh to below this low-water mark value. pktPoolLimitLow should be greater than three times userQLimit. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIL" }{}}{\fldrslt {\cs37\ul\cf2 portRoamRange}}}
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the number of ports to attempt binding on if the unicast base port specified fails to bind. Set this to 0 to explicitly disable port roaming. e.g. If this is set to 2 and if the unicast port fails to bind then a bind will be attempted on the unicast port number + 1, and if that port fails to bind then an attempt to bind on unicast port number + 2 will be performed. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\b reserved}{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIN" }{}}{\fldrslt {\cs37\ul\cf2 tbchold}}}
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the maximum time that RRCP will hold a transmitted broadcast packet in case the packet needs to be retransmitted, in hundreds of milliseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIO" }{}}{\fldrslt {\cs37\ul\cf2 tcpControlPort}}}
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the port to use for the RRCP tcpControlPort, used for troubleshooting RRCP using the rrdump tool. If this is set to NULL then it will be mapped to the same value as the unicastServiceName. If this is set to -1 then the tcpControlPort will be disabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIP" }{}}{\fldrslt {\cs37\ul\cf2 tdata}}}
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the time that RRCP must wait before retransmitting an unacknowledged point-to-point packet, in hundreds of millseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIQ" }{}}{\fldrslt {\cs37\ul\cf2 tpphold}}}
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the maximum time that RRCP will hold a transmitted point-to-point packet in case the packet needs to be retransmitted, in hundreds of milliseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIR" }{}}{\fldrslt {\cs37\ul\cf2 trreq}}}
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the minimum time that RRCP will wait before resending a retransmit request for a missed multicast packet, in hundreds of milliseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIS" }{}}{\fldrslt {\cs37\ul\cf2 twait}}}
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the time that RRCP will ignore additional retransmit requests for a data packet that it has already retransmitted, in hundreds of milliseconds. The time period starts with the receipt of the first request for retransmission. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIT" }{}}{\fldrslt {\cs37\ul\cf2 userQLimit}}}
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the maximum backlog of messages allowed on the channel's inbound message queue. Once this limit is exceeded RRCP will begin to discard messages until the the backlog decreases. pktPoolLimitLow should be greater than three times userQLimit. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} \par
}}{
Definition at line 400 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v disconnectOnGaps\:RsslMCastOpts}
{\xe \v RsslMCastOpts\:disconnectOnGaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADHZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslMCastOpts::disconnectOnGaps}}}
}}
\par
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Enabling this will stop communication with all devices communicating with this connection, even though all may not be affected by detected gaps. If application can recover only impacted data above transport layer, this is ideal. \par
}}{
Definition at line 402 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMCastStats Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslMCastStats}
{\xe \v RsslMCastStats}
{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multicast statistics returned by rsslGetChannelInfo call. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIU" }{}}{\fldrslt {\cs37\ul\cf2 gapsDetected}}}
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of unrecoverable gaps that have been detected on this channel. This value includes gaps detected for both multicast and unicast data. Positive values indicate a possible network problem, more severe as value is larger. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIV" }{}}{\fldrslt {\cs37\ul\cf2 mcastRcvd}}}
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of multicast packets received by this channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIW" }{}}{\fldrslt {\cs37\ul\cf2 mcastSent}}}
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of multicast packets sent by this channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIX" }{}}{\fldrslt {\cs37\ul\cf2 retransPktsRcvd}}}
{\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of retransmitted packets received by this channel, populated only for reliable multicast connection types. This value includes retransmit packets for both multicast and unicast data. Positive values indicate a possible network problem, more severe as value is larger. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIY" }{}}{\fldrslt {\cs37\ul\cf2 retransPktsSent}}}
{\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of retransmitted packets sent by this channel, populated only for reliable multicast connection types. This value includes retransmit packets for both multicast and unicast data. Positive values indicate a possible network problem, more severe as value is larger. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADIZ" }{}}{\fldrslt {\cs37\ul\cf2 retransReqRcvd}}}
{\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of retransmission requests received by this channel, populated only for reliable multicast connection types. This value includes retransmit requests for both multicast and unicast data. Positive values indicate a possible network problem, more severe as value is larger. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJA" }{}}{\fldrslt {\cs37\ul\cf2 retransReqSent}}}
{\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of retransmission requests sent by this channel, populated only for reliable multicast connection types. This value includes retransmit requests for both multicast and unicast data. Positive values indicate a possible network problem, more severe as value is larger. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJB" }{}}{\fldrslt {\cs37\ul\cf2 unicastRcvd}}}
{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of unicast UDP packets received by this channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJC" }{}}{\fldrslt {\cs37\ul\cf2 unicastSent}}}
{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the number of unicast UDP packets sent by this channel. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid rsslGetChannelInfo \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADBU" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelInfo}}} \par
}}{
Definition at line 268 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsg Union Reference\par \pard\plain 
{\tc\tcl2 \v RsslMsg}
{\xe \v RsslMsg}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The OMM Message Union. All message encoding and decoding functions expect the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} type. Any specific message class can be cast to the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, and an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} can be cast to any specific message class. When decoding, the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg.msgBase}}} contains common members that can be used to identify the specific message class or domain type. }}\par
{
{\f2 #include <rsslMsg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJD" }{}}{\fldrslt {\cs37\ul\cf2 ackMsg}}}
{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Acknowledgement Message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJE" }{}}{\fldrslt {\cs37\ul\cf2 closeMsg}}}
{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Close Message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJF" }{}}{\fldrslt {\cs37\ul\cf2 genericMsg}}}
{\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Bidirectional Message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGR" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The message base; members that tend to be common across messages. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJG" }{}}{\fldrslt {\cs37\ul\cf2 postMsg}}}
{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Post Message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJH" }{}}{\fldrslt {\cs37\ul\cf2 refreshMsg}}}
{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Refresh Message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJI" }{}}{\fldrslt {\cs37\ul\cf2 requestMsg}}}
{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Request Message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJJ" }{}}{\fldrslt {\cs37\ul\cf2 statusMsg}}}
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Status Message. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGV" }{}}{\fldrslt {\cs37\ul\cf2 updateMsg}}}
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update Message. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRN" }{}}{\fldrslt {\cs37\ul\cf2 RsslAckMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 RsslCloseMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWR" }{}}{\fldrslt {\cs37\ul\cf2 RsslGenericMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGT" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsg}}} \par
}}{
Definition at line 61 of file rsslMsg.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsgBase Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslMsgBase}
{\xe \v RsslMsgBase}
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}} contains common members that are used across all Rssl Messages. }}\par
{
{\f2 #include <rsslMsgBase.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 RsslContainerType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSM" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container type that is held in the encDataBody. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSK" }{}}{\fldrslt {\cs37\ul\cf2 domainType}}}
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Domain Type of this message, corresponds to a domain model definition Values less than 128 are Thomson Reuters defined domain models, values between 128 \'96 255 are user defined domain models. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMC" }{}}{\fldrslt {\cs37\ul\cf2 encDataBody}}}
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the encoded payload contents of the message. This buffer is populated by the user when encoding a pre-encoded payload. This is also populated during decode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJK" }{}}{\fldrslt {\cs37\ul\cf2 encMsgBuffer}}}
{\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the entire encoded message, including both the encoded header and payload. This buffer is typically only populated during decode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPT" }{}}{\fldrslt {\cs37\ul\cf2 msgClass}}}
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class of this message (Update, Refresh, Status, etc). Populated from RsslMsgClasses enumeration. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSN" }{}}{\fldrslt {\cs37\ul\cf2 msgKey}}}
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Key providing unique identifier information for an item stream. The msgKey, in conjunction with quality of service and domainType, is used to uniquely identify a stream. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} for more details. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSJ" }{}}{\fldrslt {\cs37\ul\cf2 streamId}}}
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unique signed-integer identifier associated with all messages flowing within a stream. Positive values indicate a consumer instantiated stream, negative values indicate a provider instantiated stream often associated with non-interactive providers. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPX" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_MSG_BASE}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPZ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearMsgBase}}} \par
}}{
Definition at line 26 of file rsslMsgBase.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslMsgKey Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslMsgKey}
{\xe \v RsslMsgKey}
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}} contains a variety of attributes used to identify the contents flowing within a particular stream. This information, in conjunction with domainType and quality of service information, can be used to uniquely identify a data stream. }}\par
{
{\f2 #include <rsslMsgKey.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQQ" }{}}{\fldrslt {\cs37\ul\cf2 attribContainerType}}}
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container Type of the msgKey attributes. Must be a container type from the RsslDataTypes enumeration. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMB" }{}}{\fldrslt {\cs37\ul\cf2 encAttrib}}}
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encoded MsgKey attribute information, used for additional item stream identification attributes. Contents are typically specified in the domain model. Type is specified by attribContainerType. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNC" }{}}{\fldrslt {\cs37\ul\cf2 filter}}}
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Filter specification, used to request or indicate which filter entries are present with a filter list payload. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSO" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence. The available options are defined by values present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQD" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKeyFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQP" }{}}{\fldrslt {\cs37\ul\cf2 identifier}}}
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User specified numeric identifier. Usage of this is defined on a per-domain model basis. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQN" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name associated with the contents of the item stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQO" }{}}{\fldrslt {\cs37\ul\cf2 nameType}}}
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Name Type. This indicates the type of the name member, examples are \'91User Name\'92 or \'91RIC\'92 (Reuters Instrument Code). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQM" }{}}{\fldrslt {\cs37\ul\cf2 serviceId}}}
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The serviceId is a two-byte unsigned integer used to identify a specific service. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}} \par
}}{
Definition at line 30 of file rsslMsgKey.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslNodeId Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslNodeId}
{\xe \v RsslNodeId}
{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\b nodeAddr}{\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\b port}{\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 1068 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostMsg Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslPostMsg}
{\xe \v RsslPostMsg}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} is used to contribute content from a consumer into the platform. The post message payload can contain another OMM message, OMM container, or other opaque content. }}\par
{
{\f2 #include <rsslPostMsg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCH" }{}}{\fldrslt {\cs37\ul\cf2 extendedHeader}}}
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended header attributes, used for per-domain defined attributes that are not used when determining stream uniqueness. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBW" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags::RSSL_PSMF_HAS_EXTENDED_HEADER}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBA" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence and/or stream behavior. The available options are defined by values present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBU" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common message header members (streamId, domainType, msgKey, etc.). The msgKey is optional for on-stream posting, as the streamId is used to identify the stream. However, for off-stream posting, the msgKey is typically required. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCK" }{}}{\fldrslt {\cs37\ul\cf2 partNum}}}
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Part number is a 15-bit value typically used with multi-part refresh messages, value should start with 0 to indicate the initial part, each subsequent part in a multi-part refresh message should increment the previous partNum by 1. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCA" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags::RSSL_PSMF_HAS_PART_NUM}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCJ" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains permission authorization information for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags::RSSL_PSMF_HAS_PERM_DATA}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBJ" }{}}{\fldrslt {\cs37\ul\cf2 postId}}}
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a consumer-assigned identifier that is used by upstream devices to distinguish different post messages. Each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}} in a multi-part post must use the same postId value. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags::RSSL_PSMF_HAS_POST_ID}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBK" }{}}{\fldrslt {\cs37\ul\cf2 postUserInfo}}}
{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information used to identify the user that posted this content to an upstream provider. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCL" }{}}{\fldrslt {\cs37\ul\cf2 postUserRights}}}
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conveys the rights or abilities of the user posting this content. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCC" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserRights}}} for the specific values and their meaning. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACCB" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags::RSSL_PSMF_HAS_POST_USER_RIGHTS}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJN" }{}}{\fldrslt {\cs37\ul\cf2 seqNum}}}
{\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence number intended to help with temporal ordering. Typically, this will be incremented with every message, but may have gaps depending on the sequencing algorithm being used. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBY" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags::RSSL_PSMF_HAS_SEQ_NUM}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBU" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_MSG}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearPostMsg}}} \par
}}{
Definition at line 24 of file rsslPostMsg.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslPostUserInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslPostUserInfo}
{\xe \v RsslPostUserInfo}
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}} is used to identify the user that has posted a message. }}\par
{
{\f2 #include <rsslMsgBase.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBN" }{}}{\fldrslt {\cs37\ul\cf2 postUserAddr}}}
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Four byte, network byte order IP Address of user that posted this data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBL" }{}}{\fldrslt {\cs37\ul\cf2 postUserId}}}
{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Identifier of the specific user that posted this data. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_POST_USER_INFO}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDF" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearPostUserInfo}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGM" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} \par
}}{
Definition at line 118 of file rsslMsgBase.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslProxyOpts Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslProxyOpts}
{\xe \v RsslProxyOpts}
{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b proxyHostName}{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b proxyPort}{\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 448 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslQos Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslQos}
{\xe \v RsslQos}
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} can be used to indicate the quality of service associated with content. This includes timeliness (e.g. age) and rate (e.g. period of change) information. }}\par
{
{\f2 #include <rsslQos.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJQ" }{}}{\fldrslt {\cs37\ul\cf2 dynamic}}}
:1{\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If RSSL_TRUE, Rssl Qos is dynamic (used to describe the changeability of the quality of service, typically over the life of a data stream) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 rate}}}
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rate information, indicating data period of change (e.g. tick-by-tick, conflated). Should be populated from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXT" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosRates}}} enum. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYP" }{}}{\fldrslt {\cs37\ul\cf2 rateInfo}}}
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates specific rate information, describing the period of change associated with the data. This information is only applicable when {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::rate}}} is set to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_RATE_TIME_CONFLATED}}} and is specified in milliseconds. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYJ" }{}}{\fldrslt {\cs37\ul\cf2 timeInfo}}}
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates specific timeliness information, describing the age of data. This information is only applicable when {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos::timeliness}}} is set to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_QOS_TIME_DELAYED}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYF" }{}}{\fldrslt {\cs37\ul\cf2 timeliness}}}
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timeliness information, indicating data age (e.g. real-time, delayed). Should be populated from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXS" }{}}{\fldrslt {\cs37\ul\cf2 RsslQosTimeliness}}} enum. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_QOS}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearQos}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAII" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeQos}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeQos}}} \par
}}{
Definition at line 23 of file rsslQos.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReadInArgs Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslReadInArgs}
{\xe \v RsslReadInArgs}
{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslReadEx input arguments. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJR" }{}}{\fldrslt {\cs37\ul\cf2 readInFlags}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 1044 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v readInFlags\:RsslReadInArgs}
{\xe \v RsslReadInArgs\:readInFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJR" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadInArgs::readInFlags}}}
}}
\par
{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
param readInFlags for reading the buffer \par
}{
Definition at line 1045 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReadOutArgs Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslReadOutArgs}
{\xe \v RsslReadOutArgs}
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslReadEx output arguments. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJS" }{}}{\fldrslt {\cs37\ul\cf2 bytesRead}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJT" }{}}{\fldrslt {\cs37\ul\cf2 FTGroupId}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJU" }{}}{\fldrslt {\cs37\ul\cf2 hashId}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJV" }{}}{\fldrslt {\cs37\ul\cf2 instanceId}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslNodeId}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJW" }{}}{\fldrslt {\cs37\ul\cf2 nodeId}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJX" }{}}{\fldrslt {\cs37\ul\cf2 readOutFlags}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJY" }{}}{\fldrslt {\cs37\ul\cf2 seqNum}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJZ" }{}}{\fldrslt {\cs37\ul\cf2 uncompressedBytesRead}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 1076 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bytesRead\:RsslReadOutArgs}
{\xe \v RsslReadOutArgs\:bytesRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJS" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs::bytesRead}}}
}}
\par
{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bytesRead Returns the number of bytes read on this call to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACTN" }{}}{\fldrslt {\cs37\ul\cf2 rsslReadEx()}}}. \par
}{
Definition at line 1078 of file rsslTransport.h.}\par
}
{\xe \v FTGroupId\:RsslReadOutArgs}
{\xe \v RsslReadOutArgs\:FTGroupId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJT" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs::FTGroupId}}}
}}
\par
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The FTGroup of the node that sent this message \par
}{
Definition at line 1083 of file rsslTransport.h.}\par
}
{\xe \v hashId\:RsslReadOutArgs}
{\xe \v RsslReadOutArgs\:hashId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJU" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs::hashId}}}
}}
\par
{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The hash ID for the buffer returned \par
}{
Definition at line 1080 of file rsslTransport.h.}\par
}
{\xe \v instanceId\:RsslReadOutArgs}
{\xe \v RsslReadOutArgs\:instanceId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJV" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs::instanceId}}}
}}
\par
{\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The instance ID of the sender's channel. When combined with the sender's IP address and port, contained in the nodeId, this can be used to identify the specific channel that sent this message. \par
}{
Definition at line 1084 of file rsslTransport.h.}\par
}
{\xe \v nodeId\:RsslReadOutArgs}
{\xe \v RsslReadOutArgs\:nodeId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSM" }{}}{\fldrslt {\cs37\ul\cf2 RsslNodeId}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJW" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs::nodeId}}}
}}
\par
{\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The node ID of the node that sent this message \par
}{
Definition at line 1081 of file rsslTransport.h.}\par
}
{\xe \v readOutFlags\:RsslReadOutArgs}
{\xe \v RsslReadOutArgs\:readOutFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJX" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs::readOutFlags}}}
}}
\par
{\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
readOutFlags for reading the buffer \par
}{
Definition at line 1077 of file rsslTransport.h.}\par
}
{\xe \v seqNum\:RsslReadOutArgs}
{\xe \v RsslReadOutArgs\:seqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs::seqNum}}}
}}
\par
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The sequence number of the buffer \par
}{
Definition at line 1082 of file rsslTransport.h.}\par
}
{\xe \v uncompressedBytesRead\:RsslReadOutArgs}
{\xe \v RsslReadOutArgs\:uncompressedBytesRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslReadOutArgs::uncompressedBytesRead}}}
}}
\par
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uncompressedBytesRead Returns number of bytes read after decompression. \par
}{
Definition at line 1079 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslReal Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslReal}
{\xe \v RsslReal}
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} allows the user to represent fractional or decimal values, with minimal conversion overhead, by using an RsslInt and a format hint. }}\par
{
{\f2 #include <rsslReal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 hint}}}
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Populated with an enumerated value from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRealHints}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 isBlank}}}
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL_TRUE if this real value is blank. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGR" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 value}}}
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
raw signed value with decimal point or denominator removed and accounted for in the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}} }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Typical Use:\par User populates value with signed value and format with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRealHints}}}.\par\par {\b Conversion} \par {\i When converting from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}} to double:} \par If format hint is in Exponent Range ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_14}}} to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT7}}})\par double = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::value}}} * 10{\super {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}} - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT0}}}}  \par\par If format hint is in Fraction Range ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}} - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_256}}}) \par double = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::value}}} / 2{\super {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::hint}}} - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}}} \par\par {\i When converting from double to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal}}}:} \par If format hint is in Exponent Range ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT_14}}} to {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT7}}})\par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::value}}} = floor((doubleValue / 10{\super inHint - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_EXPONENT0}}}}  ) + 0.5)\par \par If format hint is in Fraction Range ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}} - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_256}}}) \par {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 RsslReal::value}}} = doubleValue * 2{\super inHint - {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_RH_FRACTION_1}}}} \par \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARD" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearReal}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REAL}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARI" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_REAL}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRealHints}}} \par
}}{
Definition at line 36 of file rsslReal.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRefreshMsg Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslRefreshMsg}
{\xe \v RsslRefreshMsg}
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} is provided as an initial response or when an upstream source requires a data resynchronization point. }}\par
{
{\f2 #include <rsslRefreshMsg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVE" }{}}{\fldrslt {\cs37\ul\cf2 extendedHeader}}}
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended header attributes, used for per-domain defined attributes that are not used when determining stream uniqueness. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUV" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags::RSSL_RFMF_HAS_EXTENDED_HEADER}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUF" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence and/or stream behavior. The available options are defined by values present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKA" }{}}{\fldrslt {\cs37\ul\cf2 groupId}}}
{\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Group identifier. This contains information about the item group this stream belongs to. This typically contains a sequence of two-byte integers, where system components can append additional values to ensure uniqueness. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUL" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common message header members (streamId, domainType, msgKey, etc.). The msgKey is optional and typically not sent as StreamId is used to determine the specific item stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVI" }{}}{\fldrslt {\cs37\ul\cf2 partNum}}}
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Part number is a 15-bit value typically used with multi-part refresh messages, value should start with 0 to indicate the initial part, each subsequent part in a multi-part refresh message should increment the previous partNum by 1. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags::RSSL_RFMF_HAS_PART_NUM}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVF" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains permission authorization information for all content provided on this stream. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUW" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags::RSSL_RFMF_HAS_PERM_DATA}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVH" }{}}{\fldrslt {\cs37\ul\cf2 postUserInfo}}}
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information used to identify the user that posted this update to an upstream provider. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVA" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags::RSSL_RFMF_HAS_POST_USER_INFO}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUM" }{}}{\fldrslt {\cs37\ul\cf2 qos}}}
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quality of Service information for the current item stream. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}} for more details. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags::RSSL_RFMF_HAS_QOS}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKB" }{}}{\fldrslt {\cs37\ul\cf2 reqMsgKey}}}
{\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optional Key providing unique identifier information for an item stream. If present, this contains the original request message key and is used to uniquely identify a stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVG" }{}}{\fldrslt {\cs37\ul\cf2 seqNum}}}
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence number intended to help with temporal ordering. Typically, this will be incremented with every message, but may have gaps depending on the sequencing algorithm being used. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUX" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags::RSSL_RFMF_HAS_SEQ_NUM}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUN" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains state information for the current item stream. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} for more details. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUT" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REFRESH_MSG}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUE" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRefreshMsg}}} \par
}}{
Definition at line 25 of file rsslRefreshMsg.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRequestMsg Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslRequestMsg}
{\xe \v RsslRequestMsg}
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} is used to provide an initial or subsequent data synchronization point, including quality of service and payload content. When used to respond to an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, a solicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. If pushing out a content change to downstream applications, an unsolicited {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} can be used. When the stream is instantiated because of an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}}, the streamId from the request should be used; when a provider instantiates the stream with an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg}}} (e.g. Non-Interactive provider), a negative streamId should be used. }}\par
{
{\f2 #include <rsslRequestMsg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRI" }{}}{\fldrslt {\cs37\ul\cf2 extendedHeader}}}
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended header attributes, used for per-domain defined attributes that are not used when determining stream uniqueness. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQU" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags::RSSL_RQMF_HAS_EXTENDED_HEADER}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSH" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence and/or stream behavior. The available options are defined by values present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common message header members (streamId, domainType, msgKey, etc.). The msgKey is required on an initial request, but is not necessary on reissue requests (changes to an already open stream's properties). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRJ" }{}}{\fldrslt {\cs37\ul\cf2 priorityClass}}}
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The priority class associated with this stream, used to indicate the stream's general importance to the consumer. A higher class value indicates higher level of importance. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQV" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags::RSSL_RQMF_HAS_PRIORITY}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRK" }{}}{\fldrslt {\cs37\ul\cf2 priorityCount}}}
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the count at the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::priorityClass}}}, indicating importance within the class level. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQV" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags::RSSL_RQMF_HAS_PRIORITY}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRL" }{}}{\fldrslt {\cs37\ul\cf2 qos}}}
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quality of Service information used to request a specific QoS or, when specified along with {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRM" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg::worstQos}}}, a QoS range. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRA" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags::RSSL_RQMF_HAS_QOS}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIH" }{}}{\fldrslt {\cs37\ul\cf2 RsslQos}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRM" }{}}{\fldrslt {\cs37\ul\cf2 worstQos}}}
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quality of Service information used to specify the least desirable QoS within a range. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags::RSSL_RQMF_HAS_WORST_QOS}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid An {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPB" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestMsg}}} can be used to specify batch or view information on a stream or to pause/resume content flow on a stream.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQS" }{}}{\fldrslt {\cs37\ul\cf2 RsslRequestFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_REQUEST_MSG}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRequestMsg}}} \par
}}{
Definition at line 27 of file rsslRequestMsg.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslRmtesCacheBuffer Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslRmtesCacheBuffer}
{\xe \v RsslRmtesCacheBuffer}
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 RsslRmtesCacheBuffer}}} structure. }}\par
{
{\f2 #include <rsslRmtes.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 allocatedLength}}}
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total allocated length of the buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the first byte of char* data contained in the buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCF" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of data used in the buffer. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This buffer contains a data member that points to the first byte of char* data, an RsslUInt32 that describes the total allocated length of the data buffer, and an RsslUInt32 that describes the total used length of the buffer.\parThis buffer is used by the RMTES Decoding interface to store data that may have marketfeed semantics applied to it.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRmtesCacheBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESApplyToCache}}} \par
}}{
Definition at line 30 of file rsslRmtes.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSegmentedNetwork Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslSegmentedNetwork}
{\xe \v RsslSegmentedNetwork}
{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring a segmented network (seperate send and receive networks). }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKC" }{}}{\fldrslt {\cs37\ul\cf2 interfaceName}}}
{\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Network interface card to bind to for send and recv networks. If NULL, will use default NIC. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKD" }{}}{\fldrslt {\cs37\ul\cf2 recvAddress}}}
{\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address to connect to/join for inbound data. Data will only be received on this recvAddress:recvPort combination. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKE" }{}}{\fldrslt {\cs37\ul\cf2 recvServiceName}}}
{\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port number or service name to connect to/join for inbound data. Data will only be received on this recvAddress:recvPort combination. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKF" }{}}{\fldrslt {\cs37\ul\cf2 sendAddress}}}
{\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address to connect to/join for outbound data. Data will only be sent on this sendAddress:sendPort combination. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKG" }{}}{\fldrslt {\cs37\ul\cf2 sendServiceName}}}
{\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port number or service name to connect to/join for outbound data. Data will only be sent on this sendAddress:sendPort combination. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKH" }{}}{\fldrslt {\cs37\ul\cf2 unicastServiceName}}}
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only used with connectionType of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_RELIABLE_MCAST}}}. Port number or service name for any unicast messages such as ACK/NAK traffic or retransmit requests. Also sets the TCP listening port for use with the rrdump tool. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRG" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionInfo}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} \par
}}{
Definition at line 495 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeqMCastOpts Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslSeqMCastOpts}
{\xe \v RsslSeqMCastOpts}
{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring sequenced multicast specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SEQ_MCAST}}}). see rsslConnect see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}}. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKI" }{}}{\fldrslt {\cs37\ul\cf2 instanceId}}}
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used, when combined with the origin IP address and port, to uniquely identify a sequenced multicast channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKJ" }{}}{\fldrslt {\cs37\ul\cf2 maxMsgSize}}}
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum size of messages that the SEQ_MCAST transport will read. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 442 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeries Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslSeries}
{\xe \v RsslSeries}
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} is a uniform container type entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}, is implicitly indexed and houses a container type payload as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}. This is well suited for sending infrequently or non-updating table like content, where each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} represents an additional row in a table. }}\par
{
{\f2 #include <rsslSeries.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 RsslContainerType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The container type associated with the payload of each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKQ" }{}}{\fldrslt {\cs37\ul\cf2 encEntries}}}
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded payload for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKL" }{}}{\fldrslt {\cs37\ul\cf2 encSetDefs}}}
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains encoded set definition information when present. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKE" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SET_DEFS}}}. When decoding, this contains encoded set definitions. When encoding, pre-encoded set definition information can be specified here; if not pre-encoded the user can encode set definitions and invoke {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete()}}} when ready to continue encoding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contents. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJW" }{}}{\fldrslt {\cs37\ul\cf2 encSummaryData}}}
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains encoded summary data information when present. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_SRF_HAS_SUMMARY_DATA}}}. When decoding, this contains encoded set definitions. When encoding, pre-encoded summary data information can be specified here; if not pre-encoded the user can encode using the appropriate container type encode functionality and invoke {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete()}}} when ready to continue encoding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}} contents. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJT" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence or behavior. The available options are defined by values present in RsslSeriesFlags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJX" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains an approximate total {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} count for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJR" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJY" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKC" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALD" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeries}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALA" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALB" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSetDefsComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesSummaryDataComplete}}} \par
}}{
Definition at line 38 of file rsslSeries.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslSeriesEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslSeriesEntry}
{\xe \v RsslSeriesEntry}
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries}}}. The contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeries::containerType}}}. {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}} has an implicit action of Add, so any additional entries should be appended to any existing content. }}\par
{
{\f2 #include <rsslSeries.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded content for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 RsslSeriesEntry}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_SERIES_ENTRY}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearSeriesEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeSeriesEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeSeriesEntryComplete}}} \par
}}{
Definition at line 90 of file rsslSeries.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslServer Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslServer}
{\xe \v RsslServer}
{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Server structure returned via the rsslBind call. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKK" }{}}{\fldrslt {\cs37\ul\cf2 portNumber}}}
{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port number this server is bound to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslSocket}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKL" }{}}{\fldrslt {\cs37\ul\cf2 socketId}}}
{\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Socket ID of this RSSL server. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACOZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslChannelState}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKM" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
{\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
State of this RSSL server. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKN" }{}}{\fldrslt {\cs37\ul\cf2 userSpecPtr}}}
{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A user specified pointer, possibly a closure. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 679 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslServerInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslServerInfo}
{\xe \v RsslServerInfo}
{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Server Info returned by rsslGetServerInfo call. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKO" }{}}{\fldrslt {\cs37\ul\cf2 currentBufferUsage}}}
{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the current buffer usage for the server. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKP" }{}}{\fldrslt {\cs37\ul\cf2 peakBufferUsage}}}
{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the peak buffer usage for the server. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACQV" }{}}{\fldrslt {\cs37\ul\cf2 rsslGetServerInfo}}} \par
}}{
Definition at line 690 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslShmemOpts Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslShmemOpts}
{\xe \v RsslShmemOpts}
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring shared memory specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPN" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_UNIDIR_SHMEM}}}). }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKQ" }{}}{\fldrslt {\cs37\ul\cf2 maxReaderLag}}}
{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum number of messages that the client can have waiting to read. If the client "lags" the server by more than this amount, UPA will disconnect the client. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} \par
}}{
Definition at line 431 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslState Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslState}
{\xe \v RsslState}
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
State structure, contains information used to convey data and stream health information. }}\par
{
{\f2 #include <rsslState.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZS" }{}}{\fldrslt {\cs37\ul\cf2 code}}}
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumerated code providing additional state information, populated from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 dataState}}}
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumerated value providing information about the state of data, populated from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZL" }{}}{\fldrslt {\cs37\ul\cf2 streamState}}}
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An enumerated value providing information about the state of the stream, populated from {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZU" }{}}{\fldrslt {\cs37\ul\cf2 text}}}
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
text describing the state or state code }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZA" }{}}{\fldrslt {\cs37\ul\cf2 RsslDataStates}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStreamStates}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 RsslStateCodes}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATE}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZP" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearState}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeState}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIN" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeState}}} \par
}}{
Definition at line 23 of file rsslState.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslStatusMsg Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslStatusMsg}
{\xe \v RsslStatusMsg}
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}} is used to convey state information, permission change, or group Id change information on a stream. An interactive or non-interactive providing application can also close a stream with a status message. }}\par
{
{\f2 #include <rsslStatusMsg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXM" }{}}{\fldrslt {\cs37\ul\cf2 extendedHeader}}}
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended header attributes, used for per-domain defined attributes that are not used when determining stream uniqueness. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXD" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusFlags::RSSL_STMF_HAS_EXTENDED_HEADER}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWT" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence and/or stream behavior. The available options are defined by values present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKR" }{}}{\fldrslt {\cs37\ul\cf2 groupId}}}
{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Group identifier. This contains information about the item group this stream belongs to. This is typically present on a status message when changing the item group associations. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusFlags::RSSL_STMF_HAS_GROUP_ID}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWV" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common message header members (streamId, domainType, msgKey, etc.), msgKey is optional and typically not sent as streamId can be used to match updates to a specific item stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXN" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains permission authorization information for this stream. This typically replaces the permission information received in a {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABVF" }{}}{\fldrslt {\cs37\ul\cf2 RsslRefreshMsg::permData}}}. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXE" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusFlags::RSSL_STMF_HAS_PERM_DATA}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXO" }{}}{\fldrslt {\cs37\ul\cf2 postUserInfo}}}
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information used to identify the user that posted this update to an upstream provider. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusFlags::RSSL_STMF_HAS_POST_USER_INFO}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOY" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgKey}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKS" }{}}{\fldrslt {\cs37\ul\cf2 reqMsgKey}}}
{\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optional Key providing unique identifier information for an item stream. If present, this contains the original request message key and is used to uniquely identify a stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWW" }{}}{\fldrslt {\cs37\ul\cf2 state}}}
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains stream or data state information. When present in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBH" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusMsg}}}, this usually indicates a change in the state of the item stream. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIL" }{}}{\fldrslt {\cs37\ul\cf2 RsslState}}} for more details. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWU" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusFlags::RSSL_STMF_HAS_STATE}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXB" }{}}{\fldrslt {\cs37\ul\cf2 RsslStatusFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_STATUS_MSG}}} \par
}}{
Definition at line 24 of file rsslStatusMsg.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTcpOpts Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslTcpOpts}
{\xe \v RsslTcpOpts}
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring TCP specific transport options ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPL" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_ENCRYPTED}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPM" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_HTTP}}}). }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 RsslBool}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKT" }{}}{\fldrslt {\cs37\ul\cf2 tcp_nodelay}}}
{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only used with connectionType of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_SOCKET}}}. If RSSL_TRUE, disables Nagle's Algorithm. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} \par
}}{
Definition at line 384 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTime Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslTime}
{\xe \v RsslTime}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} type allows for bandwidth optimized representation of a time value containing hour, minute, second, millisecond, microsecond, and nanosecond information. }}\par
{
{\f2 #include <rsslDateTime.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVL" }{}}{\fldrslt {\cs37\ul\cf2 hour}}}
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The hour of the day (0 - 23 where 255 indicates blank) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKU" }{}}{\fldrslt {\cs37\ul\cf2 microsecond}}}
{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The microsecond of the millisecond (0 - 999 where 2047 indicates blank) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVR" }{}}{\fldrslt {\cs37\ul\cf2 millisecond}}}
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The millisecond of the second (0 - 999 where 65535 indicates blank) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVM" }{}}{\fldrslt {\cs37\ul\cf2 minute}}}
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The minute of the hour (0 - 59 where 255 indicates blank) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKV" }{}}{\fldrslt {\cs37\ul\cf2 nanosecond}}}
{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The nanosecond of the microsecond (0 - 999 where 2047 indicates blank) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVO" }{}}{\fldrslt {\cs37\ul\cf2 second}}}
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The second of the minute (0 - 60 where 255 indicates blank and 60 is to account for leap second) }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVK" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_TIME}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVP" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_BLANK_TIME}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVN" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslBlankTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeTime}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHQ" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeTime}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 RsslTime}}} is always represented as GMT unless otherwise specified in product, data, or domain specific documentation \par
}}{
Definition at line 80 of file rsslDateTime.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslTraceOptions Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslTraceOptions}
{\xe \v RsslTraceOptions}
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RSSL Trace Options structure used to configure XML Tracing. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKW" }{}}{\fldrslt {\cs37\ul\cf2 traceFlags}}}
{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flags for tracing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKX" }{}}{\fldrslt {\cs37\ul\cf2 traceMsgFileName}}}
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates the name of file to be written to. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPD" }{}}{\fldrslt {\cs37\ul\cf2 RsslInt64}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKY" }{}}{\fldrslt {\cs37\ul\cf2 traceMsgMaxFileSize}}}
{\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates maximum size in bytes of file to be written to. Default is 100000000. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPQ" }{}}{\fldrslt {\cs37\ul\cf2 RsslIoctlCodes}}} \par
rsslIoctl \par
}}{
Definition at line 1465 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslU16Buffer Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslU16Buffer}
{\xe \v RsslU16Buffer}
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBX" }{}}{\fldrslt {\cs37\ul\cf2 RsslU16Buffer}}} structure. }}\par
{
{\f2 #include <rsslRmtes.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCK" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the first byte of RsslUInt16* data contained in the buffer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCL" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Length of data used in the buffer. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This buffer contains a data member that points to the first byte of RsslUInt16 data, an RsslUInt32 that describes the length of the buffer.\parThis buffer is used by the RMTES Decoding interface to store UCS2 Unicode strings.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCH" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearRmtesCacheBuffer}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 rsslRMTESToUCS2}}} \par
}}{
Definition at line 69 of file rsslRmtes.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUnifiedNetwork Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslUnifiedNetwork}
{\xe \v RsslUnifiedNetwork}
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Options used for configuring a unified/fully connected mesh network. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADKZ" }{}}{\fldrslt {\cs37\ul\cf2 address}}}
{\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address or hostname to connect to/join for all inbound and outbound data. All data is exchanged on this hostName:serviceName combination. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLA" }{}}{\fldrslt {\cs37\ul\cf2 interfaceName}}}
{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Network interface card to bind to for all inbound and outbound data. If NULL, will use default NIC. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLB" }{}}{\fldrslt {\cs37\ul\cf2 serviceName}}}
{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port number or service name to connect to/join for all inbound and outbound data. All data is exchanged on this hostName:serviceName combination. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLC" }{}}{\fldrslt {\cs37\ul\cf2 unicastServiceName}}}
{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only used with connectionType of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACPO" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_CONN_TYPE_RELIABLE_MCAST}}}. Port number or service name for any unicast messages such as ACK/NAK traffic or retransmit requests. Also sets the TCP listening port for use with the rrdump tool. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANS" }{}}{\fldrslt {\cs37\ul\cf2 rsslConnect}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACRG" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectionInfo}}} \par
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 RsslConnectOptions}}} \par
}}{
Definition at line 482 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslUpdateMsg Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslUpdateMsg}
{\xe \v RsslUpdateMsg}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGN" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateMsg}}} is used by providers(both interactive and non-interactive) to convey changes to data associated with an item stream. }}\par
{
{\f2 #include <rsslUpdateMsg.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZH" }{}}{\fldrslt {\cs37\ul\cf2 conflationCount}}}
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of updates conflated into this update. A value of 0 means that this update is not conflated. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateFlags::RSSL_UPMF_HAS_CONF_INFO}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZI" }{}}{\fldrslt {\cs37\ul\cf2 conflationTime}}}
{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time period(in miliseconds) over which updates were conflated. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYZ" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateFlags::RSSL_UPMF_HAS_CONF_INFO}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZE" }{}}{\fldrslt {\cs37\ul\cf2 extendedHeader}}}
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extended header attributes, used for per-domain defined attributes that are not used when determining stream uniqueness. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdatetFlags::RSSL_UPMF_HAS_EXTENDED_HEADER}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt16}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYK" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence and/or stream behavior. The available options are defined by values present in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYT" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateFlags}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYM" }{}}{\fldrslt {\cs37\ul\cf2 msgBase}}}
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Common message header members (streamId, domainType, msgKey, etc.), msgKey is optional and typically not sent as streamId can be used to match updates to a specific item stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZF" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains permissioning information for this update. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYW" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateFlags::RSSL_UPMF_HAS_PERM_DATA}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBD" }{}}{\fldrslt {\cs37\ul\cf2 RsslPostUserInfo}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZJ" }{}}{\fldrslt {\cs37\ul\cf2 postUserInfo}}}
{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information used to identify the user that posted this update to an upstream provider. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZC" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateFlags::RSSL_UPMF_HAS_POST_USER_INFO}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZG" }{}}{\fldrslt {\cs37\ul\cf2 seqNum}}}
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sequence number intended to help with temporal ordering. Typically, this will be incremented with every message, but may have gaps depending on the sequencing algorithm being used. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYY" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateFlags::RSSL_UPMF_HAS_SEQ_NUM}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYN" }{}}{\fldrslt {\cs37\ul\cf2 updateType}}}
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates domain-specific information about the type of content contained in this update. See {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACVL" }{}}{\fldrslt {\cs37\ul\cf2 rsslRDM.h}}} for domain-specific enumerations for usage with the Thomson Reuters Domain Models. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABG" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsg}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOW" }{}}{\fldrslt {\cs37\ul\cf2 RsslMsgBase}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYT" }{}}{\fldrslt {\cs37\ul\cf2 RsslUpdateFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYS" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_UPDATE_MSG}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearUpdateMsg}}} \par
}}{
Definition at line 24 of file rsslUpdateMsg.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVector Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslVector}
{\xe \v RsslVector}
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} is a uniform container type of associated index\'96container pair entries. Each entry, known as an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}, contains an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt}}} index and a container payload. The payload is a container type as indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}}. }}\par
{
{\f2 #include <rsslVector.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 RsslContainerType}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 containerType}}}
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The container type associated with the payload of each {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMT" }{}}{\fldrslt {\cs37\ul\cf2 encEntries}}}
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded payload for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABME" }{}}{\fldrslt {\cs37\ul\cf2 encSetDefs}}}
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains encoded set definition information when present. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SET_DEFS}}}. When decoding, this contains encoded set definitions. When encoding, pre-encoded set definition information can be specified here; if not pre-encoded the user can encode set definitions and invoke {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete()}}} when ready to continue encoding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contents. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLE" }{}}{\fldrslt {\cs37\ul\cf2 encSummaryData}}}
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains encoded summary data information when present. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLC" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_VTF_HAS_SUMMARY_DATA}}}. When decoding, this contains encoded set definitions. When encoding, pre-encoded summary data information can be specified here; if not pre-encoded the user can encode using the appropriate container type encode functionality and invoke {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete()}}} when ready to continue encoding {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}} contents. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence or behavior. The available options are defined by values present in RsslVectorFlags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLF" }{}}{\fldrslt {\cs37\ul\cf2 totalCountHint}}}
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains an approximate total {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} count for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKZ" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLI" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKO" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVector}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKJ" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKL" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKM" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSetDefsComplete}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKN" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorSummaryDataComplete}}} \par
}}{
Definition at line 43 of file rsslVector.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslVectorEntry Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslVectorEntry}
{\xe \v RsslVectorEntry}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One entry contained in an {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKK" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector}}}. The contents of the entry is specified by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 RsslVector::containerType}}}. Any contents should be applied following the rules of the specified {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry::action}}} ( {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryActions}}}) }}\par
{
{\f2 #include <rsslVector.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLG" }{}}{\fldrslt {\cs37\ul\cf2 action}}}
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Action to use when applying {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} information. The available actions are defined in RsslVectorEntryActions enumeration. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 encData}}}
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw encoded content for this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt8}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLK" }{}}{\fldrslt {\cs37\ul\cf2 flags}}}
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flag values used to indicate optional member presence or behavior. The available options are defined by values present in RsslVectorEntryFlags. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLH" }{}}{\fldrslt {\cs37\ul\cf2 index}}}
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0-base entry index for the {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}}. This can be up to a 30-bit value (RSSL_VTE_MAX_INDEX). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 RsslBuffer}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLM" }{}}{\fldrslt {\cs37\ul\cf2 permData}}}
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains permission data associated with this {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntry}}} and its contents. Presence is indicated by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLL" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryFlags::RSSL_VTEF_HAS_PERM_DATA}}}. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLA" }{}}{\fldrslt {\cs37\ul\cf2 RSSL_INIT_VECTOR_ENTRY}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMO" }{}}{\fldrslt {\cs37\ul\cf2 rsslClearVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMM" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryFlags}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMG" }{}}{\fldrslt {\cs37\ul\cf2 RsslVectorEntryActions}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 rsslDecodeVectorEntry}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryInit}}}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKU" }{}}{\fldrslt {\cs37\ul\cf2 rsslEncodeVectorEntryComplete}}} \par
}}{
Definition at line 121 of file rsslVector.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslWriteInArgs Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslWriteInArgs}
{\xe \v RsslWriteInArgs}
{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslWriteEx input arguments. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUH" }{}}{\fldrslt {\cs37\ul\cf2 RsslWritePriorities}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLD" }{}}{\fldrslt {\cs37\ul\cf2 rsslPriority}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLE" }{}}{\fldrslt {\cs37\ul\cf2 seqNum}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLF" }{}}{\fldrslt {\cs37\ul\cf2 writeInFlags}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 1283 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v rsslPriority\:RsslWriteInArgs}
{\xe \v RsslWriteInArgs\:rsslPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACUH" }{}}{\fldrslt {\cs37\ul\cf2 RsslWritePriorities}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLD" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs::rsslPriority}}}
}}
\par
{\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
rsslPriority Priority to flush the message (high, medium, or low) \par
}{
Definition at line 1285 of file rsslTransport.h.}\par
}
{\xe \v seqNum\:RsslWriteInArgs}
{\xe \v RsslWriteInArgs\:seqNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLE" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs::seqNum}}}
}}
\par
{\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
specifies the sequence number of the message \par
}{
Definition at line 1286 of file rsslTransport.h.}\par
}
{\xe \v writeInFlags\:RsslWriteInArgs}
{\xe \v RsslWriteInArgs\:writeInFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLF" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteInArgs::writeInFlags}}}
}}
\par
{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writeInFlags Flags for writing the buffer (RsslWriteInFlags) \par
}{
Definition at line 1284 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RsslWriteOutArgs Struct Reference\par \pard\plain 
{\tc\tcl2 \v RsslWriteOutArgs}
{\xe \v RsslWriteOutArgs}
{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RsslWriteEx output arguments. }}\par
{
{\f2 #include <rsslTransport.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLG" }{}}{\fldrslt {\cs37\ul\cf2 bytesWritten}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLH" }{}}{\fldrslt {\cs37\ul\cf2 uncompressedBytesWritten}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLI" }{}}{\fldrslt {\cs37\ul\cf2 writeOutFlags}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 1302 of file rsslTransport.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bytesWritten\:RsslWriteOutArgs}
{\xe \v RsslWriteOutArgs\:bytesWritten}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLG" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs::bytesWritten}}}
}}
\par
{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bytesWritten Returns total number of bytes written. \par
}{
Definition at line 1304 of file rsslTransport.h.}\par
}
{\xe \v uncompressedBytesWritten\:RsslWriteOutArgs}
{\xe \v RsslWriteOutArgs\:uncompressedBytesWritten}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLH" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs::uncompressedBytesWritten}}}
}}
\par
{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
uncompressedBytesWritten Returns number of bytes written before compression. \par
}{
Definition at line 1305 of file rsslTransport.h.}\par
}
{\xe \v writeOutFlags\:RsslWriteOutArgs}
{\xe \v RsslWriteOutArgs\:writeOutFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 RsslUInt32}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADLI" }{}}{\fldrslt {\cs37\ul\cf2 RsslWriteOutArgs::writeOutFlags}}}
}}
\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
writeOutFlags Flags for returning flag information about the outcome of a write \par
}{
Definition at line 1303 of file rsslTransport.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RwfBuffer Struct Reference\par \pard\plain 
{\tc\tcl2 \v RwfBuffer}
{\xe \v RwfBuffer}
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 RwfBuffer}}} type. }}\par
{
{\f2 #include <os.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 data}}}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
rtrUInt32 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 length}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used by transport layer and data encoder/decoder \par
}{
Definition at line 205 of file os.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v data\:RwfBuffer}
{\xe \v RwfBuffer\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANZ" }{}}{\fldrslt {\cs37\ul\cf2 RwfBuffer::data}}}
}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The actual data buffer. \par
}{
Definition at line 208 of file os.h.}\par
}
{\xe \v length\:RwfBuffer}
{\xe \v RwfBuffer\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
rtrUInt32 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 RwfBuffer::length}}}
}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The length of the buffer. \par
}{
Definition at line 207 of file os.h.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}