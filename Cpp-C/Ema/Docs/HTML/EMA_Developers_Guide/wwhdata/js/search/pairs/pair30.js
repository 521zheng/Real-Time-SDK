function FileData_Pairs(x)
{
x.t("example","illustrates");
x.t("example","extracting");
x.t("data.getdatatype","case");
x.t("ommtime","static_cast");
x.t("ommtime","data");
x.t("else","switch");
x.t("ommascii","static_cast");
x.t("ommascii","data");
x.t("omm","containers");
x.t("void","appclient");
x.t("void","appclient::decode");
x.t("static_cast","const");
x.t("ommerror","data");
x.t("appclient","::decodefieldlist");
x.t("blank","data");
x.t("decodefieldlist","static_cast");
x.t("::nodataenum","cout");
x.t("working","omm");
x.t("decodemap","static_cast");
x.t("data.getcode","data");
x.t("fieldlistnum","fl.getinfofieldlistnum");
x.t("default","break");
x.t("updatemsg","data");
x.t(".getuint","endl");
x.t("downcast","operation");
x.t("endl","else");
x.t("endl","fl.forth");
x.t("endl","decode");
x.t("endl","break");
x.t("::refreshmsgenum","decoderefreshmsg");
x.t("::errorenum","cout");
x.t("3.3.6","example");
x.t(".getasdouble","endl");
x.t("ommuint","static_cast");
x.t("ommuint","data");
x.t("api","edition");
x.t(".tostring","endl");
x.t("3.3","working");
x.t("operation","void");
x.t("operation","elektron");
x.t("operation","following");
x.t("::enumenum","cout");
x.t("const","ommtime");
x.t("const","ommascii");
x.t("const","ommerror");
x.t("const","updatemsg");
x.t("const","ommuint");
x.t("const","fieldlist");
x.t("const","map");
x.t("const","ommdate");
x.t("const","ommint");
x.t("const","ommreal");
x.t("const","refreshmsg");
x.t("const","data");
x.t("const","ommenum");
x.t("fieldlist","fl.hasinfo");
x.t("fieldlist","information");
x.t("fieldlist","data");
x.t("fieldlist","object");
x.t("illustrates","extract");
x.t("ommreal::getasdouble","static_cast");
x.t("::blankenum","cout");
x.t("::realenum","cout");
x.t("map","data");
x.t("::asciienum","cout");
x.t("down-cast","operation");
x.t("datatype","::nodataenum");
x.t("datatype","::refreshmsgenum");
x.t("datatype","::errorenum");
x.t("datatype","::enumenum");
x.t("datatype","::realenum");
x.t("datatype","::asciienum");
x.t("datatype","::intenum");
x.t("datatype","::fieldlistenum");
x.t("datatype","::mapenum");
x.t("datatype","::dateenum");
x.t("datatype","::timeenum");
x.t("datatype","::uintenum");
x.t("datatype","::updatemsgenum");
x.t("::intenum","cout");
x.t("fl.getentry",".getload");
x.t("decoderefreshmsg","static_cast");
x.t("error","static_cast");
x.t("messages","3.3");
x.t("decoding","error");
x.t("fl.getinfodictionaryid","endl");
x.t("chapter","omm");
x.t(".getint","endl");
x.t("switch","data.getdatatype");
x.t("fl.forth","cout");
x.t("message","api");
x.t("::fieldlistenum","decodefieldlist");
x.t("cout","ommtime");
x.t("cout","ommascii");
x.t("cout","blank");
x.t("cout","fieldlistnum");
x.t("cout","ommuint");
x.t("cout","ommreal::getasdouble");
x.t("cout","decoding");
x.t("cout","ommdate");
x.t("cout","ommint");
x.t("cout","nodata");
x.t("cout","ommenum");
x.t("cout","load");
x.t("::mapenum","decodemap");
x.t("ommdate","static_cast");
x.t("ommdate","data");
x.t("ommint","static_cast");
x.t("ommint","data");
x.t("ommreal","data");
x.t(".getload","void");
x.t("refreshmsg","data");
x.t("elektron","message");
x.t("fl.hasinfo","cout");
x.t("decode","fl.getentry");
x.t("extracting","fieldlist");
x.t("information","fieldlist");
x.t("information","using");
x.t("data","data.getcode");
x.t("data",".getuint");
x.t("data","endl");
x.t("data",".getasdouble");
x.t("data",".tostring");
x.t("data","::blankenum");
x.t("data",".getint");
x.t("data","data");
x.t("data",".geterrorcodeasstring");
x.t("data",".getenum");
x.t("data","break");
x.t(".geterrorcodeasstring","endl");
x.t("::decodefieldlist","const");
x.t("appclient::decode","const");
x.t("case","datatype");
x.t("containers","3.3.6");
x.t("containers","messages");
x.t("dictionaryid","fl.getinfodictionaryid");
x.t("nodata","endl");
x.t("::dateenum","cout");
x.t(".getenum","endl");
x.t("edition","3.3.6");
x.t("fl.getinfofieldlistnum","dictionaryid");
x.t("following","example");
x.t("break","default");
x.t("break","chapter");
x.t("break","case");
x.t("using","downcast");
x.t("using","down-cast");
x.t("ommenum","static_cast");
x.t("ommenum","data");
x.t("load","endl");
x.t("::timeenum","cout");
x.t("::uintenum","cout");
x.t("decodeupdatemsg","static_cast");
x.t("extract","information");
x.t("object","using");
x.t("::updatemsgenum","decodeupdatemsg");
}
