function FileData_Pairs(x)
{
x.t("supports","following");
x.t("passed","ommconsumer");
x.t("passed-in","parameter");
x.t("debugging","6.3");
x.t("parameter","lies");
x.t("try","catch");
x.t("ommexception","provides");
x.t("ommexception","types");
x.t("ommexception","class");
x.t("errors","ema");
x.t("interface","usage");
x.t("lies","outside");
x.t("open","log");
x.t("type","specified");
x.t("detect","fix");
x.t("unrecoverable","configuration");
x.t("ommconsumer","ommprovider");
x.t("thrown","passed-in");
x.t("thrown","domain");
x.t("thrown","invalid");
x.t("thrown","ema");
x.t("file","writing");
x.t("recommends","try");
x.t("during","application");
x.t("api","edition");
x.t("inherit","parent");
x.t("omminaccessiblelogfileexception","thrown");
x.t("detects","unrecoverable");
x.t("detects","error");
x.t("detects","invalid");
x.t("detects","out-of-memory");
x.t("detects","system");
x.t("writing","omminvalidconfigurationexception");
x.t("handle","passed");
x.t("specified","message");
x.t("functionality","methods");
x.t("common","across");
x.t("outside","valid");
x.t("range","ommsystemexception");
x.t("provides","functionality");
x.t("methods","common");
x.t("methods","omminvalidusageexception");
x.t("unrecognized","item");
x.t("fix","ema");
x.t("omminvalidhandleexception","thrown");
x.t("error","omminvalidhandleexception");
x.t("error","condition");
x.t("reuters","recommends");
x.t("blocks","during");
x.t("supported","chapter");
x.t("6.3","ommexception");
x.t("throw","exception");
x.t("domain","type");
x.t("parent","class");
x.t("design","errors");
x.t("cannot","open");
x.t("chapter","troubleshooting");
x.t("types","omminaccessiblelogfileexception");
x.t("types","tip");
x.t("invalid","interface");
x.t("invalid","unrecognized");
x.t("thomson","reuters");
x.t("message","api");
x.t("message","supported");
x.t("quickly","detect");
x.t("configuration","error");
x.t("troubleshooting","debugging");
x.t("usage","application");
x.t("usage","ommmemoryexhaustionexception");
x.t("ommsystemexception","thrown");
x.t("condition","ommoutofrangeexception");
x.t("condition","ema");
x.t("exception","types");
x.t("exception","ommunsupporteddomaintypeexception");
x.t("exception","exceptions");
x.t("elektron","message");
x.t("out-of-memory","condition");
x.t("valid","range");
x.t("tip","thomson");
x.t("omminvalidconfigurationexception","thrown");
x.t("application","design");
x.t("application","development");
x.t("ommoutofrangeexception","thrown");
x.t("edition","6.3");
x.t("omminvalidusageexception","thrown");
x.t("following","exception");
x.t("ommmemoryexhaustionexception","thrown");
x.t("system","exception");
x.t("class","ommexception");
x.t("class","methods");
x.t("class","elektron");
x.t("class","ema");
x.t("across","ommexception");
x.t("catch","blocks");
x.t("development","quickly");
x.t("ommunsupporteddomaintypeexception","thrown");
x.t("ommprovider","class");
x.t("exceptions","ema");
x.t("log","file");
x.t("ema","supports");
x.t("ema","inherit");
x.t("ema","detects");
x.t("ema","throw");
x.t("ema","cannot");
x.t("ema","usage");
x.t("item","handle");
}
