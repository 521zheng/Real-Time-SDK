function FileData_Pairs(x)
{
x.t("method","learn");
x.t("signifies","lack");
x.t("detected","details");
x.t("every","supported");
x.t("refer","section");
x.t("omm","data");
x.t("omm","containers");
x.t("summary","container");
x.t("container","message");
x.t("type","given");
x.t("type","including");
x.t("payload","attribute");
x.t("details","refer");
x.t("list","enumeration");
x.t("indicates","error");
x.t("api","edition");
x.t("3.2","classes");
x.t("primitives","class");
x.t("datatype::fieldlistenum","datatype::refreshmsgenum");
x.t("enumeration","value");
x.t("enumeration","values");
x.t("provides","enumeration");
x.t("datatype","enumeration");
x.t("datatype","class");
x.t("attribute","chapter");
x.t("supported","omm");
x.t("error","condition");
x.t("messages","3.2");
x.t("messages","primitives");
x.t("messages","datatype::errorenum");
x.t("chapter","omm");
x.t("datatype::nodataenum","signifies");
x.t("section","3.2.5");
x.t("identifies","itself");
x.t("message","payload");
x.t("message","api");
x.t("given","object");
x.t("e.g","datatype::fieldlistenum");
x.t("datatype::refreshmsgenum","data::getdatatype");
x.t("value","e.g");
x.t("condition","detected");
x.t("lack","data");
x.t("elektron","message");
x.t("represent","every");
x.t("extracting","information");
x.t("3.2.1","datatype");
x.t("data","summary");
x.t("data","type");
x.t("data","identifies");
x.t("information","omm");
x.t("appropriate","datatype");
x.t("received","reading");
x.t("values","represent");
x.t("values","received");
x.t("values","contains");
x.t("classes","elektron");
x.t("classes","3.2.1");
x.t("containers","messages");
x.t("two","special");
x.t("3.2.5","datatype::nodataenum");
x.t("itself","appropriate");
x.t("edition","3.2");
x.t("special","enumeration");
x.t("class","list");
x.t("class","provides");
x.t("class","datatype");
x.t("class","representing");
x.t("datatype::errorenum","indicates");
x.t("including","omm");
x.t("representing","omm");
x.t("data::getdatatype","method");
x.t("learn","data");
x.t("reading","extracting");
x.t("object","datatype");
x.t("contains","two");
}
