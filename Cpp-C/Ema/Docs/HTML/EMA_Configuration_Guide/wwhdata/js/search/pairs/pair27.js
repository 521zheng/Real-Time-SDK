function FileData_Pairs(x)
{
x.t("supports","preferred");
x.t("parameter","name");
x.t("parameter","value");
x.t("notes","compressionthreshold");
x.t("available","values");
x.t("(0)","zlib");
x.t("compression","compression");
x.t("compression","type");
x.t("compression","types");
x.t("compression","efficiency");
x.t("compression","negotiated");
x.t("preferred","compression");
x.t("preferred","type");
x.t("table","parameters");
x.t("refer","section");
x.t("sending","data");
x.t("remote","host");
x.t("remote","server");
x.t("type","compression");
x.t("type","regardless");
x.t("type","default");
x.t("type","either");
x.t("type","server");
x.t("vary","depending");
x.t("(2)","note");
x.t("3.3.2","following");
x.t("regardless","client");
x.t("connection","messages");
x.t("channel","group");
x.t("channel","types");
x.t("channel","whose");
x.t("listed","section");
x.t("default","notes");
x.t("3.3.4","parameters");
x.t("details","refer");
x.t("size","threshold");
x.t("size","compressiontype");
x.t("tcpnodelay","uint64");
x.t("http","connection");
x.t("group","3.3.4");
x.t("api","edition");
x.t("emastring","14002");
x.t("emastring","localhost");
x.t("emastring","specifies");
x.t("url","http");
x.t("3.3","channel");
x.t("name","type");
x.t("name","address");
x.t("name","pass");
x.t("name","server");
x.t("settings","host");
x.t("connects","parameter");
x.t("connects","tcpnodelay");
x.t("bytes","allowed");
x.t("enumeration","none");
x.t("enumeration","values");
x.t("14002","specifies");
x.t("parameters","channel");
x.t("parameters","listed");
x.t("parameters","configure");
x.t("none","(0)");
x.t("none","specifies");
x.t("address","objectname");
x.t("sets","message");
x.t("addition","universal");
x.t("localhost","specifies");
x.t("configured","force");
x.t("behaviors","compression");
x.t("delay","chapter");
x.t("allowed","value");
x.t("messages","compressed");
x.t("messages","port");
x.t("underlying","url");
x.t("max","above");
x.t("lz4","(2)");
x.t("different","compression");
x.t("different","behaviors");
x.t("specifies","whether");
x.t("specifies","host");
x.t("specifies","port");
x.t("specifies","ema\u2019s");
x.t("specifies","object");
x.t("particular","compression");
x.t("whether","nagle\u2019s");
x.t("chapter","configuration");
x.t("objectname","emastring");
x.t("types","different");
x.t("types","rssl_http");
x.t("rssl_encrypted","parameter");
x.t("rssl_encrypted","table");
x.t("rssl_encrypted","addition");
x.t("rssl_encrypted","elektron");
x.t("section","3.3.2");
x.t("section","4.4");
x.t("30-uint32","max");
x.t("compressed","different");
x.t("compressed","thus");
x.t("programmatic","configuration");
x.t("(1)","lz4");
x.t("client","settings");
x.t("client","server");
x.t("thus","individual");
x.t("compress","data");
x.t("level","enumeration");
x.t("groups","3.3");
x.t("message","size");
x.t("message","api");
x.t("threshold","bytes");
x.t("whose","type");
x.t("compressiontype","enumeration");
x.t("configuration","details");
x.t("configuration","groups");
x.t("value","remote");
x.t("value","30-uint32");
x.t("efficiency","vary");
x.t("zlib","(1)");
x.t("depending","message");
x.t("4.4","available");
x.t("send","data");
x.t("rssl_http","rssl_encrypted");
x.t("force","particular");
x.t("elektron","message");
x.t("along","underlying");
x.t("configure","channel");
x.t("data","available");
x.t("data","level");
x.t("data","using");
x.t("data","without");
x.t("host","emastring");
x.t("host","name");
x.t("compressionthreshold","uint64");
x.t("nagle\u2019s","algorithm");
x.t("values","none");
x.t("values","send");
x.t("values","ema\u2019s");
x.t("universal","parameters");
x.t("above","messages");
x.t("port","remote");
x.t("port","emastring");
x.t("note","server");
x.t("ema\u2019s","preferred");
x.t("ema\u2019s","programmatic");
x.t("algorithm","sending");
x.t("algorithm","send");
x.t("edition","3.3.4");
x.t("negotiated","client");
x.t("following","parameters");
x.t("either","rssl_http");
x.t("individual","messages");
x.t("using","nagle\u2019s");
x.t("pass","along");
x.t("without","delay");
x.t("uint64","sets");
x.t("uint64","specifies");
x.t("server","supports");
x.t("server","configured");
x.t("server","compress");
x.t("server","server");
x.t("server","ema");
x.t("ema","connects");
x.t("object","name");
}
