function FileData_Pairs(x)
{
x.t("example","programmatic");
x.t("example","consumer");
x.t("configmap","map");
x.t("dictionarytype",".addascii");
x.t("channelset","map");
x.t("channelset","different");
x.t("channelset","configuration");
x.t("channelset","elektron");
x.t("channelset","channel_1");
x.t("channelset","following");
x.t("parameter","values");
x.t("xmltraceread","msgkeyinupdates");
x.t("xmltracemaxfilesize","xmltracetofile");
x.t("dictionarylist","innermap");
x.t("xmltracetofile","xmltracetostdout");
x.t("channeltype",".addascii");
x.t("uses","parameter");
x.t("uses","channel");
x.t("last","channel");
x.t("121.1.1.100",".addascii");
x.t("xmltracetostdout","xmltracetomultiplefiles");
x.t("elementlist.addmap","dictionarylist");
x.t("elementlist.addmap","channellist");
x.t("elementlist.addmap","loggerlist");
x.t("elementlist.addmap","consumerlist");
x.t("enumtypedeffilename","./enumtype.def");
x.t("reconnectmindelay","reconnectmaxdelay");
x.t("logger_1",".addascii");
x.t("logger_1","mapentry::addenum");
x.t("channel","channelset");
x.t("channel","channel");
x.t("channel","group");
x.t("channel","parameters");
x.t("channel","even");
x.t("channellist","innermap");
x.t("interfacename","localhost");
x.t("3.3.7","example");
x.t("group","3.3.7");
x.t("api","edition");
x.t("xmltracetomultiplefiles","xmltracewrite");
x.t("innermap","elementlist.complete");
x.t("innermap","elementlist");
x.t("dictionary_1","mapentry::addenum");
x.t("dictionary_1",".complete");
x.t("consumer_1","innermap.addkeyascii");
x.t("consumer_1","mapentry::addenum");
x.t("3.3","channel");
x.t("connects","different");
x.t("defaultconsumer","consumer_1");
x.t("reconnectmaxdelay","xmltracefilename");
x.t("dictionary","dictionary_1");
x.t("14002",".complete");
x.t("parameters","reconnectattemptlimit");
x.t("parameters","ema");
x.t("consumergroup","mapentry::addenum");
x.t("map","configmap");
x.t("map","innermap");
x.t("innermap.addkeyascii","logger_1");
x.t("innermap.addkeyascii","dictionary_1");
x.t("innermap.addkeyascii","consumer_1");
x.t("innermap.addkeyascii","channel_1");
x.t("innermap.addkeyascii","channel_2");
x.t(".addenum","dictionarytype");
x.t(".addenum","channeltype");
x.t(".addenum","loggertype");
x.t(".addenum","loggerseverity");
x.t("localhost",".addascii");
x.t("14008",".complete");
x.t("dictionarygroup","mapentry::addenum");
x.t("logger","logger_1");
x.t("msgkeyinupdates","last");
x.t("elementlist.addascii","defaultconsumer");
x.t("channelgroup","mapentry::addenum");
x.t("different","channel");
x.t("different","values");
x.t("chapter","configuration");
x.t("filename","logfile");
x.t("programmatic","channelset");
x.t("programmatic","configuration");
x.t("consumer","uses");
x.t("consumer","successfully");
x.t("groups","3.3");
x.t("message","api");
x.t("successfully","connects");
x.t("configmap.addkeyascii","consumergroup");
x.t("configmap.addkeyascii","dictionarygroup");
x.t("configmap.addkeyascii","channelgroup");
x.t("configmap.addkeyascii","loggergroup");
x.t("loggertype",".addascii");
x.t("rdmfielddictionaryfilename","./rdmfielddictionary");
x.t("reconnectattemptlimit","reconnectmindelay");
x.t("innermap.clear","configmap.addkeyascii");
x.t("configuration","example");
x.t("configuration","channelset");
x.t("configuration","groups");
x.t(".addascii","channelset");
x.t(".addascii","enumtypedeffilename");
x.t(".addascii","interfacename");
x.t(".addascii","dictionary");
x.t(".addascii","logger");
x.t(".addascii","filename");
x.t(".addascii","rdmfielddictionaryfilename");
x.t(".addascii","host");
x.t(".addascii","port");
x.t("./enumtype.def",".complete");
x.t("logfile",".addenum");
x.t("loggerseverity",".complete");
x.t("elektron","message");
x.t("loggerlist","innermap");
x.t("channel_1","channel_2");
x.t("channel_1","mapentry::addenum");
x.t("loggergroup","mapentry::addenum");
x.t("channel_2",".addascii");
x.t("channel_2","mapentry::addenum");
x.t("host","121.1.1.100");
x.t("host","localhost");
x.t("./rdmfielddictionary",".addascii");
x.t("values","last");
x.t("values","parameters");
x.t("elementlist.complete","configmap.addkeyascii");
x.t("elementlist.complete","innermap.clear");
x.t("port","14002");
x.t("port","14008");
x.t("mapentry::addenum","elementlist");
x.t("elementlist.clear","innermap.addkeyascii");
x.t("elementlist.clear","configmap.complete");
x.t("edition","3.3.7");
x.t("consumerlist","innermap");
x.t("following","example");
x.t("xmltracefilename","xmltracemaxfilesize");
x.t("even","consumer");
x.t("elementlist",".addenum");
x.t("elementlist","elementlist.addascii");
x.t("elementlist",".addascii");
x.t("elementlist","elementlist.clear");
x.t("elementlist","elementlist");
x.t("xmltracewrite","xmltraceread");
x.t("ema","uses");
x.t(".complete","elementlist.addmap");
x.t(".complete","innermap.addkeyascii");
x.t(".complete",".complete");
x.t("configmap.complete","chapter");
}
