function FileData_Pairs(x)
{
x.t("example","omm");
x.t("registers","login");
x.t("library","providing");
x.t("library","readme.txt");
x.t("library","application");
x.t("receives","processes");
x.t("ommproviderclient","class");
x.t("publishes","updates");
x.t("publishes","marketprice");
x.t("create","publish");
x.t("description","====================");
x.t("refer","ema");
x.t("omm","niprovider");
x.t("omm","marketprice");
x.t("omm","streaming");
x.t("source","directory");
x.t("summary","=======");
x.t("niprovider","application");
x.t("user","instantiates");
x.t("creates","streaming");
x.t("uses","source");
x.t("appclient","overrides");
x.t("appclient","object");
x.t("register","process");
x.t("modified","fit");
x.t("basic","usage");
x.t("providing","omm");
x.t("connection","logs");
x.t("down","source");
x.t("readme.txt","file");
x.t("high-level","steps");
x.t("needed","details");
x.t("advanced","distribution");
x.t("updates","publishes");
x.t("updates","per");
x.t("details","standard");
x.t("details","may");
x.t("publish","omm");
x.t("file","specified");
x.t("file","detailed");
x.t("file","ema");
x.t("info","registers");
x.t("api","thread");
x.t("api","edition");
x.t("api","seconds");
x.t("guide","ema");
x.t("desired","methods");
x.t("specified","channel\u2019s");
x.t("specified","sourcedirectory");
x.t("processed","api");
x.t("demonstrates","basic");
x.t("channel\u2019s","host");
x.t("adh","sends");
x.t("fit","local");
x.t("provider","examples");
x.t("illustrates","create");
x.t("methods","instantiates");
x.t("modifies","ommniproviderconfig");
x.t("ommniproviderconfig","object");
x.t("sends","down");
x.t("standard","configuration");
x.t("sets","username");
x.t("local","environment");
x.t("300","series");
x.t("====================","340__login__streaming");
x.t("stream","creates");
x.t("second","processes");
x.t("thread","control");
x.t("reuters","advanced");
x.t("configured","adh");
x.t("configured","emaconfig.xml");
x.t("refresh","updates");
x.t("refresh","message");
x.t("messages","processed");
x.t("messages","received");
x.t("messages","application");
x.t("messages","instantiates");
x.t("emaconfig.xml","file");
x.t("written","ema");
x.t("initializes","connection");
x.t("control","exits");
x.t("implements","ommproviderclient");
x.t("implements","following");
x.t("processes","login");
x.t("reads","emaconfig.xml");
x.t("may","modified");
x.t("detailed","description");
x.t("directory","configured");
x.t("directory","refresh");
x.t("exits","note");
x.t("steps","implements");
x.t("thomson","reuters");
x.t("message","api");
x.t("message","test_ni_pub");
x.t("login","stream");
x.t("login","messages");
x.t("logs","configured");
x.t("environment","details");
x.t("marketprice","ibm.n");
x.t("marketprice","data");
x.t("username","user");
x.t("ibm.n","item");
x.t("configuration","refer");
x.t("configuration","guide");
x.t("usage","ema");
x.t("process","received");
x.t("elektron","message");
x.t("distribution","hub");
x.t("340__login__streaming","example");
x.t("340__login__streaming","summary");
x.t("340__login__streaming","illustrates");
x.t("340__login__streaming","implements");
x.t("340__login__streaming","elektron");
x.t("data","thomson");
x.t("host","port");
x.t("hub","340__login__streaming");
x.t("received","api");
x.t("received","messages");
x.t("received","login");
x.t("examples","300");
x.t("examples","340__login__streaming");
x.t("application","uses");
x.t("application","demonstrates");
x.t("application","written");
x.t("port","sets");
x.t("note","needed");
x.t("edition","340__login__streaming");
x.t("test_ni_pub","specified");
x.t("test_ni_pub","service");
x.t("following","high-level");
x.t("service","publishes");
x.t("service","info");
x.t("streaming","item");
x.t("class","appclient");
x.t("overrides","desired");
x.t("instantiates","appclient");
x.t("instantiates","modifies");
x.t("instantiates","ommprovider");
x.t("per","second");
x.t("series","examples");
x.t("ommprovider","object");
x.t("sourcedirectory","test_ni_pub");
x.t("non-interactive","provider");
x.t("=======","340__login__streaming");
x.t("ema","library");
x.t("ema","configuration");
x.t("ema","non-interactive");
x.t("item","register");
x.t("item","refresh");
x.t("item","test_ni_pub");
x.t("object","receives");
x.t("object","initializes");
x.t("object","reads");
x.t("seconds","received");
}
