function FileData_Pairs(x)
{
x.t("uniquely","identified");
x.t("example","description");
x.t("example","provided");
x.t("example","list");
x.t("example","consumer");
x.t("real-time","tickbytick");
x.t("states","element");
x.t("ommstate.none","status");
x.t("ommstate.none","specifies");
x.t("available","qos");
x.t("available","again");
x.t("available","qualities");
x.t("available","respond");
x.t("available","data");
x.t("available","note");
x.t("provide","ansi");
x.t("provide","includes");
x.t("provide","desired");
x.t("provide","uint");
x.t("provide","consumer");
x.t("provide","data");
x.t("(0)","e.g");
x.t("integers","i.e");
x.t("integers","written");
x.t("else","requirements");
x.t("filterlist","applied");
x.t("filterlist","filterentry");
x.t("filterlist","used");
x.t("fitlter","bit-value");
x.t("servicing","updated");
x.t("publisher","currently");
x.t("publisher","service");
x.t("globally","multiple");
x.t("balance","requests");
x.t("clear","action");
x.t("independently","filter");
x.t("ansi","page-based");
x.t("rdm","usage");
x.t("needs","consumer");
x.t("realtime","tick-by-tick");
x.t("3.0.4","edition");
x.t("every","item");
x.t("within","group");
x.t("applied","items");
x.t("applied","order");
x.t("applied","merge");
x.t("applied","update");
x.t("workload","source");
x.t("workload","mutliple");
x.t("table","table");
x.t("table","source");
x.t("table","shows");
x.t("table","service_load_id");
x.t("table","service_link_id");
x.t("table","service_group_id");
x.t("table","figure");
x.t("table","service_data_id");
x.t("description","type");
x.t("description","group");
x.t("description","service_info_id");
x.t("description","name");
x.t("description","uint");
x.t("description","openlimit");
x.t("description","servicestate");
x.t("refer","table");
x.t("refer","chapter");
x.t("refer","section");
x.t("currently","servicing");
x.t("currently","provides");
x.t("bearing","availability");
x.t("outstanding","new");
x.t("source","providing");
x.t("source","down");
x.t("source","usually");
x.t("source","none");
x.t("source","map");
x.t("source","interactive");
x.t("source","directory");
x.t("source","mirroring");
x.t("key","type");
x.t("key","name");
x.t("key","service\u2019s");
x.t("key","information");
x.t("required","default");
x.t("required","depends");
x.t("required","processed");
x.t("required","extensible");
x.t("required","process");
x.t("related","source");
x.t("action","filterentry.clear");
x.t("ability","provide");
x.t("apply","items");
x.t("container","type");
x.t("current","workload");
x.t("current","ability");
x.t("current","state");
x.t("qos","real-time");
x.t("qos","provided");
x.t("qos","multiple");
x.t("qos","range");
x.t("qos","array");
x.t("qos","may");
x.t("qos","handling");
x.t("qos","names");
x.t("snapshot","requests");
x.t("shows","series");
x.t("recoverycompleted","text");
x.t("support","currently");
x.t("support","required");
x.t("support","qos");
x.t("state","open");
x.t("state","filterentry");
x.t("state","items");
x.t("state","filter");
x.t("state","n/a");
x.t("state","open/ok");
x.t("state","service");
x.t("state","category");
x.t("provided","directly");
x.t("provided","range/example");
x.t("provided","domain");
x.t("provided","dedicated");
x.t("provided","information");
x.t("provided","item\u2019s");
x.t("provided","service");
x.t("provided","ema");
x.t("payload","key");
x.t("payload","list");
x.t("categories","added");
x.t("categories","correspond");
x.t("categories","information");
x.t("categories","described");
x.t("categories","service");
x.t("type","required");
x.t("type","container");
x.t("type","none");
x.t("type","ascii");
x.t("type","uint");
x.t("type","permission");
x.t("change","applied");
x.t("change","apply");
x.t("change","state");
x.t("change","status");
x.t("change","applies");
x.t("change","directory");
x.t("change","impacts");
x.t("auh","identification");
x.t("open","refer");
x.t("open","stream");
x.t("open","(1)");
x.t("open","service");
x.t("open","streams");
x.t("open","item");
x.t("providing","ansi");
x.t("providing","data");
x.t("vary","based");
x.t("response","message");
x.t("2-byte","unsigned");
x.t("time","(1)");
x.t("time","openwindow");
x.t("calculation","vary");
x.t("(2)","headline");
x.t("service_link_filter","service_link_id");
x.t("i.e","key");
x.t("i.e","service\u2019s");
x.t("i.e","requests");
x.t("i.e","two");
x.t("i.e","bandwidth");
x.t("filterentry","categories");
x.t("filterentry","map");
x.t("filterentry","present");
x.t("filterentry","received");
x.t("filterentry","corresponding");
x.t("filterentry","elements");
x.t("filterentry","sent");
x.t("filterentry","contains");
x.t("donotconflate","true");
x.t("donotconflate","shold");
x.t("donotconflate","optionally");
x.t("(service_data_filter)","elementlist");
x.t("donotcache","donotconflate");
x.t("multiple","group");
x.t("multiple","sources");
x.t("down","link");
x.t("down","indicates");
x.t("however","new");
x.t("mergedtogroup","element");
x.t("mergedtogroup","buffer");
x.t("explains","linkstate");
x.t("explains","content");
x.t("cached","part");
x.t("needed","status");
x.t("needed","parse");
x.t("default","qos");
x.t("default","range");
x.t("default","range/example");
x.t("original","publisher");
x.t("original","provider");
x.t("assumes","service");
x.t("text","ascii");
x.t("text","code");
x.t("contents","description");
x.t("contents","element");
x.t("details","refer");
x.t("details","table");
x.t("items","publisher");
x.t("items","within");
x.t("items","provided");
x.t("items","group");
x.t("items","requested");
x.t("items","client");
x.t("items","whose");
x.t("items","already");
x.t("items","merge");
x.t("items","service");
x.t("items","associated");
x.t("element","applied");
x.t("element","change");
x.t("element","need");
x.t("element","name");
x.t("single","filterlist");
x.t("single","group");
x.t("single","service");
x.t("updates","category");
x.t("new","request");
x.t("new","refresh");
x.t("new","requests");
x.t("link","type");
x.t("link","down");
x.t("link","filterentry");
x.t("link","filter");
x.t("link","linkcode");
x.t("among","typical");
x.t("includes","items");
x.t("includes","broadcast");
x.t("includes","information");
x.t("conveys","information");
x.t("conveys","item");
x.t("price","data");
x.t("usually","bearing");
x.t("usually","qos");
x.t("1.26.110","used");
x.t("list","element");
x.t("list","dictionary");
x.t("list","services");
x.t("list","messagemodeltypes");
x.t("list","containing");
x.t("info","filterentry");
x.t("info","filter");
x.t("info","category");
x.t("status","state");
x.t("status","change");
x.t("status","text");
x.t("status","items");
x.t("status","element");
x.t("status","group");
x.t("status","applies");
x.t("status","(4)");
x.t("status","messages");
x.t("status","thomson");
x.t("status","message");
x.t("status","value");
x.t("status","open/ok");
x.t("status","item");
x.t("service_load_id","conveys");
x.t("service_load_id","(service_load_filter)");
x.t("stringascii","none");
x.t("indicates","whether");
x.t("indicates","consumer");
x.t("rwfenum","list");
x.t("need","provided");
x.t("need","cached");
x.t("need","enumerated");
x.t("need","convey");
x.t("again","consumers");
x.t("cpu","usage");
x.t("group","filterentry");
x.t("group","items");
x.t("group","single");
x.t("group","element");
x.t("group","status");
x.t("group","group");
x.t("group","filter");
x.t("group","name");
x.t("group","handling");
x.t("group","information");
x.t("group","defined");
x.t("group","merge");
x.t("group","filterentry\u2019s");
x.t("group","buffer");
x.t("qualities","service");
x.t("recommends","issue");
x.t("api","edition");
x.t("filter","entry");
x.t("filter","commonly");
x.t("filter","member");
x.t("filter","entries");
x.t("donotcacheflag","donotconflate");
x.t("applies","items");
x.t("applies","item");
x.t("requested","service");
x.t("entry","key");
x.t("entry","state");
x.t("entry","service_link_filter");
x.t("entry","link");
x.t("entry","info");
x.t("entry","group");
x.t("entry","service_data_filter");
x.t("entry","service_load_filter");
x.t("entry","service_group_filter");
x.t("entry","service_info_filter");
x.t("entry","maily");
x.t("entry","data");
x.t("entry","service_state_filter");
x.t("entry","load");
x.t("guide","multiple");
x.t("guide","information");
x.t("guide","(1-255)");
x.t("acceptingrequests","open");
x.t("acceptingrequests","uint");
x.t("assume","openwindow");
x.t("respresents","upstream");
x.t("(service_state_filter)","elementlist");
x.t("marketbyorder","available");
x.t("parse","published");
x.t("depends","needs");
x.t("availability","status");
x.t("availability","data");
x.t("loadfactor","uint");
x.t("loadfactor","less");
x.t("loadfactor","calculated");
x.t("informational","consumer");
x.t("service_info_id","conveys");
x.t("service_info_id","(service_info_filter)");
x.t("true","details");
x.t("true","prevent");
x.t("processed","consumer");
x.t("directly","original");
x.t("directly","next");
x.t("via","updates");
x.t("via","mmt_symbol_list");
x.t("via","reqmsg.qos");
x.t("handle","reissue");
x.t("byte","unsigned");
x.t("desired","data");
x.t("requirements","loadfactor");
x.t("name","type");
x.t("name","ascii");
x.t("name","scoped");
x.t("name","match");
x.t("name","symbollist");
x.t("name","mmt_dictionary");
x.t("name","map.key");
x.t("name","service");
x.t("name","vendor");
x.t("name","associated");
x.t("name","assumed");
x.t("range","example");
x.t("range","via");
x.t("range","requesting");
x.t("obtain","dictionaries");
x.t("(4)","values");
x.t("linkcode","table");
x.t("linkcode","uint");
x.t("dictionary","required");
x.t("dictionary","details");
x.t("dictionary","domain");
x.t("dictionary","names");
x.t("(service_load_filter)","elementlist");
x.t("changed","long");
x.t("enumerated","types");
x.t("acceptingconsumerstatus","uint");
x.t("4.4.2","status");
x.t("4.4.2","acceptingrequests");
x.t("4.4.3.1","details");
x.t("clients","something");
x.t("communication","link");
x.t("part","source");
x.t("part","reissue");
x.t("provider","support");
x.t("provider","assume");
x.t("provider","accept");
x.t("provider","data");
x.t("aggregate","sources");
x.t("concrete","service");
x.t("mmt_market_price","indicates");
x.t("requesting","name");
x.t("requesting","item");
x.t("4.4.3.2","details");
x.t("0-maxuint","maximum");
x.t("provides","realtime");
x.t("provides","present");
x.t("provides","additional");
x.t("provides","information");
x.t("provides","data");
x.t("none","(0)");
x.t("none","time");
x.t("none","name");
x.t("none","0-maxuint");
x.t("none","recoverystarted");
x.t("none","e.g");
x.t("none","data");
x.t("none","0-65535");
x.t("prior","changing");
x.t("range/example","description");
x.t("range/example","column");
x.t("alert","(2)");
x.t("identified","serviceid");
x.t("ascii","name");
x.t("ascii","none");
x.t("ascii","n/a");
x.t("ascii","used");
x.t("developers","guide");
x.t("indicate","two-byte");
x.t("indicate","acceptable");
x.t("loaded","table");
x.t("map","entry");
x.t("map","six");
x.t("map","mapentry");
x.t("map","used");
x.t("map","entries");
x.t("service_link_id","conveys");
x.t("service_link_id","(service_link_filter)");
x.t("ommsate.ok","ommstate.none");
x.t("decide","element");
x.t("(service_group_filter)","elementlist");
x.t("concurrent","streaming");
x.t("array","qos");
x.t("array","ascii");
x.t("array","uint");
x.t("immediate","provider");
x.t("uint","indicates");
x.t("uint","none");
x.t("uint","(interactive)");
x.t("uint","(none)");
x.t("uint","n/a");
x.t("uint","data");
x.t("uint","service");
x.t("uint","mesagemodeltype");
x.t("temporarily","unavailable");
x.t("informed","via");
x.t("remain","unaffected");
x.t("stream","data");
x.t("stream","associated");
x.t("present","none");
x.t("present","feature");
x.t("present","initial");
x.t("present","message");
x.t("present","service");
x.t("request","accepted");
x.t("request","dictionaries");
x.t("request","rejected");
x.t("accepted","provider");
x.t("effective","immediately");
x.t("ised","services");
x.t("reuters","recommends");
x.t("reuters","name");
x.t("display","application");
x.t("supported","supported");
x.t("supported","itemlist");
x.t("supported","consumer");
x.t("mmt_symbol_list","messagemodeltypes");
x.t("ommstate.ok","ommstate.none");
x.t("something","else");
x.t("interactive","broadcast");
x.t("refresh","status");
x.t("refresh","requests");
x.t("refresh","message");
x.t("refresh","update");
x.t("refresh","updated");
x.t("itemlist","ascii");
x.t("respond","new");
x.t("next","example");
x.t("next","next");
x.t("two-byte","value");
x.t("service_data_filter","service_data_id");
x.t("six","categories");
x.t("six","different");
x.t("messages","related");
x.t("messages","note");
x.t("messages","update");
x.t("domain","types");
x.t("domain","message");
x.t("domain","data");
x.t("first","added");
x.t("long","service");
x.t("feature","supported");
x.t("accept","new");
x.t("accept","process");
x.t("allowed","open");
x.t("means","calculation");
x.t("fans","need");
x.t("service\u2019s","workload");
x.t("service\u2019s","current");
x.t("service\u2019s","serviceid");
x.t("service_group_id","conveys");
x.t("service_group_id","(service_group_filter)");
x.t("page-based","data");
x.t("written","directly");
x.t("service_load_filter","service_load_id");
x.t("number","outstanding");
x.t("number","clients");
x.t("number","means");
x.t("number","indicating");
x.t("number","streaming");
x.t("serviceid","table");
x.t("serviceid","i.e");
x.t("shold","true");
x.t("commonly","ised");
x.t("commonly","used");
x.t("dictionaries","needed");
x.t("dictionaries","requesting");
x.t("dictionaries","market");
x.t("consolidation","multiple");
x.t("service_group_filter","service_group_id");
x.t("maximum","number");
x.t("indicating","current");
x.t("scoped","globally");
x.t("recoverystarted","recoverycompleted");
x.t("represents","known");
x.t("different","categories");
x.t("extensible","contents");
x.t("extensible","using");
x.t("may","available");
x.t("may","required");
x.t("may","obtain");
x.t("may","indicate");
x.t("may","information");
x.t("may","used");
x.t("balancing","required");
x.t("chapter","source");
x.t("chapter","qos");
x.t("chapter","supportsoutofbandsnapshots");
x.t("chapter","dictionariesused");
x.t("whether","snapshot");
x.t("whether","original");
x.t("whether","dictionary");
x.t("whether","provider");
x.t("whether","immediate");
x.t("whether","service");
x.t("whether","upstream");
x.t("tick-by-tick","data");
x.t("specifies","status");
x.t("receive","given");
x.t("requests","i.e");
x.t("requests","items");
x.t("requests","among");
x.t("requests","changes");
x.t("requests","made");
x.t("requests","and/or");
x.t("requests","already");
x.t("requests","service");
x.t("requests","item");
x.t("mapentry\u2019s","filterentries");
x.t("0-3","provides");
x.t("directory","table");
x.t("directory","state");
x.t("directory","link");
x.t("directory","info");
x.t("directory","group");
x.t("directory","dictionary");
x.t("directory","map");
x.t("directory","refresh");
x.t("directory","domain");
x.t("directory","mapentry\u2019s");
x.t("directory","data");
x.t("directory","refresh/update");
x.t("directory","load");
x.t("section","4.4.2");
x.t("section","4.4.3.1");
x.t("section","4.4.3.2");
x.t("section","4.2.5");
x.t("section","4.3.1.1");
x.t("section","4.3.1.4");
x.t("service_info_filter","service_info_id");
x.t("types","dictionary");
x.t("types","e.g");
x.t("match","concrete");
x.t("issource","uint");
x.t("rwffld","list");
x.t("rwffld","rwfenum");
x.t("handling","supportsqosrange");
x.t("handling","ema");
x.t("changes","servicestate");
x.t("identical","aggregating");
x.t("added","changed");
x.t("added","updated");
x.t("initial","refresh");
x.t("rejected","refer");
x.t("(1)","none");
x.t("(1)","alert");
x.t("(1)","(1)");
x.t("programmatic","decisions");
x.t("correspond","filter");
x.t("dedicated","update");
x.t("4.2.5","table");
x.t("code","information");
x.t("client","allowed");
x.t("(interactive)","1-2");
x.t("identifies","service");
x.t("(service_link_filter)","map");
x.t("consumer","example");
x.t("consumer","state");
x.t("consumer","request");
x.t("consumer","may");
x.t("consumer","requests");
x.t("consumer","application");
x.t("filterentries","4.3.1.1");
x.t("thomson","reuters");
x.t("supportsqosrange","uint");
x.t("message","payload");
x.t("message","donotconflate");
x.t("message","mergedtogroup");
x.t("message","status");
x.t("message","need");
x.t("message","api");
x.t("message","donotcacheflag");
x.t("message","kind");
x.t("message","models");
x.t("message","sent");
x.t("known","service");
x.t("bit-value","type");
x.t("tickbytick","available");
x.t("tickbytick","e.g");
x.t("openlimit","uint");
x.t("openlimit","reached");
x.t("issue","item");
x.t("affect","streams");
x.t("matches","group");
x.t("given","time");
x.t("(none)","0-3");
x.t("(service_info_filter)","elementlist");
x.t("identification","load");
x.t("e.g","real-time");
x.t("e.g","1.26.110");
x.t("e.g","list");
x.t("e.g","rwffld");
x.t("e.g","thomson");
x.t("e.g","marketprice");
x.t("e.g","1.26.102");
x.t("e.g","idn_rdf");
x.t("e.g","ommstate.open");
x.t("n/a","explains");
x.t("n/a","indicates");
x.t("n/a","e.g");
x.t("n/a","service");
x.t("symbollist","includes");
x.t("kind","change");
x.t("whose","itemgroup");
x.t("1023","explains");
x.t("marketprice","marketbyorder");
x.t("dictionariesprovided","array");
x.t("made","openlimit");
x.t("changing","data");
x.t("changing","service");
x.t("and/or","handle");
x.t("existing","streams");
x.t("less","loaded");
x.t("sources","provide");
x.t("sources","qos");
x.t("sources","auh");
x.t("sources","single");
x.t("sources","name");
x.t("market","price");
x.t("1.26.102","itemgroup");
x.t("convey","group");
x.t("mutliple","services");
x.t("heavily-loaded","service");
x.t("4.3","data");
x.t("represented","filterlist");
x.t("represented","map");
x.t("represented","series");
x.t("primarily","used");
x.t("usage","cpu");
x.t("usage","guide");
x.t("usage","number");
x.t("value","mergedtogroup");
x.t("value","present");
x.t("additional","information");
x.t("figure","source");
x.t("service_data_id","(service_data_filter)");
x.t("service_data_id","conveys");
x.t("already","open");
x.t("broadcast","interactive");
x.t("broadcast","linkstate");
x.t("broadcast","data");
x.t("broadcast","describe");
x.t("mmt_dictionary","mmt_market_price");
x.t("mmt_dictionary","messagemodeltypes");
x.t("process","messages");
x.t("process","data");
x.t("open/ok","refer");
x.t("open/ok","section");
x.t("linkstate","linkcode");
x.t("linkstate","uint");
x.t("elektron","message");
x.t("services","provide");
x.t("services","providing");
x.t("services","represented");
x.t("services","system");
x.t("models","part");
x.t("manages","group");
x.t("systems","aggregate");
x.t("acceptable","range");
x.t("(3)","status");
x.t("aggregating","system");
x.t("maily","informational");
x.t("impacts","items");
x.t("help","indicate");
x.t("help","decide");
x.t("data","available");
x.t("data","applied");
x.t("data","description");
x.t("data","type");
x.t("data","donotcache");
x.t("data","filterentry");
x.t("data","details");
x.t("data","element");
x.t("data","contents");
x.t("data","status");
x.t("data","applies");
x.t("data","filter");
x.t("data","provider");
x.t("data","present");
x.t("data","fans");
x.t("data","number");
x.t("data","may");
x.t("data","consumer");
x.t("data","elektron");
x.t("data","data");
x.t("data","comes");
x.t("data","service");
x.t("data","4.3.1");
x.t("data","ema");
x.t("information","every");
x.t("information","applied");
x.t("information","qos");
x.t("information","current");
x.t("information","provided");
x.t("information","categories");
x.t("information","usually");
x.t("information","service\u2019s");
x.t("information","may");
x.t("information","identifies");
x.t("information","known");
x.t("information","represented");
x.t("information","help");
x.t("information","typically");
x.t("information","service");
x.t("information","individual");
x.t("information","associated");
x.t("information","without");
x.t("information","upstream");
x.t("information","item");
x.t("idn_rdf","service");
x.t("capabilities","array");
x.t("becomes","available");
x.t("becomes","temporarily");
x.t("becomes","effective");
x.t("ommstate.open","ommsate.ok");
x.t("ommstate.open","ommstate.ok");
x.t("inserted","help");
x.t("openwindow","uint");
x.t("openwindow","becomes");
x.t("openwindow","behavior");
x.t("typical","consumer");
x.t("respresent","filterentry");
x.t("4.3.1.1","source");
x.t("4.3.1.1","service_state_id");
x.t("messagemodeltypes","details");
x.t("messagemodeltypes","chapter");
x.t("messagemodeltypes","service");
x.t("defined","rdm");
x.t("defined","itemgroup");
x.t("(1-255)","example");
x.t("received","single");
x.t("received","element");
x.t("received","refresh");
x.t("mapentry","respresents");
x.t("mapentry","represents");
x.t("reissue","filterentry");
x.t("reissue","requests");
x.t("prevent","conflation");
x.t("application","details");
x.t("application","need");
x.t("application","display");
x.t("application","treat");
x.t("published","content");
x.t("values","1023");
x.t("values","defined");
x.t("reqmsg.qos","supported");
x.t("4.3.1.2","source");
x.t("unavailable","becomes");
x.t("treat","entry");
x.t("described","table");
x.t("permission","data");
x.t("filterentry.clear","used");
x.t("conflation","caching");
x.t("map.key","vendor");
x.t("supportsoutofbandsnapshots","uint");
x.t("mirroring","refer");
x.t("unaffected","however");
x.t("4.3.1.3","source");
x.t("decisions","service");
x.t("note","clear");
x.t("note","default");
x.t("4.3.1.4","source");
x.t("4.3.1.4","acceptingconsumerstatus");
x.t("servicestate","uint");
x.t("servicestate","affect");
x.t("two","byte");
x.t("column","table");
x.t("headline","(3)");
x.t("optionally","true");
x.t("typically","provided");
x.t("typically","represented");
x.t("comes","source");
x.t("item\u2019s","refresh");
x.t("based","system");
x.t("4.3.1.5","source");
x.t("itself","interactive");
x.t("edition","developers");
x.t("edition","4.3");
x.t("merge","change");
x.t("merge","items");
x.t("merge","information");
x.t("reached","refer");
x.t("order","received");
x.t("immediately","loadfactor");
x.t("4.3.1.6","source");
x.t("service","uniquely");
x.t("service","available");
x.t("service","provide");
x.t("service","filterlist");
x.t("service","key");
x.t("service","support");
x.t("service","provided");
x.t("service","i.e");
x.t("service","down");
x.t("service","status");
x.t("service","group");
x.t("service","availability");
x.t("service","name");
x.t("service","provides");
x.t("service","prior");
x.t("service","first");
x.t("service","accept");
x.t("service","consolidation");
x.t("service","commonly");
x.t("service","whether");
x.t("service","receive");
x.t("service","issource");
x.t("service","dictionariesprovided");
x.t("service","represented");
x.t("service","primarily");
x.t("service","information");
x.t("service","capabilities");
x.t("service","data");
x.t("service","becomes");
x.t("service","openwindow");
x.t("service","respresent");
x.t("service","itself");
x.t("service","service");
x.t("service","updated");
x.t("service","content");
x.t("service","remains");
x.t("service","higher");
x.t("refresh/update","message");
x.t("used","ansi");
x.t("used","change");
x.t("used","includes");
x.t("used","info");
x.t("used","provides");
x.t("used","none");
x.t("used","identifies");
x.t("used","manages");
x.t("used","systems");
x.t("used","services");
x.t("used","merge");
x.t("used","statistics");
x.t("used","describe");
x.t("used","contains");
x.t("corresponding","fitlter");
x.t("service_state_id","conveys");
x.t("service_state_id","(service_state_filter)");
x.t("caching","content");
x.t("individual","upstream");
x.t("mesagemodeltype","extensible");
x.t("elements","4.3.1.2");
x.t("elements","4.3.1.3");
x.t("elements","4.3.1.4");
x.t("elements","4.3.1.5");
x.t("elements","4.3.1.6");
x.t("0-65535","number");
x.t("system","balance");
x.t("system","i.e");
x.t("system","heavily-loaded");
x.t("streaming","items");
x.t("streaming","requests");
x.t("vendor","stringascii");
x.t("vendor","provides");
x.t("using","values");
x.t("containing","mmt_dictionary");
x.t("service_state_filter","service_state_id");
x.t("setting","acceptingrequests");
x.t("calculated","services");
x.t("statistics","concurrent");
x.t("dictionariesused","array");
x.t("consumers","informed");
x.t("series","2-byte");
x.t("series","inserted");
x.t("4.3.1","source");
x.t("member","refresh");
x.t("associated","communication");
x.t("associated","typically");
x.t("associated","service");
x.t("associated","item");
x.t("load","filter");
x.t("load","balancing");
x.t("load","filterentry\u2019s");
x.t("names","dictionaries");
x.t("names","may");
x.t("names","service");
x.t("itemgroup","provided");
x.t("itemgroup","matches");
x.t("itemgroup","information");
x.t("without","changing");
x.t("filterentry\u2019s","elements");
x.t("behavior","setting");
x.t("1-2","indicates");
x.t("describe","current");
x.t("describe","whether");
x.t("upstream","source");
x.t("upstream","sources");
x.t("unsigned","integers");
x.t("bandwidth","usage");
x.t("category","change");
x.t("category","present");
x.t("category","programmatic");
x.t("category","category");
x.t("elementlist","used");
x.t("sent","independently");
x.t("sent","updated");
x.t("entries","chapter");
x.t("entries","data");
x.t("buffer","n/a");
x.t("assumed","identical");
x.t("update","every");
x.t("update","payload");
x.t("update","categories");
x.t("update","response");
x.t("update","messages");
x.t("update","item");
x.t("contains","six");
x.t("contains","information");
x.t("updated","response");
x.t("updated","needed");
x.t("updated","update");
x.t("content","provide");
x.t("content","details");
x.t("content","info");
x.t("content","data");
x.t("remains","list");
x.t("ema","3.0.4");
x.t("ema","assumes");
x.t("item","states");
x.t("item","open");
x.t("item","group");
x.t("item","via");
x.t("item","stream");
x.t("item","request");
x.t("item","supported");
x.t("item","streams");
x.t("streams","remain");
x.t("streams","existing");
x.t("streams","already");
x.t("streams","received");
x.t("higher","loadfactor");
}
