function FileData_Pairs(x)
{
x.t("referencing","field");
x.t("referencing","enumerated");
x.t("looks","enumerated");
x.t("defines","field");
x.t("table","defines");
x.t("table","consumer");
x.t("table","value");
x.t("table","values");
x.t("5.2","decoding");
x.t("having","decoded");
x.t("field","looks");
x.t("field","enumerated");
x.t("field","dictionary");
x.t("type","figure");
x.t("type","dictionary_enum_tables");
x.t("pre-decoded","data");
x.t("contents","field");
x.t("displayable","string");
x.t("finds","correct");
x.t("api","edition");
x.t("decoded","enumerated");
x.t("enumerated","types");
x.t("enumerated","value");
x.t("dictionary","field\u2019s");
x.t("dictionary","determine");
x.t("dictionary","domain");
x.t("dictionary","consumer");
x.t("fieldlist","referencing");
x.t("fieldlist","contents");
x.t("field\u2019s","type");
x.t("fieldid","correct");
x.t("fieldid","associated");
x.t("determine","type");
x.t("encoded","value");
x.t("string","associated");
x.t("domain","decoding");
x.t("decoding","fieldlist");
x.t("dictionaries","elektron");
x.t("dictionaries","itself");
x.t("may","table");
x.t("chapter","dictionary");
x.t("stores","pre-decoded");
x.t("types","table");
x.t("types","dictionary");
x.t("types","dictionaries");
x.t("reference","information");
x.t("consumer","having");
x.t("consumer","reference");
x.t("message","api");
x.t("e.g","840");
x.t("e.g","usd");
x.t("840","finds");
x.t("value","table");
x.t("value","displayable");
x.t("value","e.g");
x.t("value","data");
x.t("crossreferencing","fieldid");
x.t("figure","fieldlist");
x.t("figure","fieldentry");
x.t("elektron","message");
x.t("decode","fieldentry");
x.t("usd","chapter");
x.t("data","application");
x.t("data","ema");
x.t("internally","stores");
x.t("correct","table");
x.t("correct","field");
x.t("information","figure");
x.t("application","easily");
x.t("values","corresponding");
x.t("itself","fieldentry");
x.t("easily","decode");
x.t("edition","5.2");
x.t("dictionary_enum_tables","may");
x.t("corresponding","enumerated");
x.t("fieldentry","referencing");
x.t("fieldentry","without");
x.t("fieldentry","contains");
x.t("associated","encoded");
x.t("associated","e.g");
x.t("without","crossreferencing");
x.t("contains","fieldid");
x.t("ema","internally");
}
