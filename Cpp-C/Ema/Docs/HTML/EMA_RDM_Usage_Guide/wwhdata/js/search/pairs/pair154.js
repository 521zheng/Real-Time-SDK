function FileData_Pairs(x)
{
x.t("instrument_name_ric","name");
x.t("every","update");
x.t("clear","cache");
x.t("description","value");
x.t("user-specified","item-level");
x.t("sending","conflated");
x.t("table","symbollist");
x.t("omm","provider");
x.t("omm","non-interactive");
x.t("required","payload");
x.t("required","mmt_symbol_list");
x.t("required","msgkeyinupdates");
x.t("clearcache","true");
x.t("qos","optional");
x.t("snapshot","supported");
x.t("cache","donotconflate");
x.t("cache","update");
x.t("provided","every");
x.t("provided","servicename");
x.t("times","interval");
x.t("type","specified");
x.t("payload","required");
x.t("payload","contains");
x.t("response","messages");
x.t("response","message");
x.t("however","msgkeyinupdates");
x.t("donotcache","true");
x.t("donotconflate","true");
x.t("removes","items");
x.t("updatemsg","sent");
x.t("items","list");
x.t("updates","received");
x.t("updates","conflation");
x.t("contents","update");
x.t("permissioning","information");
x.t("nametype","defaults");
x.t("nametype","optional");
x.t("list","updates");
x.t("list","map");
x.t("indicates","clear");
x.t("indicates","cache");
x.t("indicates","conflate");
x.t("indicates","interest");
x.t("item-level","sequence");
x.t("api","edition");
x.t("images","true");
x.t("entry","represents");
x.t("entry","contains");
x.t("true","snapshot");
x.t("true","indicates");
x.t("true","name");
x.t("true","request");
x.t("true","match");
x.t("true","service");
x.t("specified","nametype");
x.t("specified","request");
x.t("defaults","instrument_name_ric");
x.t("name","type");
x.t("name","optional");
x.t("name","service");
x.t("name","servicename");
x.t("name","item");
x.t("11.2.3","symbollist");
x.t("provider","sending");
x.t("provider","omm");
x.t("provider","send");
x.t("provider","application");
x.t("provider","applications");
x.t("component","description");
x.t("permissiondata","optional");
x.t("conflate","update");
x.t("provides","data");
x.t("fieldlist","additional");
x.t("conflatedcount","optional");
x.t("encoded","using");
x.t("map","entry");
x.t("stream","conflatedcount");
x.t("conflated","consumer");
x.t("conflated","update");
x.t("request","specified");
x.t("request","permissiondata");
x.t("request","conflatedtime");
x.t("supported","note");
x.t("mmt_symbol_list","indications");
x.t("refresh","response");
x.t("first","refresh");
x.t("messages","component");
x.t("messages","stream");
x.t("domain","usage");
x.t("msgkeyinupdates","true");
x.t("number","used");
x.t("reqmsg.conflatedinupdates","true");
x.t("serviceid","optional");
x.t("serviceid","service");
x.t("represents","item");
x.t("chapter","symbollist");
x.t("seqnum","optional");
x.t("match","name");
x.t("informs","consumer");
x.t("interest","information");
x.t("conflatedtime","optional");
x.t("adds","removes");
x.t("consumer","times");
x.t("consumer","updates");
x.t("consumer","indicates");
x.t("message","clearcache");
x.t("message","qos");
x.t("message","however");
x.t("message","api");
x.t("message","encoded");
x.t("message","chapter");
x.t("message","symbollist");
x.t("message","elektron");
x.t("symbollist","domain");
x.t("symbollist","update");
x.t("domaintype","required");
x.t("value","domaintype");
x.t("interval","milliseconds");
x.t("additional","information");
x.t("usage","symbollist");
x.t("send","name");
x.t("elektron","message");
x.t("sequence","number");
x.t("optional","user-specified");
x.t("optional","required");
x.t("optional","donotcache");
x.t("optional","permissioning");
x.t("optional","provider");
x.t("optional","seqnum");
x.t("information","setting");
x.t("information","associated");
x.t("information","item");
x.t("data","conflated");
x.t("data","note");
x.t("received","images");
x.t("application","either");
x.t("application","sequencing");
x.t("conflation","consumer");
x.t("notifies","consumer");
x.t("note","provider");
x.t("milliseconds","data");
x.t("applications","adds");
x.t("edition","11.2.3");
x.t("indications","optional");
x.t("used","application");
x.t("service","payload");
x.t("service","provides");
x.t("service","serviceid");
x.t("either","servicename");
x.t("using","updatemsg");
x.t("sequencing","messages");
x.t("setting","reqmsg.conflatedinupdates");
x.t("associated","contents");
x.t("sent","omm");
x.t("non-interactive","provider");
x.t("servicename","provided");
x.t("servicename","first");
x.t("servicename","serviceid");
x.t("servicename","optional");
x.t("update","response");
x.t("update","nametype");
x.t("update","informs");
x.t("update","message");
x.t("update","notifies");
x.t("item","table");
x.t("item","provided");
x.t("item","list");
x.t("contains","fieldlist");
x.t("contains","map");
}
