function FileData_Pairs(x)
{
x.t("version","changes");
x.t("version","information");
x.t("table","dictionary");
x.t("description","value");
x.t("refer","section");
x.t("required","support");
x.t("required","interestafterrefresh");
x.t("required","initialimage");
x.t("required","filter");
x.t("required","receiving");
x.t("required","specifies");
x.t("required","mmt_dictionary");
x.t("source","directory");
x.t("5.3","usage");
x.t("ommconsumerconfig.addadminmsg","override");
x.t("providers","required");
x.t("5.4.1","identifier");
x.t("qos","used");
x.t("0x00","provides");
x.t("support","minimal");
x.t("payload","used");
x.t("interestafterrefresh","true");
x.t("response","refer");
x.t("response","message");
x.t("0x03","provides");
x.t("reqmsg.interestafterrefresh","true");
x.t("whenever","dictionary");
x.t("ommconsumer","constructor");
x.t("needed","dictionary_info");
x.t("needed","decoding");
x.t("needed","users");
x.t("needed","caching");
x.t("default","dictionary");
x.t("dictionary_info","0x00");
x.t("filters","further");
x.t("updates","sent");
x.t("details","filter");
x.t("nametype","used");
x.t("0x07","provides");
x.t("indicates","name");
x.t("indicates","initial");
x.t("indicates","streaming");
x.t("refreshcomplete","consumer");
x.t("status","response");
x.t("recommends","consumer");
x.t("initialimage","true");
x.t("api","edition");
x.t("filter","refer");
x.t("filter","required");
x.t("filter","according");
x.t("filter","represents");
x.t("according","information");
x.t("desired","dictionary");
x.t("desired","verbosity");
x.t("true","indicates");
x.t("true","notified");
x.t("name","required");
x.t("name","desired");
x.t("dictionary","version");
x.t("dictionary","needed");
x.t("dictionary","request");
x.t("dictionary","domain");
x.t("dictionary","consumer");
x.t("dictionary","seen");
x.t("dictionary","information");
x.t("dictionary","note");
x.t("dictionary","streams");
x.t("constructor","class");
x.t("component","description");
x.t("provides","version");
x.t("provides","information");
x.t("further","details");
x.t("encoded","using");
x.t("extendedheader","used");
x.t("receiving","refreshcomplete");
x.t("request","required");
x.t("request","updates");
x.t("request","indicates");
x.t("request","supported");
x.t("request","messages");
x.t("request","message");
x.t("request","setting");
x.t("reuters","recommends");
x.t("pause","request");
x.t("supported","qos");
x.t("dictionary_verbose","0x0f");
x.t("messages","using");
x.t("domain","5.3");
x.t("decoding","dictionary_verbose");
x.t("serviceid","required");
x.t("serviceid","service");
x.t("comments","providers");
x.t("receive","status");
x.t("specifies","name");
x.t("specifies","serviceid");
x.t("specifies","servicename");
x.t("represents","desired");
x.t("chapter","dictionary");
x.t("requests","dictionary");
x.t("dictionary_minimal","0x03");
x.t("changes","table");
x.t("directory","response");
x.t("section","5.4.1");
x.t("section","4.3.1.1");
x.t("notified","whenever");
x.t("initial","image");
x.t("reqmsg","sent");
x.t("interactions","required");
x.t("verbosity","dictionary");
x.t("identifier","used");
x.t("override","default");
x.t("thomson","reuters");
x.t("consumer","filter");
x.t("consumer","receive");
x.t("consumer","requests");
x.t("consumer","streaming");
x.t("priorityclass","used");
x.t("message","api");
x.t("message","dictionary");
x.t("message","component");
x.t("message","encoded");
x.t("message","received");
x.t("message","update");
x.t("domaintype","required");
x.t("seen","source");
x.t("usage","5.3.1");
x.t("usage","elektron");
x.t("5.3.1","dictionary");
x.t("value","domaintype");
x.t("mmt_dictionary","interactions");
x.t("elektron","message");
x.t("internally","ommconsumer");
x.t("information","needed");
x.t("information","dictionary");
x.t("information","dictionary_minimal");
x.t("information","including");
x.t("configure","dictionary");
x.t("optional","extendedheader");
x.t("image","required");
x.t("received","pause");
x.t("4.3.1.1","filter");
x.t("application","either");
x.t("users","configure");
x.t("priority","optional");
x.t("note","application");
x.t("verbose","filters");
x.t("edition","5.3");
x.t("used","payload");
x.t("used","name");
x.t("used","chapter");
x.t("used","priorityclass");
x.t("used","priority");
x.t("used","worstqos");
x.t("used","prioritycount");
x.t("used","servicename");
x.t("used","attrib");
x.t("service","nametype");
x.t("service","serviceid");
x.t("service","consumer");
x.t("either","servicename");
x.t("caching","dictionary_normal");
x.t("using","ommconsumerconfig.addadminmsg");
x.t("using","reqmsg");
x.t("class","request");
x.t("streaming","request");
x.t("setting","reqmsg.interestafterrefresh");
x.t("worstqos","used");
x.t("dictionary_normal","0x07");
x.t("prioritycount","used");
x.t("minimal","verbose");
x.t("including","comments");
x.t("sent","dictionary");
x.t("sent","internally");
x.t("servicename","required");
x.t("servicename","serviceid");
x.t("servicename","service");
x.t("0x0f","provides");
x.t("attrib","used");
x.t("streams","thomson");
x.t("update","response");
}
