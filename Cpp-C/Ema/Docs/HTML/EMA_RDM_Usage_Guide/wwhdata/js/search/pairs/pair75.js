function FileData_Pairs(x)
{
x.t("plain","text");
x.t("example","tags");
x.t("tag","version");
x.t("tag","build");
x.t("tag","type");
x.t("tag","attribute");
x.t("tag","filename");
x.t("tag","information");
x.t("tag","desc");
x.t("tag","date");
x.t("tag","attributes");
x.t("overflow","marketfeed");
x.t("columns","field");
x.t("columns","separated");
x.t("rmtes_string","type");
x.t("rmtes_string","rmtes");
x.t("rmtes_string","1-255");
x.t("rmtes_string","rdn_exchid");
x.t("available","beginning");
x.t("available","rdmfielddictionary");
x.t("provide","versioning");
x.t("below","tag");
x.t("below","lists");
x.t("4.00.14","tag");
x.t("notes","price");
x.t("notes","acronym");
x.t("notes","alphanumeric");
x.t("utf8_string","utf8");
x.t("base64","encoded");
x.t("version","4.00.14");
x.t("version","name");
x.t("version","stores");
x.t("version","information");
x.t("version","used");
x.t("rather","rows");
x.t("rwflen","derived");
x.t("rwflen","caching");
x.t("filterlist","map");
x.t("day","month");
x.t("converted","marketfeed");
x.t("excepting","quoted");
x.t("shown","below");
x.t("shown","above");
x.t("lists","mappings");
x.t("table","below");
x.t("table","describes");
x.t("table","field");
x.t("table","recommended");
x.t("table","marketfeed");
x.t("table","dictionary");
x.t("table","rows");
x.t("build","002");
x.t("build","stores");
x.t("build","information");
x.t("build","used");
x.t("describes","tag");
x.t("describes","dictionary");
x.t("description","filename");
x.t("positions","integer");
x.t("enum","enum");
x.t("enum","timact");
x.t("enum","values");
x.t("enum","buffer");
x.t("binary","uint32");
x.t("binary","171");
x.t("binary","buffer");
x.t("omm","provider");
x.t("----------","----------");
x.t("----------","------");
x.t("fid","fid");
x.t("fid","field");
x.t("fid","ripples");
x.t("current","name");
x.t("double","double");
x.t("double","opaque");
x.t("qos","qos");
x.t("qos","array");
x.t("derived","field");
x.t("millisecond","time");
x.t("converting","rwf");
x.t("field","tag");
x.t("field","rather");
x.t("field","table");
x.t("field","type");
x.t("field","mappings");
x.t("field","ripple");
x.t("field","acronym");
x.t("field","dictionary");
x.t("field","dde");
x.t("field","length");
x.t("field","dictionaries");
x.t("field","identifier");
x.t("field","column");
x.t("field","corresponding");
x.t("field","rwf");
x.t("last","trdprc_2");
x.t("last","trdprc_3");
x.t("last","trdprc_4");
x.t("last","trdprc_5");
x.t("last","null");
x.t("versioning","information");
x.t("uses","acronym");
x.t("conveyed","along");
x.t("real32","real64");
x.t("0-255","enumerated");
x.t("0-255","integer");
x.t("year","time_seconds");
x.t("type","tag");
x.t("type","type");
x.t("type","keywords");
x.t("type","marketfeed");
x.t("type","rwftype");
x.t("type","none");
x.t("type","int");
x.t("type","fields");
x.t("type","length");
x.t("type","stores");
x.t("type","keyword");
x.t("type","integer");
x.t("type","used");
x.t("type","rwf");
x.t("type","associated");
x.t("sample","several");
x.t("sample","following");
x.t("dictionary_field_definitions=1","types");
x.t("datum","field");
x.t("-----------","---");
x.t("time","enum");
x.t("time","time");
x.t("time","trdprc_1");
x.t("time","hour");
x.t("time","time_seconds");
x.t("time","update");
x.t("trdprc_1","last");
x.t("rmtes","utf8_string");
x.t("rmtes","ascii_string");
x.t("utf8","double");
x.t("vector","vector");
x.t("vector","field_list");
x.t("mappings","field");
x.t("mappings","rdmfielddictionary");
x.t("mappings","rwf");
x.t("trdprc_2","last");
x.t("trdprc_2","price");
x.t("tagged","attributes");
x.t("keywords","marketfeed");
x.t("keywords","supported");
x.t("keywords","rdmfielddictionary\u2019s");
x.t("keywords","5.5.2.2");
x.t("keywords","following");
x.t("text","table");
x.t("whitespace","excepting");
x.t("uint32","base64");
x.t("uint32","dsply_name");
x.t("uint32","uint64");
x.t("trdprc_3","last");
x.t("trdprc_3","price");
x.t("original","name");
x.t("require","rmtes");
x.t("quoted","strings");
x.t("displaytemplate","null");
x.t("trdprc_4","last");
x.t("trdprc_4","price");
x.t("element","name");
x.t("-------","-----------");
x.t("-------","prod_perm");
x.t("price","table");
x.t("price","real");
x.t("price","real64");
x.t("trdprc_5","last");
x.t("trdprc_5","price");
x.t("file","tag");
x.t("file","processed");
x.t("file","format");
x.t("file","rdmfielddictionary");
x.t("file","column");
x.t("file","created");
x.t("file","rwf");
x.t("file","attributes");
x.t("rdfd","rwf");
x.t("indicates","used");
x.t("status","stream");
x.t("couple","recommendations");
x.t("beginning","file");
x.t("beginning","exclamation");
x.t("abbreviated","name");
x.t("api","edition");
x.t("rdndisplay","displaytemplate");
x.t("002","tag");
x.t("float","float");
x.t("float","datetime");
x.t("bits","table");
x.t("len","notes");
x.t("len","rwflen");
x.t("len","-------");
x.t("---","----------");
x.t("become","available");
x.t("recommended","marketfeed/rwf");
x.t("processed","loading");
x.t("ripple","null");
x.t("marketfeed","omm");
x.t("marketfeed","field");
x.t("marketfeed","type");
x.t("marketfeed","marketfeed");
x.t("marketfeed","length");
x.t("marketfeed","valid");
x.t("marketfeed","rwf");
x.t("byte","unsigned");
x.t("acronym","fid");
x.t("acronym","name");
x.t("acronym","target");
x.t("acronym","dde");
x.t("acronym","longname");
x.t("name","notes");
x.t("name","file");
x.t("name","abbreviated");
x.t("name","null");
x.t("name","represented");
x.t("name","corresponding");
x.t("rwftype","rwflen");
x.t("rwftype","rwf");
x.t("(3-8)","enum");
x.t("dictionary","version");
x.t("dictionary","build");
x.t("dictionary","table");
x.t("dictionary","field");
x.t("dictionary","type");
x.t("dictionary","dictionary_field_definitions=1");
x.t("dictionary","tagged");
x.t("dictionary","file");
x.t("dictionary","summarydata");
x.t("dictionary","domain");
x.t("dictionary","release");
x.t("dictionary","correspond");
x.t("dictionary","information");
x.t("dictionary","tags");
x.t("dictionary","desc");
x.t("dictionary","date");
x.t("dictionary","column");
x.t("dictionary","versions");
x.t("enumerated","enum");
x.t("enumerated","time");
x.t("enumerated","(3-8)");
x.t("enumerated","2-3");
x.t("2-3","(1-8)");
x.t("minute","second");
x.t("ripples","field");
x.t("ripples","rippleto");
x.t("custom","fids");
x.t("provider","application");
x.t("summarydata","type");
x.t("fieldlist","element_list");
x.t("zero","values");
x.t("none","length");
x.t("fieldid","field");
x.t("ascii","rmtes_string");
x.t("ascii","enumerated");
x.t("optimized","wire");
x.t("sign","bit");
x.t("strings","shown");
x.t("loading","file-based");
x.t("map","map");
x.t("map","series");
x.t("encoded","byte");
x.t("encoded","buffer");
x.t("month","year");
x.t("lines","columns");
x.t("lines","beginning");
x.t("target","field");
x.t("int","binary");
x.t("int","0-255");
x.t("int","uint");
x.t("int","0-2");
x.t("int","signed");
x.t("int","int32");
x.t("int","0-65535");
x.t("array","vector");
x.t("array","array");
x.t("(1-8)","enum");
x.t("wire","integer");
x.t("fields","cannot");
x.t("attribute","description");
x.t("(enumlength)","marketfeed");
x.t("datatype","values");
x.t("uint","uint32");
x.t("uint","real");
x.t("uint","unsigned");
x.t("stream","qos");
x.t("second","millisecond");
x.t("second","price");
x.t("exclamation","point");
x.t("dde","acronym");
x.t("point","comments");
x.t("display","name");
x.t("reuters","typically");
x.t("supported","rwf");
x.t("representation","field");
x.t("representation","file");
x.t("representation","dictionary");
x.t("opaque","float");
x.t("opaque","opaque");
x.t("ansi_page","table");
x.t("ansi_page","ansi_page");
x.t("5.5.2","field");
x.t("domain","field");
x.t("domain","representation");
x.t("domain","model");
x.t("decoding","field");
x.t("datetime","status");
x.t("datetime","datetime");
x.t("comments","ignored");
x.t("length","(enumlength)");
x.t("length","length");
x.t("length","hint");
x.t("length","chapter");
x.t("length","technically");
x.t("length","alphanumeric");
x.t("length","rwf");
x.t("length","associated");
x.t("dictionaries","used");
x.t("marketfeed/rwf","field");
x.t("truncated","converted");
x.t("represents","field");
x.t("idn","exchange");
x.t("exchange","null");
x.t("may","added");
x.t("hint","associated");
x.t("safe","field");
x.t("0-2","table");
x.t("0-2","integer");
x.t("cannot","converted");
x.t("chapter","dictionary");
x.t("ignored","row");
x.t("row","represents");
x.t("stores","version");
x.t("stores","dictionary");
x.t("stores","internal");
x.t("technically","ascii");
x.t("instead","rmtes_string");
x.t("format","plain");
x.t("format","uses");
x.t("format","sample");
x.t("format","rdmfielddictionary");
x.t("format","elektron");
x.t("rdmfielddictionary","example");
x.t("rdmfielddictionary","file");
x.t("rdmfielddictionary","couple");
x.t("rdmfielddictionary","safe");
x.t("rdmfielddictionary","filename");
x.t("alphanumeric","rmtes_string");
x.t("alphanumeric","enumerated");
x.t("alphanumeric","types");
x.t("alphanumeric","ascii_string");
x.t("alphanumeric","1-255");
x.t("filename","original");
x.t("filename","used");
x.t("filename","rwf.dat");
x.t("match","current");
x.t("types","data");
x.t("types","defined");
x.t("types","values");
x.t("internal","build");
x.t("release","date");
x.t("keyword","data");
x.t("keyword","used");
x.t("int64","int");
x.t("element_list","elem_list");
x.t("xml","ansi_page");
x.t("xml","xml");
x.t("added","future");
x.t("rows","fieldid");
x.t("rows","separated");
x.t("correspond","elemententry");
x.t("identifier","value");
x.t("rippleto","file");
x.t("field_list","fieldlist");
x.t("thomson","reuters");
x.t("message","api");
x.t("ensure","data");
x.t("ensure","rwf");
x.t("null","field");
x.t("null","time");
x.t("null","price");
x.t("null","enumerated");
x.t("null","alphanumeric");
x.t("null","integer");
x.t("longer","version");
x.t("ric/symbol","alphanumeric");
x.t("zeros","decimal");
x.t("represented","acronym");
x.t("value","bits");
x.t("value","ripples");
x.t("value","sign");
x.t("value","trailing");
x.t("rdmfielddictionary\u2019s","rwftype");
x.t("171","buffer");
x.t("figure","field");
x.t("several","tagged");
x.t("signed","integer");
x.t("elektron","message");
x.t("valid","keywords");
x.t("represent","values");
x.t("along","domain");
x.t("help","ensure");
x.t("timact","time");
x.t("information","columns");
x.t("information","build");
x.t("information","conveyed");
x.t("information","dictionary");
x.t("information","date");
x.t("information","associated");
x.t("data","overflow");
x.t("data","type");
x.t("data","require");
x.t("data","truncated");
x.t("tags","shown");
x.t("tags","may");
x.t("future","dictionary");
x.t("desc","describes");
x.t("desc","rdfd");
x.t("desc","used");
x.t("defined","table");
x.t("bit","value");
x.t("dsply_name","display");
x.t("values","0-255");
x.t("values","optimized");
x.t("values","help");
x.t("values","fractional");
x.t("values","0-65535");
x.t("values","rwf");
x.t("int32","int64");
x.t("recommendations","custom");
x.t("application","ensure");
x.t("above","lines");
x.t("permission","null");
x.t("18-nov-2010","figure");
x.t("longname","longer");
x.t("column","datum");
x.t("column","name");
x.t("column","names");
x.t("integer","uint32");
x.t("integer","int");
x.t("integer","uint");
x.t("integer","alphanumeric");
x.t("integer","value");
x.t("integer","real");
x.t("integer","uint64");
x.t("date","day");
x.t("date","time");
x.t("date","price");
x.t("date","stores");
x.t("date","information");
x.t("date","18-nov-2010");
x.t("date","date");
x.t("date","used");
x.t("fids","field");
x.t("typically","match");
x.t("5.5.2.1","rwf");
x.t("ascii_string","type");
x.t("ascii_string","ascii");
x.t("ascii_string","ric/symbol");
x.t("fractional","denominators");
x.t("edition","5.5.2");
x.t("prod_perm","permission");
x.t("file-based","dictionary");
x.t("created","thomson");
x.t("elemententry","names");
x.t("real","real32");
x.t("real","signed");
x.t("real","represent");
x.t("real","date");
x.t("real","real");
x.t("5.5.2.2","field");
x.t("separated","whitespace");
x.t("separated","lines");
x.t("model","representation");
x.t("following","table");
x.t("following","keywords");
x.t("used","marketfeed");
x.t("used","instead");
x.t("used","rdmfielddictionary");
x.t("used","encoding");
x.t("corresponding","field");
x.t("corresponding","datatype");
x.t("caching","length");
x.t("filter_list","filterlist");
x.t("0-65535","binary");
x.t("0-65535","integer");
x.t("------","-------");
x.t("------","------");
x.t("real64","trdprc_2");
x.t("real64","trdprc_3");
x.t("real64","trdprc_4");
x.t("real64","trdprc_5");
x.t("real64","figure");
x.t("real64","real");
x.t("1-255","rmtes_string");
x.t("1-255","length");
x.t("hour","minute");
x.t("rwf","converting");
x.t("rwf","field");
x.t("rwf","type");
x.t("rwf","mappings");
x.t("rwf","element");
x.t("rwf","len");
x.t("rwf","marketfeed");
x.t("rwf","types");
x.t("rwf","data");
x.t("series","xml");
x.t("series","series");
x.t("128","base64");
x.t("decimal","positions");
x.t("rdn_exchid","idn");
x.t("associated","field");
x.t("associated","dictionary");
x.t("names","5.5.2.1");
x.t("names","elemententry");
x.t("names","used");
x.t("versions","become");
x.t("time_seconds","time");
x.t("time_seconds","date");
x.t("unsigned","int");
x.t("uint64","rdndisplay");
x.t("uint64","uint");
x.t("rwf.dat","tag");
x.t("buffer","base64");
x.t("buffer","binary");
x.t("buffer","date");
x.t("buffer","ascii_string");
x.t("buffer","128");
x.t("buffer","buffer");
x.t("elem_list","elementlist");
x.t("elementlist","filter_list");
x.t("trailing","zero");
x.t("trailing","zeros");
x.t("update","null");
x.t("attributes","available");
x.t("attributes","provide");
x.t("attributes","sample");
x.t("attributes","indicates");
x.t("encoding","domain");
x.t("encoding","decoding");
x.t("denominators","trailing");
}
