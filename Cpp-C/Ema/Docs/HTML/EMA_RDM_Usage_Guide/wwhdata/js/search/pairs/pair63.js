function FileData_Pairs(x)
{
x.t("genericmsg","(s)");
x.t("uniquely","identified");
x.t("receives","data");
x.t("receives","service");
x.t("rdm","sending");
x.t("sending","receiving");
x.t("consumerstatus/source","mirroring");
x.t("table","source");
x.t("description","sourcemirroringmode");
x.t("source","directory");
x.t("related","consumerstatus/source");
x.t("key","entry");
x.t("required","indicates");
x.t("activewithstandby","downstream");
x.t("downstream","component");
x.t("downstream","device");
x.t("uses","data");
x.t("uses","service");
x.t("reply","provider");
x.t("mode","directory");
x.t("payload","table");
x.t("payload","elektron");
x.t("payload","note");
x.t("type","range/example");
x.t("default","setting");
x.t("needed","informational");
x.t("element","name");
x.t("activenostandby","downstream");
x.t("status","service");
x.t("indicates","downstream");
x.t("indicates","provider");
x.t("api","edition");
x.t("entry","contains");
x.t("informational","chapter");
x.t("name","type");
x.t("provider","application");
x.t("provider","used");
x.t("component","uses");
x.t("range/example","description");
x.t("generic","message");
x.t("sends","status");
x.t("identified","serviceid");
x.t("map","mapentry");
x.t("receiving","information");
x.t("uint","required");
x.t("device","receives");
x.t("device","uses");
x.t("supported","directory");
x.t("domain","4.3");
x.t("serviceid","key");
x.t("receive","service");
x.t("chapter","source");
x.t("directory","rdm");
x.t("directory","generic");
x.t("directory","domain");
x.t("directory","data");
x.t("directory","consumerstatus");
x.t("message","payload");
x.t("message","api");
x.t("message","map");
x.t("message","mapentry");
x.t("4.3","data");
x.t("figure","source");
x.t("actually","uses");
x.t("elektron","message");
x.t("(s)","supported");
x.t("information","related");
x.t("data","figure");
x.t("data","structure");
x.t("data","service");
x.t("data","4.3.2");
x.t("mapentry","sends");
x.t("mapentry","permission");
x.t("mapentry","elements");
x.t("values","activenostandby");
x.t("application","needed");
x.t("mirroring","mode");
x.t("structure","consumerstatus");
x.t("permission","data");
x.t("note","genericmsg");
x.t("sourcemirroringmode","uint");
x.t("sourcemirroringmode","following");
x.t("consumerstatus","generic");
x.t("consumerstatus","message");
x.t("edition","4.3.2");
x.t("elemententry","indicates");
x.t("service","uniquely");
x.t("service","receives");
x.t("service","activewithstandby");
x.t("service","reply");
x.t("service","default");
x.t("service","receive");
x.t("service","actually");
x.t("service","standby");
x.t("used","mapentry");
x.t("elements","element");
x.t("following","values");
x.t("setting","sourcemirroringmode");
x.t("4.3.2","source");
x.t("standby","downstream");
x.t("elementlist","elemententry");
x.t("contains","elementlist");
}
