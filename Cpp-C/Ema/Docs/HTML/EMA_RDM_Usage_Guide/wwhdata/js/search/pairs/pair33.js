function FileData_Pairs(x)
{
x.t("example","chapter");
x.t("loginstatus","login::loginstatus");
x.t("loginstatus.nametype","requestmsg.getnametype");
x.t("extensive","effort");
x.t("omm","login");
x.t("ommstate::closedenum","ommstate::suspectenum");
x.t("status","domain");
x.t("status","message");
x.t("loginstatus.getmessage","handle");
x.t("api","edition");
x.t("ommstate::suspectenum","ommstate::notfoundenum");
x.t("3.2","usage");
x.t("handle","figure");
x.t("requestmsg.getnametype","requestmsg.hasname");
x.t("loginstatus.state","ommstate::closedenum");
x.t("find","object");
x.t("requestmsg.hasnametype","loginstatus.nametype");
x.t("encoded","omm");
x.t("ommprovider.submit","loginstatus.getmessage");
x.t("representation","domain");
x.t("representation","code");
x.t("representation","login");
x.t("representation","elektron");
x.t("domain","3.2");
x.t("domain","ommprovider.submit");
x.t("domain","representation");
x.t("effort","find");
x.t("chapter","login");
x.t("ommstate::notfoundenum","invalid");
x.t("invalid","domain");
x.t("code","usage");
x.t("return","encoded");
x.t("login","status");
x.t("login","domain");
x.t("login","package");
x.t("message","api");
x.t("message","easy-to-use");
x.t("message","without");
x.t("login::loginstatus","loginstatus");
x.t("login::loginstatus","requestmsg.hasnametype");
x.t("usage","example");
x.t("usage","3.2.9");
x.t("figure","login");
x.t("elektron","message");
x.t("ema\u2019s","login");
x.t("edition","3.2.9");
x.t("package","login::loginstatus");
x.t("loginstatus.name","requestmsg.getname");
x.t("3.2.9","login");
x.t("requestmsg.getname","loginstatus.state");
x.t("easy-to-use","object");
x.t("without","extensive");
x.t("object","return");
x.t("object","ema\u2019s");
x.t("requestmsg.hasname","loginstatus.name");
}
