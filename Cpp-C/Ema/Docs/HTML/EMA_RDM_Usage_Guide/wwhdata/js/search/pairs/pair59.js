function FileData_Pairs(x)
{
x.t("example","provided");
x.t("example","column");
x.t("integers","i.e");
x.t("integers","written");
x.t("filterlist","applied");
x.t("every","item");
x.t("within","group");
x.t("applied","items");
x.t("applied","order");
x.t("applied","merge");
x.t("description","table");
x.t("description","group");
x.t("table","source");
x.t("table","shows");
x.t("currently","matches");
x.t("sending","statusmsg");
x.t("refer","section");
x.t("source","directory");
x.t("required","specifies");
x.t("shows","series");
x.t("ommstate.closedrecover","need");
x.t("provided","range");
x.t("provided","information");
x.t("provided","item\u2019s");
x.t("state","open");
x.t("state","e.g");
x.t("state","value");
x.t("change","applied");
x.t("change","applies");
x.t("change","impacts");
x.t("type","range/example");
x.t("open","refer");
x.t("payload","4.3.1.3");
x.t("2-byte","unsigned");
x.t("multiple","group");
x.t("filterentry","received");
x.t("filterentry","elements");
x.t("i.e","two-byte");
x.t("mergedtogroup","element");
x.t("mergedtogroup","status");
x.t("mergedtogroup","buffer");
x.t("default","behavior");
x.t("text","code");
x.t("items","within");
x.t("items","whose");
x.t("single","filterlist");
x.t("single","group");
x.t("element","change");
x.t("element","specified");
x.t("element","name");
x.t("element","equivalent");
x.t("conveys","item");
x.t("1.26.110","changes");
x.t("status","state");
x.t("status","change");
x.t("status","text");
x.t("status","message");
x.t("status","item");
x.t("need","provided");
x.t("need","convey");
x.t("group","currently");
x.t("group","filterentry");
x.t("group","single");
x.t("group","element");
x.t("group","status");
x.t("group","filter");
x.t("group","handling");
x.t("group","defined");
x.t("group","merge");
x.t("group","buffer");
x.t("filter","entry");
x.t("entry","group");
x.t("entry","service_group_filter");
x.t("entry","elektron");
x.t("api","edition");
x.t("guide","multiple");
x.t("applies","item");
x.t("datastate::nochangeenum","present");
x.t("directly","next");
x.t("specified","mergedtogroup");
x.t("name","type");
x.t("range","example");
x.t("streamstate","allowed");
x.t("range/example","description");
x.t("developers","guide");
x.t("indicate","two-byte");
x.t("explained","element\u2019s");
x.t("encoded","buffer");
x.t("datastate::okenum","statuscode::noneenum");
x.t("stream","associated");
x.t("present","message");
x.t("equivalent","sending");
x.t("two-byte","value");
x.t("two-byte","unsigned");
x.t("next","buffer");
x.t("refresh","status");
x.t("refresh","update");
x.t("allowed","ommstate.open");
x.t("domain","4.3");
x.t("service_group_id","conveys");
x.t("written","directly");
x.t("service_group_filter","service_group_id");
x.t("dots","mergedtogroup");
x.t("dots","help");
x.t("specifies","itemgroup");
x.t("chapter","source");
x.t("directory","group");
x.t("directory","refresh");
x.t("directory","domain");
x.t("handling","message");
x.t("changes","items");
x.t("section","4.4.4.2");
x.t("code","information");
x.t("message","mergedtogroup");
x.t("message","need");
x.t("message","api");
x.t("matches","group");
x.t("kind","change");
x.t("e.g","1.26.110");
x.t("e.g","1.26.102");
x.t("e.g","streamstate::openenum");
x.t("whose","group");
x.t("whose","itemgroup");
x.t("changing","data");
x.t("1.26.102","required");
x.t("include","dots");
x.t("convey","group");
x.t("represented","series");
x.t("value","datastate::nochangeenum");
x.t("value","encoded");
x.t("4.3","data");
x.t("refreshmsg","statusmsg");
x.t("element\u2019s","description");
x.t("elektron","message");
x.t("4.4.4.2","chapter");
x.t("impacts","items");
x.t("help","indicate");
x.t("information","every");
x.t("information","associated");
x.t("information","without");
x.t("information","item");
x.t("inserted","dots");
x.t("ommstate.open","ommstate.closedrecover");
x.t("data","state");
x.t("data","4.3.1");
x.t("defined","itemgroup");
x.t("received","default");
x.t("received","single");
x.t("received","refresh");
x.t("4.3.1.3","source");
x.t("column","table");
x.t("item\u2019s","refreshmsg");
x.t("typically","represented");
x.t("edition","developers");
x.t("edition","4.3.1.3");
x.t("merge","change");
x.t("merge","information");
x.t("order","received");
x.t("streamstate::openenum","datastate::okenum");
x.t("statuscode::noneenum","status");
x.t("elements","element");
x.t("statusmsg","kind");
x.t("statusmsg","item");
x.t("series","2-byte");
x.t("series","inserted");
x.t("associated","typically");
x.t("associated","item");
x.t("itemgroup","provided");
x.t("itemgroup","matches");
x.t("itemgroup","information");
x.t("behavior","explained");
x.t("without","changing");
x.t("4.3.1","source");
x.t("unsigned","integers");
x.t("buffer","example");
x.t("buffer","e.g");
x.t("buffer","include");
x.t("item","group");
x.t("item","streamstate");
x.t("item","stream");
x.t("item","streams");
x.t("streams","received");
x.t("update","payload");
}
