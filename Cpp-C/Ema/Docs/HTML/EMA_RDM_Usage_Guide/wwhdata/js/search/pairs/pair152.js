function FileData_Pairs(x)
{
x.t("complex","types");
x.t("available","information");
x.t("available","values");
x.t("instrument_name_ric","name");
x.t("every","refresh");
x.t("clear","cache");
x.t("within","stream");
x.t("currently","available");
x.t("currently","blank");
x.t("table","yield");
x.t("description","value");
x.t("user-specified","item-level");
x.t("refer","section");
x.t("omm","provider");
x.t("omm","non-interactive");
x.t("required","associates");
x.t("required","includes");
x.t("required","indicates");
x.t("required","specifies");
x.t("required","match");
x.t("required","mmt_yield_curve");
x.t("required","consist");
x.t("clearcache","true");
x.t("qos","stream");
x.t("qos","optional");
x.t("blank","responding");
x.t("solicited","available");
x.t("solicited","required");
x.t("solicited","false");
x.t("conditional","donotcache");
x.t("cache","complete");
x.t("cache","refresh");
x.t("curve","refresh");
x.t("curve","domain");
x.t("provided","every");
x.t("provided","seqnum");
x.t("state","required");
x.t("state","stream");
x.t("payload","required");
x.t("payload","include");
x.t("providing","item");
x.t("response","message");
x.t("associates","item");
x.t("vector","array");
x.t("however","msgkeyinupdates");
x.t("donotcache","true");
x.t("updates","even");
x.t("new","fields");
x.t("new","currently-present");
x.t("includes","state");
x.t("nametype","specified");
x.t("nametype","defaults");
x.t("nametype","optional");
x.t("indicates","whether");
x.t("indicates","message");
x.t("indicates","application");
x.t("item-level","sequence");
x.t("proper","handling");
x.t("responding","view");
x.t("complete","true");
x.t("group","refer");
x.t("api","edition");
x.t("requested","specified");
x.t("requested","name");
x.t("filter","used");
x.t("false","message");
x.t("specified","nametype");
x.t("specified","request");
x.t("specified","view");
x.t("true","indicates");
x.t("true","name");
x.t("true","message");
x.t("defaults","instrument_name_ric");
x.t("name","required");
x.t("name","filter");
x.t("name","service");
x.t("name","servicename");
x.t("10.2","usage");
x.t("provider","omm");
x.t("provider","wishes");
x.t("provider","send");
x.t("provider","applications");
x.t("wishes","send");
x.t("component","description");
x.t("part","number");
x.t("multi-part","refresh");
x.t("permissiondata","optional");
x.t("fieldlist","payload");
x.t("fieldlist","containing");
x.t("provides","item");
x.t("sends","currently");
x.t("encoded","using");
x.t("final","refresh");
x.t("extendedheader","used");
x.t("fields","currently");
x.t("fields","requested");
x.t("fields","present");
x.t("fields","first");
x.t("fields","note");
x.t("fields","associated");
x.t("array","encoding");
x.t("contain","fields");
x.t("stream","provided");
x.t("stream","extendedheader");
x.t("stream","data");
x.t("stream","itemgroup");
x.t("present","subsequent");
x.t("request","specified");
x.t("request","refresh");
x.t("refresh","qos");
x.t("refresh","solicited");
x.t("refresh","response");
x.t("refresh","new");
x.t("refresh","contain");
x.t("refresh","message");
x.t("refresh","partnum");
x.t("reason","provider");
x.t("first","refresh");
x.t("first","send");
x.t("messages","within");
x.t("domain","10.2");
x.t("msgkeyinupdates","true");
x.t("number","multi-part");
x.t("number","used");
x.t("decoding","applications");
x.t("serviceid","required");
x.t("serviceid","service");
x.t("whether","refresh");
x.t("specifies","qos");
x.t("specifies","name");
x.t("specifies","part");
x.t("specifies","permission");
x.t("specifies","service");
x.t("chapter","yield");
x.t("aware","ensure");
x.t("10.2.2","yield");
x.t("seqnum","optional");
x.t("section","4.3.1.3");
x.t("match","nametype");
x.t("match","requested");
x.t("types","vector");
x.t("types","chapter");
x.t("handling","types");
x.t("identifier","used");
x.t("consumer","fieldlist");
x.t("message","table");
x.t("message","clearcache");
x.t("message","solicited");
x.t("message","however");
x.t("message","api");
x.t("message","component");
x.t("message","sends");
x.t("message","encoded");
x.t("message","final");
x.t("message","yield");
x.t("message","elektron");
x.t("message","unsolicited");
x.t("currently-present","fields");
x.t("domaintype","required");
x.t("ensure","proper");
x.t("yield","curve");
x.t("include","fields");
x.t("value","domaintype");
x.t("usage","10.2.2");
x.t("refreshmsg","sent");
x.t("send","new");
x.t("send","name");
x.t("send","unsolicited");
x.t("view","request");
x.t("view","reason");
x.t("partnum","optional");
x.t("elektron","message");
x.t("sequence","number");
x.t("information","associated");
x.t("information","item");
x.t("data","solicited");
x.t("optional","user-specified");
x.t("optional","specifies");
x.t("optional","match");
x.t("mmt_yield_curve","state");
x.t("values","true");
x.t("application","clear");
x.t("application","cache");
x.t("application","either");
x.t("application","sequencing");
x.t("4.3.1.3","permissiondata");
x.t("permission","information");
x.t("note","provider");
x.t("note","application");
x.t("applications","aware");
x.t("applications","message");
x.t("edition","10.2.2");
x.t("indications","conditional");
x.t("used","payload");
x.t("used","identifier");
x.t("used","application");
x.t("used","servicename");
x.t("used","attrib");
x.t("service","providing");
x.t("service","nametype");
x.t("service","provides");
x.t("service","serviceid");
x.t("either","servicename");
x.t("using","refreshmsg");
x.t("sequencing","messages");
x.t("containing","fields");
x.t("fieldentry","sent");
x.t("subsequent","updates");
x.t("unsolicited","refresh");
x.t("unsolicited","indications");
x.t("itemgroup","required");
x.t("associated","content");
x.t("associated","item");
x.t("sent","complex");
x.t("sent","omm");
x.t("non-interactive","provider");
x.t("even","fields");
x.t("servicename","required");
x.t("servicename","provided");
x.t("servicename","first");
x.t("servicename","serviceid");
x.t("attrib","used");
x.t("item","group");
x.t("item","consumer");
x.t("item","note");
x.t("item","fieldentry");
x.t("item","item");
x.t("content","stream");
x.t("consist","fieldlist");
x.t("encoding","decoding");
}
