function FileData_Pairs(x)
{
x.t("instrument_name_ric","name");
x.t("every","update");
x.t("clear","cache");
x.t("description","value");
x.t("user-specified","item-level");
x.t("sending","conflated");
x.t("table","marketprice");
x.t("omm","provider");
x.t("omm","non-interactive");
x.t("required","indicates");
x.t("required","mmt_market_price");
x.t("required","msgkeyinupdates");
x.t("required","donotripple");
x.t("required","consist");
x.t("instrument_update_market_digest=8","instrument_update_quotes_trade=9");
x.t("6.2.3","marketprice");
x.t("clearcache","true");
x.t("qos","optional");
x.t("cache","donotconflate");
x.t("cache","update");
x.t("provided","every");
x.t("provided","servicename");
x.t("instrument_update_news_alert=3","instrument_update_volume_alert=4");
x.t("times","interval");
x.t("type","specified");
x.t("payload","required");
x.t("response","messages");
x.t("response","message");
x.t("however","msgkeyinupdates");
x.t("donotcache","true");
x.t("donotconflate","true");
x.t("updatemsg","sent");
x.t("instrument_update_quote=1","instrument_update_trade=2");
x.t("instrument_update_correction=7","instrument_update_market_digest=8");
x.t("instrument_update_correction=7","instrument_update_verify=11");
x.t("updates","qos");
x.t("updates","conflation");
x.t("contents","update");
x.t("conveys","changes");
x.t("nametype","provided");
x.t("nametype","defaults");
x.t("nametype","first");
x.t("nametype","optional");
x.t("permissioning","information");
x.t("indicates","interest");
x.t("indicates","application");
x.t("indicates","general");
x.t("item-level","sequence");
x.t("api","edition");
x.t("true","indicates");
x.t("true","name");
x.t("true","request");
x.t("true","match");
x.t("true","updatetypenum");
x.t("true","service");
x.t("specified","nametype");
x.t("specified","request");
x.t("defaults","instrument_name_ric");
x.t("name","type");
x.t("name","nametype");
x.t("name","optional");
x.t("name","service");
x.t("name","item");
x.t("instrument_update_verify=11","optional");
x.t("instrument_update_verify=11","indications");
x.t("changed","data");
x.t("provider","sending");
x.t("provider","omm");
x.t("provider","send");
x.t("provider","application");
x.t("provider","applications");
x.t("component","description");
x.t("mmt_market_price","updatetypenum");
x.t("permissiondata","optional");
x.t("conflate","updates");
x.t("provides","data");
x.t("fieldlist","changed");
x.t("conflatedcount","optional");
x.t("encoded","using");
x.t("stream","conflatedcount");
x.t("conflated","consumer");
x.t("conflated","update");
x.t("instrument_update_order_indication=5","instrument_update_closing_run=6");
x.t("request","specified");
x.t("request","conflatedtime");
x.t("request","itemgroup");
x.t("instrument_update_volume_alert=4","instrument_update_order_indication=5");
x.t("refresh","response");
x.t("first","refresh");
x.t("messages","component");
x.t("messages","stream");
x.t("domain","usage");
x.t("msgkeyinupdates","true");
x.t("number","used");
x.t("reqmsg.conflatedinupdates","true");
x.t("serviceid","optional");
x.t("serviceid","service");
x.t("chapter","marketprice");
x.t("changes","item\u2019s");
x.t("seqnum","optional");
x.t("match","name");
x.t("informs","consumer");
x.t("interest","information");
x.t("conflatedtime","optional");
x.t("donotripple","true");
x.t("consumer","times");
x.t("consumer","updates");
x.t("consumer","indicates");
x.t("message","clearcache");
x.t("message","however");
x.t("message","api");
x.t("message","encoded");
x.t("message","chapter");
x.t("message","marketprice");
x.t("message","elektron");
x.t("updatetypenum","required");
x.t("updatetypenum","instrument_update_correction=7");
x.t("domaintype","required");
x.t("marketprice","domain");
x.t("marketprice","update");
x.t("value","domaintype");
x.t("instrument_update_trade=2","instrument_update_news_alert=3");
x.t("interval","milliseconds");
x.t("usage","marketprice");
x.t("send","name");
x.t("elektron","message");
x.t("instrument_update_closing_run=6","instrument_update_correction=7");
x.t("instrument_update_multiple=10","instrument_update_verify=11");
x.t("sequence","number");
x.t("data","table");
x.t("data","conflated");
x.t("data","note");
x.t("optional","user-specified");
x.t("optional","required");
x.t("optional","donotcache");
x.t("optional","permissioning");
x.t("optional","provider");
x.t("optional","permissiondata");
x.t("optional","seqnum");
x.t("information","setting");
x.t("information","associated");
x.t("application","clear");
x.t("application","cache");
x.t("application","conflate");
x.t("application","either");
x.t("application","sequencing");
x.t("conflation","consumer");
x.t("notifies","consumer");
x.t("note","provider");
x.t("milliseconds","data");
x.t("applications","conveys");
x.t("item\u2019s","data");
x.t("edition","6.2.3");
x.t("indications","required");
x.t("used","application");
x.t("service","payload");
x.t("service","provides");
x.t("service","serviceid");
x.t("either","servicename");
x.t("using","updatemsg");
x.t("general","content");
x.t("instrument_update_unspecified=0","instrument_update_quote=1");
x.t("sequencing","messages");
x.t("setting","reqmsg.conflatedinupdates");
x.t("instrument_update_quotes_trade=9","instrument_update_multiple=10");
x.t("itemgroup","optional");
x.t("associated","contents");
x.t("sent","omm");
x.t("non-interactive","provider");
x.t("servicename","serviceid");
x.t("servicename","optional");
x.t("update","response");
x.t("update","nametype");
x.t("update","informs");
x.t("update","message");
x.t("update","notifies");
x.t("update","instrument_update_unspecified=0");
x.t("content","update");
x.t("item","provided");
x.t("consist","fieldlist");
}
