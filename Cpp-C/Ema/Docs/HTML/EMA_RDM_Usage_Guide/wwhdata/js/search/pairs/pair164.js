function FileData_Pairs(x)
{
x.t("instrument_name_ric","name");
x.t("instrument_name_ric","absent");
x.t("every","update");
x.t("within","stream");
x.t("table","symbol");
x.t("description","value");
x.t("user-specified","item-level");
x.t("omm","provider");
x.t("omm","non-interactive");
x.t("required","payload");
x.t("required","mmt_symbol_list");
x.t("required","msgkeyinupdates");
x.t("qos","optional");
x.t("snapshot","supported");
x.t("conditional","donotcache");
x.t("conditional","nametype");
x.t("conditional","name");
x.t("conditional","serviceid");
x.t("conditional","servicename");
x.t("cache","update");
x.t("provided","every");
x.t("provided","filter");
x.t("provided","updatetypenum");
x.t("payload","required");
x.t("payload","contains");
x.t("response","message");
x.t("time","interval");
x.t("however","msgkeyinupdates");
x.t("donotcache","true");
x.t("donotconflate","true");
x.t("removes","items");
x.t("updatemsg","sent");
x.t("items","list");
x.t("updates","received");
x.t("updates","conflation");
x.t("contents","update");
x.t("nametype","required");
x.t("nametype","conditional");
x.t("nametype","item\u2019s");
x.t("list","updates");
x.t("list","map");
x.t("list","domain");
x.t("list","update");
x.t("indicates","cache");
x.t("indicates","conflate");
x.t("indicates","interest");
x.t("item-level","sequence");
x.t("api","edition");
x.t("images","true");
x.t("filter","used");
x.t("entry","represents");
x.t("entry","contains");
x.t("true","snapshot");
x.t("true","indicates");
x.t("true","name");
x.t("true","request");
x.t("true","specifies");
x.t("true","match");
x.t("true","servicename");
x.t("name","required");
x.t("name","conditional");
x.t("name","service");
x.t("name","servicename");
x.t("name","item");
x.t("11.2.3","symbol");
x.t("provider","omm");
x.t("provider","sends");
x.t("provider","send");
x.t("provider","application");
x.t("provider","applications");
x.t("component","description");
x.t("permissiondata","optional");
x.t("conflate","update");
x.t("provides","data");
x.t("fieldlist","additional");
x.t("conflatedcount","specifies");
x.t("conflatedcount","optional");
x.t("sends","conflated");
x.t("encoded","using");
x.t("extendedheader","used");
x.t("map","entry");
x.t("stream","provided");
x.t("stream","conflatedcount");
x.t("conflated","consumer");
x.t("conflated","update");
x.t("quality","service");
x.t("request","permissiondata");
x.t("request","conflatedtime");
x.t("request","message");
x.t("supported","note");
x.t("mmt_symbol_list","indications");
x.t("refresh","response");
x.t("first","refresh");
x.t("messages","within");
x.t("domain","11.2");
x.t("msgkeyinupdates","true");
x.t("number","used");
x.t("reqmsg.conflatedinupdates","true");
x.t("serviceid","required");
x.t("serviceid","conditional");
x.t("serviceid","service");
x.t("specifies","time");
x.t("specifies","updates");
x.t("specifies","name");
x.t("specifies","quality");
x.t("specifies","permission");
x.t("specifies","service");
x.t("represents","item");
x.t("chapter","symbol");
x.t("seqnum","optional");
x.t("match","nametype");
x.t("interest","information");
x.t("conflatedtime","specifies");
x.t("conflatedtime","optional");
x.t("identifier","used");
x.t("adds","removes");
x.t("consumer","indicates");
x.t("message","table");
x.t("message","qos");
x.t("message","however");
x.t("message","donotconflate");
x.t("message","api");
x.t("message","component");
x.t("message","encoded");
x.t("message","elektron");
x.t("message","typically");
x.t("message","symbol");
x.t("updatetypenum","used");
x.t("domaintype","required");
x.t("value","domaintype");
x.t("interval","milliseconds");
x.t("additional","information");
x.t("usage","11.2.3");
x.t("send","name");
x.t("11.2","usage");
x.t("elektron","message");
x.t("sequence","number");
x.t("optional","user-specified");
x.t("optional","provider");
x.t("optional","specifies");
x.t("information","setting");
x.t("information","associated");
x.t("information","item");
x.t("data","conflated");
x.t("data","note");
x.t("received","images");
x.t("application","either");
x.t("application","sequencing");
x.t("conflation","consumer");
x.t("permission","information");
x.t("absent","assumed");
x.t("note","provider");
x.t("milliseconds","data");
x.t("applications","adds");
x.t("item\u2019s","request");
x.t("typically","instrument_name_ric");
x.t("edition","11.2.3");
x.t("indications","conditional");
x.t("service","nametype");
x.t("service","provides");
x.t("service","stream");
x.t("service","serviceid");
x.t("used","payload");
x.t("used","seqnum");
x.t("used","identifier");
x.t("used","application");
x.t("used","servicename");
x.t("used","attrib");
x.t("either","servicename");
x.t("symbol","list");
x.t("using","updatemsg");
x.t("sequencing","messages");
x.t("setting","reqmsg.conflatedinupdates");
x.t("associated","contents");
x.t("sent","omm");
x.t("non-interactive","provider");
x.t("servicename","required");
x.t("servicename","conditional");
x.t("servicename","provided");
x.t("servicename","first");
x.t("servicename","serviceid");
x.t("servicename","specifies");
x.t("assumed","instrument_name_ric");
x.t("attrib","used");
x.t("update","response");
x.t("update","conflatedcount");
x.t("update","extendedheader");
x.t("update","conflatedtime");
x.t("update","message");
x.t("item","provided");
x.t("item","list");
x.t("item","chapter");
x.t("contains","fieldlist");
x.t("contains","map");
}
