function FileData_Pairs(x)
{
x.t("included","element\u2019s");
x.t("appendix","reqmsg");
x.t("available","values");
x.t("rdm","user");
x.t(":viewtype","uint");
x.t(":viewtype","e.g");
x.t(":viewtype","vt_field_id_list");
x.t("refer","message");
x.t("description",":viewtype");
x.t("description","table");
x.t("table","view");
x.t("required","field");
x.t("required","specifying");
x.t("required","re-issuing");
x.t("reissuing","wanting");
x.t("keep","view");
x.t("ability","provider");
x.t("user","defined");
x.t("conditional","specifies");
x.t("uses","array");
x.t("field","identifiers");
x.t("field","ids");
x.t("supply","requested");
x.t("payload","response");
x.t("payload","element");
x.t("payload","a.1");
x.t("payload","view");
x.t("payload","elektron");
x.t("payload","contains");
x.t("type","specified");
x.t("type","range/examples");
x.t("type",":viewdata");
x.t("response","message");
x.t("default","vt_element_name_list");
x.t("default","value");
x.t("default","behavior");
x.t("new","view");
x.t("element","list");
x.t("element","name");
x.t("element","names");
x.t("a.1","view");
x.t("list","requested");
x.t("list","following");
x.t("non-administrative","rdm");
x.t("api","edition");
x.t("requested","fields");
x.t("requested","view");
x.t("unless","otherwise");
x.t("guide","requesting");
x.t("remove","view");
x.t("desired","fields");
x.t("desired","entries");
x.t("specified",":viewtype");
x.t("specified","supported");
x.t("byte","fixed");
x.t("definition","payload");
x.t("definition","client");
x.t("possibly","others");
x.t("name","type");
x.t("identifiers","element");
x.t("provider","supply");
x.t("requesting","new");
x.t("developers","guide");
x.t("ascii","array");
x.t("ascii","string");
x.t("encoded","array");
x.t("fields",":viewdata");
x.t("fields","elements");
x.t("array","required");
x.t("array","field");
x.t("array","desired");
x.t("array","byte");
x.t("array","ascii");
x.t("array","int");
x.t("int","array");
x.t("string","fields");
x.t("contain","list");
x.t("aggregation","ability");
x.t("uint","conditional");
x.t("request","message");
x.t("supported","non-administrative");
x.t("vt_element_name_list",":viewdata");
x.t("minimum","request");
x.t("fixed","length");
x.t("others","depending");
x.t("length","field");
x.t("length","ascii");
x.t("specifies","content");
x.t("wanting","keep");
x.t("interest","specific");
x.t("factors","aggregation");
x.t("reqmsg","payload");
x.t("client","application");
x.t("ids","required");
x.t("ids","encoded");
x.t("message","payload");
x.t("message","api");
x.t("message","contain");
x.t("known","view");
x.t("matches","type");
x.t("whose","content");
x.t("e.g",":viewtype");
x.t("variable","length");
x.t("changing","view");
x.t("range/examples","description");
x.t(":viewdata","default");
x.t(":viewdata","array");
x.t("value","appendix");
x.t("specific","subset");
x.t("depending","factors");
x.t("element\u2019s","description");
x.t("send","payload");
x.t("view","available");
x.t("view","reissuing");
x.t("view","required");
x.t("view","unless");
x.t("view","definition");
x.t("view","minimum");
x.t("view","changing");
x.t("view","case");
x.t("view","done");
x.t("elektron","message");
x.t("specifying","view");
x.t("dmm","information");
x.t("information","refer");
x.t("defined","dmm");
x.t("application","specify");
x.t("case","send");
x.t("values","vt_field_id_list");
x.t("subset","fields");
x.t("done","encoding");
x.t("otherwise","specified");
x.t("edition","appendix");
x.t("edition","developers");
x.t("elements","possibly");
x.t("elements","request");
x.t("elements","known");
x.t("following","entries");
x.t("re-issuing","remove");
x.t("behavior","included");
x.t("vt_field_id_list","uses");
x.t("vt_field_id_list","default");
x.t("names","variable");
x.t("entries","default");
x.t("entries","whose");
x.t("specify","interest");
x.t("encoding","array");
x.t("contains","element");
x.t("content","type");
x.t("content","matches");
}
