function FileData_Pairs(x)
{
x.t("example","description");
x.t("serves","primary");
x.t("active","server");
x.t("possible","elements");
x.t("formatted","sorted");
x.t("least-loaded","provider");
x.t("description","numstandbyservers");
x.t("description","hostname");
x.t("table","vector");
x.t("table","elementlist");
x.t("describes","load");
x.t("related","information");
x.t("required","range");
x.t("thi","provider");
x.t("providers","list");
x.t("providers","ads");
x.t("providers","expected");
x.t("providers","consumer");
x.t("providers","along");
x.t("components","extended");
x.t("summary","data");
x.t("traverse","list");
x.t("support","warm");
x.t("payload","present");
x.t("payload","refresh");
x.t("payload","login");
x.t("type","default");
x.t("type","vectorentry");
x.t("best","worst");
x.t("3.3.1","login");
x.t("vector","type");
x.t("vector","entry");
x.t("vector","summarydata");
x.t("vector","expected");
x.t("connection","i.e");
x.t("connection","configuration");
x.t("connection","information");
x.t("connection","load");
x.t("i.e","downloadconnectionconfig");
x.t("i.e","warm");
x.t("multiple","providers");
x.t("default","required");
x.t("details","respond");
x.t("element","name");
x.t("servers","client");
x.t("contents","chapter");
x.t("contents","vectorentry");
x.t("single","provider");
x.t("worst","choice");
x.t("choice","figure");
x.t("provider\u2019s","address");
x.t("provider\u2019s","port");
x.t("list","providers");
x.t("list","follows");
x.t("list","find");
x.t("list","describing");
x.t("list","sorted");
x.t("need","traverse");
x.t("api","edition");
x.t("downloadconnectionconfig","provider");
x.t("entry","contains");
x.t("supplying","details");
x.t("loadfactor","uint");
x.t("3.3","data");
x.t("potential","provider\u2019s");
x.t("functionality","connect");
x.t("name","type");
x.t("range","example");
x.t("follows","name");
x.t("provider","possible");
x.t("provider","summary");
x.t("provider","servertype");
x.t("provider","expected");
x.t("provider","connected");
x.t("provider","least");
x.t("provider","capable");
x.t("14002","potential");
x.t("useful","load");
x.t("none","payload");
x.t("none","future");
x.t("none","maxint");
x.t("summarydata","elementlist");
x.t("65535","loaded");
x.t("65535","0-65535");
x.t("ascii","none");
x.t("loaded","vector");
x.t("loaded","65535");
x.t("loaded","first");
x.t("find","least");
x.t("servertype","uint");
x.t("address","hostname");
x.t("warm","standby");
x.t("numstandbyservers","uint");
x.t("uint","none");
x.t("uint","65535");
x.t("uint","(standby)");
x.t("contain","elementlist");
x.t("request","message");
x.t("present","summary");
x.t("present","14002");
x.t("present","myhostname");
x.t("refresh","section");
x.t("refresh","message");
x.t("respond","extended");
x.t("ads","components");
x.t("attempted","table");
x.t("first","vectorentry");
x.t("domain","data");
x.t("number","loadfactor");
x.t("number","standby");
x.t("myhostname","192.168.1.100");
x.t("asks","connection");
x.t("(standby)","providers");
x.t("(standby)","(active)");
x.t("systemid","ascii");
x.t("balancing","connections");
x.t("chapter","login");
x.t("section","2.3");
x.t("expected","support");
x.t("expected","sorted");
x.t("expected","used");
x.t("expected","behavior");
x.t("describing","least-loaded");
x.t("describing","single");
x.t("client","connect");
x.t("connected","serves");
x.t("hostname","ascii");
x.t("hostname","port");
x.t("consumer","need");
x.t("consumer","expected");
x.t("consumer","connect");
x.t("primary","connection");
x.t("message","payload");
x.t("message","api");
x.t("message","asks");
x.t("message","information");
x.t("login","request");
x.t("login","refresh");
x.t("login","domain");
x.t("extended","connection");
x.t("sorted","vector");
x.t("sorted","consumer");
x.t("sorted","order");
x.t("least","loaded");
x.t("192.168.1.100","potential");
x.t("configuration","information");
x.t("value","number");
x.t("value","non-zero");
x.t("specific","provider");
x.t("figure","login");
x.t("connections","across");
x.t("elektron","message");
x.t("capable","supplying");
x.t("along","connection");
x.t("(active)","(standby)");
x.t("data","3.3.1");
x.t("data","specific");
x.t("data","elektron");
x.t("data","elementlist");
x.t("information","formatted");
x.t("information","payload");
x.t("information","i.e");
x.t("information","useful");
x.t("information","number");
x.t("information","contains");
x.t("employed","provider");
x.t("future","table");
x.t("future","systemid");
x.t("values","future");
x.t("maxint","value");
x.t("port","uint");
x.t("port","number");
x.t("edition","3.3");
x.t("non-zero","consumer");
x.t("order","best");
x.t("vectorentry","contain");
x.t("vectorentry","contains");
x.t("following","element");
x.t("elements","list");
x.t("0-65535","describes");
x.t("used","active");
x.t("used","standby");
x.t("connect","multiple");
x.t("connect","provider");
x.t("connect","value");
x.t("2.3","message");
x.t("across","multiple");
x.t("load","related");
x.t("load","provider");
x.t("load","balancing");
x.t("behavior","warm");
x.t("standby","providers");
x.t("standby","servers");
x.t("standby","functionality");
x.t("standby","attempted");
x.t("standby","employed");
x.t("standby","server");
x.t("elementlist","vector");
x.t("elementlist","contents");
x.t("elementlist","list");
x.t("elementlist","describing");
x.t("elementlist","contains");
x.t("contains","list");
x.t("contains","data");
x.t("contains","information");
x.t("contains","following");
x.t("contains","elementlist");
x.t("server","thi");
x.t("server","values");
}
