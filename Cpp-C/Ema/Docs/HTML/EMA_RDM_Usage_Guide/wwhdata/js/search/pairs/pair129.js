function FileData_Pairs(x)
{
x.t("supports","functionality");
x.t("instrument_name_ric","name");
x.t("instrument_name_ric","reuters");
x.t("3.0.4","edition");
x.t("refer","ema");
x.t("description","value");
x.t("table","marketmaker");
x.t("omm","consumer");
x.t("required","batch");
x.t("required","interestafterrefresh");
x.t("required","initialimage");
x.t("required","name");
x.t("required","pause");
x.t("required","mmt_market_maker");
x.t("required","indications");
x.t("required","associated");
x.t("flag","consumer");
x.t("parts","consumer");
x.t("qos","optional");
x.t("snapshot","refresh");
x.t("batch","leveraged");
x.t("batch","view");
x.t("batch","item");
x.t("payload","qos");
x.t("payload","contain");
x.t("payload","optional");
x.t("interestafterrefresh","true");
x.t("reqmsg.interestafterrefresh","true");
x.t("multiple","parts");
x.t("count","associated");
x.t("updates","required");
x.t("updates","provider");
x.t("updates","may");
x.t("want","stream");
x.t("nametype","defaults");
x.t("nametype","optional");
x.t("indicates","conflated");
x.t("indicates","quality");
x.t("indicates","pause");
x.t("indicates","initial");
x.t("indicates","streaming");
x.t("indicates","class");
x.t("initialimage","true");
x.t("api","edition");
x.t("guide","component");
x.t("requested","item");
x.t("features","view");
x.t("true","flag");
x.t("true","indicates");
x.t("specified","payload");
x.t("specified","nametype");
x.t("defaults","instrument_name_ric");
x.t("name","required");
x.t("name","requested");
x.t("name","associated");
x.t("name","item");
x.t("functionality","information");
x.t("stop","updates");
x.t("wishes","request");
x.t("wishes","receive");
x.t("requesting","snapshot");
x.t("provider","supports");
x.t("component","description");
x.t("leveraged","payload");
x.t("9.2.1","marketmaker");
x.t("developers","guide");
x.t("encoded","using");
x.t("conflated","updates");
x.t("stream","serviced");
x.t("stream","priority");
x.t("contain","information");
x.t("request","required");
x.t("request","updates");
x.t("request","specified");
x.t("request","specifies");
x.t("request","message");
x.t("request","setting");
x.t("request","servicename");
x.t("request","item");
x.t("quality","service");
x.t("pause","required");
x.t("pause","true");
x.t("pause","item");
x.t("reuters","sources");
x.t("reuters","instrument");
x.t("refresh","multiple");
x.t("refresh","end");
x.t("mmt_market_maker","interactions");
x.t("feature","detailed");
x.t("domain","usage");
x.t("serviced","priority");
x.t("serviceid","required");
x.t("serviceid","service");
x.t("serviceid","servicename");
x.t("specifies","name");
x.t("receive","updates");
x.t("may","received");
x.t("may","streaming");
x.t("chapter","table");
x.t("chapter","marketmaker");
x.t("detailed","information");
x.t("initial","image");
x.t("reqmsg","sent");
x.t("end","request");
x.t("interactions","required");
x.t("code","specified");
x.t("consumer","want");
x.t("consumer","wishes");
x.t("consumer","requesting");
x.t("consumer","send");
x.t("consumer","interested");
x.t("consumer","application");
x.t("consumer","applications");
x.t("thomson","reuters");
x.t("message","api");
x.t("message","encoded");
x.t("message","chapter");
x.t("message","elektron");
x.t("message","marketmaker");
x.t("domaintype","required");
x.t("sources","typically");
x.t("value","domaintype");
x.t("usage","marketmaker");
x.t("send","pause");
x.t("view","batch");
x.t("view","request");
x.t("view","chapter");
x.t("elektron","message");
x.t("information","refer");
x.t("information","view");
x.t("information","relevant");
x.t("optional","indicates");
x.t("optional","features");
x.t("optional","conflatedinupdates");
x.t("optional","consuming");
x.t("interested","consumer");
x.t("received","either");
x.t("image","required");
x.t("marketmaker","request");
x.t("marketmaker","domain");
x.t("case","refresh");
x.t("application","either");
x.t("instrument","code");
x.t("priority","nametype");
x.t("priority","optional");
x.t("note","consumer");
x.t("note","used");
x.t("applications","request");
x.t("typically","instrument_name_ric");
x.t("edition","9.2.1");
x.t("edition","developers");
x.t("either","serviceid");
x.t("either","case");
x.t("either","servicename");
x.t("indications","optional");
x.t("conflatedinupdates","true");
x.t("service","payload");
x.t("service","serviceid");
x.t("service","consumer");
x.t("used","batch");
x.t("relevant","feature");
x.t("using","reqmsg");
x.t("streaming","request");
x.t("setting","reqmsg.interestafterrefresh");
x.t("class","count");
x.t("associated","stream");
x.t("associated","service");
x.t("sent","omm");
x.t("servicename","required");
x.t("servicename","serviceid");
x.t("servicename","service");
x.t("item","stop");
x.t("item","request");
x.t("item","consumer");
x.t("item","note");
x.t("ema","3.0.4");
x.t("consuming","thomson");
}
