function FileData_Pairs(x)
{
x.t("included","conflation");
x.t("instrument_name_ric","name");
x.t("every","update");
x.t("within","stream");
x.t("table","market");
x.t("description","value");
x.t("user-specified","item-level");
x.t("omm","interactive");
x.t("omm","non-interactive");
x.t("required","indicates");
x.t("required","msgkeyinupdates");
x.t("required","marketbyprice");
x.t("required","mmt_market_by_price");
x.t("flag","request");
x.t("qos","stream");
x.t("qos","optional");
x.t("cache","update");
x.t("conditional","nametype");
x.t("conditional","name");
x.t("conditional","serviceid");
x.t("conditional","servicename");
x.t("uses","default");
x.t("provided","every");
x.t("provided","filter");
x.t("provided","seqnum");
x.t("providing","data");
x.t("payload","required");
x.t("response","message");
x.t("time","interval");
x.t("however","msgkeyinupdates");
x.t("donotcache","true");
x.t("donotconflate","true");
x.t("default","instrument_name_ric");
x.t("updatemsg","sent");
x.t("updates","included");
x.t("updates","received");
x.t("price","point");
x.t("price","domain");
x.t("price","update");
x.t("permissioning","information");
x.t("nametype","required");
x.t("nametype","conditional");
x.t("nametype","specified");
x.t("nametype","match");
x.t("indicates","cache");
x.t("indicates","conflate");
x.t("indicates","interest");
x.t("indicates","general");
x.t("item-level","sequence");
x.t("8.2","usage");
x.t("add","update");
x.t("api","edition");
x.t("remove","price");
x.t("images","true");
x.t("filter","used");
x.t("entry","contains");
x.t("true","indicates");
x.t("true","name");
x.t("true","snapshots");
x.t("true","request");
x.t("specified","uses");
x.t("specified","item\u2019s");
x.t("name","required");
x.t("name","conditional");
x.t("name","service");
x.t("name","servicename");
x.t("name","item");
x.t("provider","omm");
x.t("provider","sends");
x.t("provider","send");
x.t("provider","application");
x.t("provider","applications");
x.t("component","description");
x.t("permissiondata","optional");
x.t("conflate","update");
x.t("provides","data");
x.t("fieldlist","containing");
x.t("conflatedcount","specifies");
x.t("conflatedcount","optional");
x.t("sends","conflated");
x.t("encoded","using");
x.t("extendedheader","used");
x.t("map","entry");
x.t("snapshots","supported");
x.t("stream","provided");
x.t("stream","conflatedcount");
x.t("conflated","consumer");
x.t("conflated","update");
x.t("request","nametype");
x.t("request","name");
x.t("request","permissiondata");
x.t("request","specifies");
x.t("request","conflatedtime");
x.t("request","message");
x.t("interactive","provider");
x.t("point","chapter");
x.t("point","information");
x.t("supported","note");
x.t("refresh","response");
x.t("first","refresh");
x.t("messages","within");
x.t("domain","8.2");
x.t("msgkeyinupdates","true");
x.t("instrument_update_unspecified","instrument_update_quote");
x.t("number","used");
x.t("reqmsg.conflatedinupdates","flag");
x.t("serviceid","required");
x.t("serviceid","conditional");
x.t("serviceid","service");
x.t("specifies","qos");
x.t("specifies","time");
x.t("specifies","updates");
x.t("specifies","permissioning");
x.t("specifies","name");
x.t("specifies","service");
x.t("chapter","market");
x.t("seqnum","optional");
x.t("match","nametype");
x.t("interest","information");
x.t("conflatedtime","specifies");
x.t("conflatedtime","optional");
x.t("identifier","used");
x.t("consumer","indicates");
x.t("8.2.3","market");
x.t("message","table");
x.t("message","qos");
x.t("message","however");
x.t("message","donotconflate");
x.t("message","nametype");
x.t("message","add");
x.t("message","api");
x.t("message","component");
x.t("message","encoded");
x.t("message","market");
x.t("message","elektron");
x.t("updatetypenum","required");
x.t("domaintype","required");
x.t("marketbyprice","represented");
x.t("market","price");
x.t("instrument_update_quote","indications");
x.t("value","domaintype");
x.t("interval","milliseconds");
x.t("represented","map");
x.t("usage","8.2.3");
x.t("send","name");
x.t("send","update");
x.t("elektron","message");
x.t("sequence","number");
x.t("information","updates");
x.t("information","price");
x.t("information","update\u2019s");
x.t("information","setting");
x.t("optional","user-specified");
x.t("optional","donotcache");
x.t("optional","provider");
x.t("optional","specifies");
x.t("data","conflated");
x.t("data","note");
x.t("received","images");
x.t("application","either");
x.t("application","sequencing");
x.t("conflation","consumer");
x.t("note","provider");
x.t("milliseconds","data");
x.t("applications","provider");
x.t("typically","sent");
x.t("update\u2019s","content");
x.t("item\u2019s","request");
x.t("edition","8.2.3");
x.t("following","instrument_update_unspecified");
x.t("indications","optional");
x.t("used","payload");
x.t("used","identifier");
x.t("used","application");
x.t("used","servicename");
x.t("used","attrib");
x.t("service","providing");
x.t("service","nametype");
x.t("service","provides");
x.t("service","serviceid");
x.t("either","servicename");
x.t("using","updatemsg");
x.t("general","content");
x.t("sequencing","messages");
x.t("setting","reqmsg.conflatedinupdates");
x.t("containing","information");
x.t("mmt_market_by_price","updatetypenum");
x.t("sent","omm");
x.t("sent","following");
x.t("non-interactive","provider");
x.t("servicename","required");
x.t("servicename","conditional");
x.t("servicename","provided");
x.t("servicename","first");
x.t("servicename","serviceid");
x.t("attrib","used");
x.t("update","response");
x.t("update","remove");
x.t("update","conflatedcount");
x.t("update","conflatedtime");
x.t("update","message");
x.t("update","typically");
x.t("content","extendedheader");
x.t("content","update");
x.t("item","provided");
x.t("contains","fieldlist");
}
