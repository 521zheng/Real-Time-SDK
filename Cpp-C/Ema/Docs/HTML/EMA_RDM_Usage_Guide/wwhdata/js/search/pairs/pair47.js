function FileData_Pairs(x)
{
x.t("description","usage");
x.t("source","directory");
x.t("state","filter");
x.t("payload","source");
x.t("payload","special");
x.t("non-existing","service");
x.t("multiple","streams");
x.t("link","filter");
x.t("status","group");
x.t("status","message");
x.t("status","removing");
x.t("status","values");
x.t("info","filter");
x.t("group","status");
x.t("group","filter");
x.t("api","edition");
x.t("filter","entry");
x.t("entry","source");
x.t("acceptingrequests","service");
x.t("generic","message");
x.t("request","message");
x.t("request","ema");
x.t("refresh","message");
x.t("refresh","update");
x.t("automatic","request");
x.t("domain","description");
x.t("domain","elektron");
x.t("chapter","source");
x.t("requests","non-existing");
x.t("directory","state");
x.t("directory","link");
x.t("directory","status");
x.t("directory","info");
x.t("directory","group");
x.t("directory","generic");
x.t("directory","request");
x.t("directory","refresh");
x.t("directory","domain");
x.t("directory","chapter");
x.t("directory","data");
x.t("directory","consumerstatus");
x.t("directory","load");
x.t("directory","update");
x.t("client","requests");
x.t("ids","automatic");
x.t("consumer","client");
x.t("message","source");
x.t("message","payload");
x.t("message","api");
x.t("message","data");
x.t("usage","source");
x.t("elektron","message");
x.t("services","service");
x.t("data","source");
x.t("data","filter");
x.t("semantics","multiple");
x.t("removing","services");
x.t("values","service");
x.t("servicestate","acceptingrequests");
x.t("edition","chapter");
x.t("consumerstatus","generic");
x.t("special","semantics");
x.t("service","status");
x.t("service","group");
x.t("service","directory");
x.t("service","ids");
x.t("load","filter");
x.t("update","payload");
x.t("update","message");
x.t("streams","servicestate");
x.t("ema","consumer");
}
