function FileData_Pairs(x)
{
x.t("version","payload");
x.t("version","information");
x.t("dictionary_normal=0x7","provides");
x.t("clear","cache");
x.t("description","value");
x.t("user-specified","item-level");
x.t("refer","section");
x.t("table","dictionary");
x.t("omm","interactive");
x.t("required","populate");
x.t("required","payload");
x.t("required","serviceid");
x.t("required","represents");
x.t("required","mmt_dictionary");
x.t("required","service");
x.t("required","contains");
x.t("source","directory");
x.t("dictionary_verbose=0xf","provides");
x.t("5.4.1","name");
x.t("clearcache","true");
x.t("cache","clearcache");
x.t("cache","complete");
x.t("dictionary_minimal=0x3","provides");
x.t("provided","dictionary");
x.t("provided","refresh");
x.t("state","required");
x.t("state","information");
x.t("populate","name");
x.t("payload","required");
x.t("payload","xml");
x.t("payload","structure");
x.t("payload","typically");
x.t("type","version");
x.t("type","however");
x.t("response","refer");
x.t("response","messages");
x.t("multiple","response");
x.t("donotcache","true");
x.t("filterentry","note");
x.t("however","payload");
x.t("needed","decoding");
x.t("needed","caching");
x.t("listed","dictionary\u2019s");
x.t("details","refer");
x.t("element","seviceinfo");
x.t("permissioning","filter");
x.t("status","messages");
x.t("indicates","refresh");
x.t("indicates","specific");
x.t("indicates","application");
x.t("item-level","sequence");
x.t("complete","true");
x.t("complete","seqnum");
x.t("api","edition");
x.t("requested","dictionary");
x.t("filter","required");
x.t("true","indicates");
x.t("true","name");
x.t("requires","permissioning");
x.t("desired","dictionary");
x.t("desired","verbosity");
x.t("name","required");
x.t("name","desired");
x.t("name","name");
x.t("name","dictionariesprovided");
x.t("name","service");
x.t("name","servicename");
x.t("dictionary","type");
x.t("dictionary","requires");
x.t("dictionary","referesh");
x.t("dictionary","stream");
x.t("dictionary","dictionary_info=0x0");
x.t("dictionary","refresh");
x.t("dictionary","domain");
x.t("dictionary","seen");
x.t("dictionary","data");
x.t("provider","send");
x.t("provider","applications");
x.t("component","description");
x.t("permissiondata","optional");
x.t("provides","consumer");
x.t("provides","information");
x.t("referesh","messages");
x.t("summarydata","indicates");
x.t("encoded","using");
x.t("stream","permissiondata");
x.t("stream","data");
x.t("stream","indications");
x.t("interactive","non-interactive");
x.t("dictionary_info=0x0","version");
x.t("refresh","status");
x.t("refresh","complete");
x.t("refresh","message");
x.t("messages","dictionary");
x.t("messages","provider");
x.t("messages","component");
x.t("messages","stream");
x.t("first","refresh");
x.t("domain","usage");
x.t("msgkeyinupdates","true");
x.t("number","used");
x.t("decoding","optional");
x.t("comments","details");
x.t("serviceid","required");
x.t("serviceid","service");
x.t("represents","desired");
x.t("chapter","dictionary");
x.t("seqnum","optional");
x.t("section","5.4.1");
x.t("section","4.3.1");
x.t("directory","response");
x.t("xml","table");
x.t("verbosity","dictionary");
x.t("consumer","content");
x.t("message","api");
x.t("message","dictionary");
x.t("message","encoded");
x.t("message","msgkeyinupdates");
x.t("message","chapter");
x.t("message","elektron");
x.t("domaintype","required");
x.t("seen","source");
x.t("dictionariesprovided","element");
x.t("value","domaintype");
x.t("usage","dictionary");
x.t("5.3.2","dictionary");
x.t("refreshmsg","sent");
x.t("send","name");
x.t("depending","dictionary\u2019s");
x.t("specific","dictionary");
x.t("mmt_dictionary","state");
x.t("elektron","message");
x.t("sequence","number");
x.t("data","state");
x.t("data","multiple");
x.t("information","dictionary_normal=0x7");
x.t("information","needed");
x.t("information","dictionary");
x.t("information","including");
x.t("optional","user-specified");
x.t("optional","dictionary_minimal=0x3");
x.t("optional","donotcache");
x.t("optional","used");
x.t("application","clear");
x.t("application","cache");
x.t("application","either");
x.t("application","sequencing");
x.t("structure","varies");
x.t("dictionary\u2019s","type");
x.t("dictionary\u2019s","name");
x.t("note","application");
x.t("varies","depending");
x.t("applications","provides");
x.t("seviceinfo","filterentry");
x.t("typically","series");
x.t("edition","5.3.2");
x.t("indications","optional");
x.t("used","provided");
x.t("used","application");
x.t("caching","dictionary_verbose=0xf");
x.t("service","payload");
x.t("service","listed");
x.t("service","name");
x.t("service","serviceid");
x.t("either","servicename");
x.t("using","refreshmsg");
x.t("sequencing","messages");
x.t("containing","elementlist");
x.t("series","summarydata");
x.t("series","containing");
x.t("4.3.1","servicename");
x.t("including","comments");
x.t("sent","omm");
x.t("non-interactive","provider");
x.t("servicename","required");
x.t("servicename","provided");
x.t("servicename","first");
x.t("servicename","serviceid");
x.t("elementlist","series");
x.t("content","requested");
x.t("contains","stream");
}
