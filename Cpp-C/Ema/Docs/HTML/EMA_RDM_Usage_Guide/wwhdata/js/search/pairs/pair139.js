function FileData_Pairs(x)
{
x.t("supports","functionality");
x.t("satisfied","range");
x.t("provide","best");
x.t("possible","qos");
x.t("appendix","chapter");
x.t("claim","support");
x.t("instrument_name_ric","name");
x.t("instrument_name_ric","reuters");
x.t("needs","initialimage");
x.t("within","range");
x.t("refer","appendix");
x.t("refer","section");
x.t("refer","message");
x.t("table","market");
x.t("description","value");
x.t("omm","consumer");
x.t("required","batch");
x.t("required","interestafterrefresh");
x.t("required","pause");
x.t("required","mmt_market_maker");
x.t("required","specifies");
x.t("required","indications");
x.t("source","directory");
x.t("flag","consumer");
x.t("parts","stop");
x.t("qos","within");
x.t("qos","provider");
x.t("qos","define");
x.t("qos","consumer");
x.t("qos","optional");
x.t("qos","worstqos");
x.t("snapshot","updates");
x.t("snapshot","final");
x.t("conditional","appropriate");
x.t("support","via");
x.t("responses","received");
x.t("batch","leveraged");
x.t("batch","view");
x.t("batch","item");
x.t("payload","qos");
x.t("payload","contain");
x.t("payload","optional");
x.t("best","possible");
x.t("interestafterrefresh","true");
x.t("response","details");
x.t("reqmsg.interestafterrefresh","true");
x.t("multiple","parts");
x.t("count","associated");
x.t("default","instrument_name_ric");
x.t("updates","required");
x.t("updates","may");
x.t("updates","consumer");
x.t("details","refer");
x.t("nametype","optional");
x.t("nametype","typically");
x.t("indicates","qos");
x.t("indicates","responses");
x.t("indicates","conflated");
x.t("indicates","pause");
x.t("indicates","initial");
x.t("indicates","streaming");
x.t("indicates","class");
x.t("initialimage","true");
x.t("api","edition");
x.t("guide","table");
x.t("according","messaging");
x.t("requested","item");
x.t("filter","used");
x.t("features","view");
x.t("true","flag");
x.t("true","indicates");
x.t("specified","payload");
x.t("specified","request");
x.t("via","supportsqosrange");
x.t("name","required");
x.t("name","requested");
x.t("name","service");
x.t("name","item");
x.t("functionality","information");
x.t("range","qos");
x.t("range","attempt");
x.t("range","acceptable");
x.t("range","used");
x.t("stop","updates");
x.t("part","refresh");
x.t("provider","supports");
x.t("provider","encounters");
x.t("component","description");
x.t("wishes","request");
x.t("leveraged","payload");
x.t("9.2.1","market");
x.t("maker","request");
x.t("maker","domain");
x.t("developers","guide");
x.t("encoded","using");
x.t("final","part");
x.t("extendedheader","used");
x.t("attempt","provide");
x.t("conflated","updates");
x.t("stream","serviced");
x.t("stream","priority");
x.t("contain","information");
x.t("request","satisfied");
x.t("request","required");
x.t("request","filter");
x.t("request","specified");
x.t("request","specifies");
x.t("request","message");
x.t("request","setting");
x.t("request","item");
x.t("pause","required");
x.t("pause","true");
x.t("pause","item");
x.t("reuters","sources");
x.t("reuters","instrument");
x.t("refresh","multiple");
x.t("refresh","indicates");
x.t("mmt_market_maker","interactions");
x.t("feature","details");
x.t("domain","9.2");
x.t("serviced","qos");
x.t("serviceid","required");
x.t("serviceid","service");
x.t("specifies","name");
x.t("specifies","service");
x.t("receive","updates");
x.t("may","received");
x.t("define","range");
x.t("chapter","market");
x.t("requests","snapshot");
x.t("directory","response");
x.t("section","4.3.1.1");
x.t("initial","image");
x.t("reqmsg","sent");
x.t("interactions","conditional");
x.t("interactions","according");
x.t("code","absent");
x.t("identifier","used");
x.t("consumer","wishes");
x.t("consumer","pause");
x.t("consumer","requests");
x.t("consumer","interested");
x.t("consumer","application");
x.t("consumer","applications");
x.t("consumer","wants");
x.t("consumer","streaming");
x.t("supportsqosrange","item");
x.t("thomson","reuters");
x.t("9.2","usage");
x.t("message","api");
x.t("message","component");
x.t("message","encoded");
x.t("message","market");
x.t("domaintype","required");
x.t("encounters","range");
x.t("reverts","default");
x.t("market","maker");
x.t("sources","nametype");
x.t("usage","9.2.1");
x.t("usage","elektron");
x.t("value","domaintype");
x.t("value","reverts");
x.t("view","batch");
x.t("view","request");
x.t("elektron","message");
x.t("acceptable","qos");
x.t("services","claim");
x.t("information","refer");
x.t("information","relevant");
x.t("messaging","needs");
x.t("optional","indicates");
x.t("optional","features");
x.t("optional","conflatedinupdates");
x.t("optional","used");
x.t("optional","consuming");
x.t("interested","receive");
x.t("received","snapshot");
x.t("received","either");
x.t("appropriate","interactions");
x.t("image","required");
x.t("4.3.1.1","priority");
x.t("case","refresh");
x.t("application","either");
x.t("instrument","code");
x.t("absent","value");
x.t("priority","extendedheader");
x.t("priority","optional");
x.t("note","consumer");
x.t("note","used");
x.t("applications","request");
x.t("typically","instrument_name_ric");
x.t("edition","developers");
x.t("edition","9.2");
x.t("either","case");
x.t("either","servicename");
x.t("indications","optional");
x.t("conflatedinupdates","true");
x.t("wants","stream");
x.t("used","qos");
x.t("used","batch");
x.t("used","payload");
x.t("used","identifier");
x.t("used","services");
x.t("used","servicename");
x.t("used","attrib");
x.t("service","nametype");
x.t("service","serviceid");
x.t("service","consumer");
x.t("relevant","feature");
x.t("using","reqmsg");
x.t("streaming","request");
x.t("setting","reqmsg.interestafterrefresh");
x.t("worstqos","specified");
x.t("worstqos","optional");
x.t("class","count");
x.t("associated","stream");
x.t("sent","omm");
x.t("servicename","required");
x.t("servicename","serviceid");
x.t("attrib","used");
x.t("item","source");
x.t("item","provider");
x.t("item","request");
x.t("item","consumer");
x.t("item","note");
x.t("consuming","thomson");
}
