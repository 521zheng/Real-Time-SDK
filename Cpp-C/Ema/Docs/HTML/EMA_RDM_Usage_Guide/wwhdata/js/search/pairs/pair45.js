function FileData_Pairs(x)
{
x.t("supports","login");
x.t("sending","login");
x.t("enabled","enterprise");
x.t("payload","data");
x.t("response","message");
x.t("connection","chapter");
x.t("dacs","enabled");
x.t("dacs","authorization");
x.t("dacs","attrib");
x.t("nametype","user_name");
x.t("enterprise","platform");
x.t("api","edition");
x.t("name","valid");
x.t("name","used");
x.t("3.6","specific");
x.t("user_name","(1)");
x.t("echoed","consumer");
x.t("providepermissionexpressions","supported");
x.t("request","response");
x.t("supported","password");
x.t("domain","specific");
x.t("may","echoed");
x.t("chapter","login");
x.t("ignored","may");
x.t("applicationid","position");
x.t("(1)","attrib");
x.t("necessarily","correct");
x.t("scoping","enterprise");
x.t("allowsuspectdata","providepermissionexpressions");
x.t("consumer","values");
x.t("message","payload");
x.t("message","api");
x.t("login","dacs");
x.t("login","domain");
x.t("login","per");
x.t("authorization","name");
x.t("username","dacs");
x.t("configuration","nametype");
x.t("usage","enterprise");
x.t("specific","usage");
x.t("providepermissionprofile","ignored");
x.t("elektron","message");
x.t("valid","username");
x.t("platform","supports");
x.t("platform","sending");
x.t("platform","name");
x.t("platform","configuration");
x.t("platform","elektron");
x.t("correct","request");
x.t("data","enterprise");
x.t("values","necessarily");
x.t("edition","3.6");
x.t("singleopen","allowsuspectdata");
x.t("used","dacs");
x.t("used","scoping");
x.t("containing","applicationid");
x.t("password","providepermissionprofile");
x.t("per","connection");
x.t("position","singleopen");
x.t("position","used");
x.t("attrib","containing");
x.t("attrib","elementlist");
x.t("elementlist","applicationid");
}
