function FileData_Pairs(x)
{
x.t("complex","information");
x.t("complex","entries");
x.t("example","curve");
x.t("example","chapter");
x.t("included","provide");
x.t("provide","additional");
x.t("provide","information");
x.t("creation","time");
x.t("discount","factor");
x.t("owner","vector");
x.t("needs","present");
x.t("3.0.4","edition");
x.t("maturity","date");
x.t("description","cash");
x.t("description","without");
x.t("refer","section");
x.t("table","yield");
x.t("table","contains");
x.t("5.2","decoding");
x.t("required","description");
x.t("swap_rdate","spread");
x.t("container","type");
x.t("container","entry");
x.t("container","typessee");
x.t("futr_prcs","swap");
x.t("futr_prcs","input");
x.t("outputs","yield");
x.t("outputs","represented");
x.t("outputs","figure");
x.t("field","list");
x.t("field","name");
x.t("field","enumerated");
x.t("curve","creation");
x.t("curve","description");
x.t("curve","outputs");
x.t("curve","type");
x.t("curve","payload");
x.t("curve","calculation");
x.t("curve","interpolation");
x.t("curve","refresh");
x.t("curve","yld_curve");
x.t("curve","represented");
x.t("curve","output");
x.t("curve","data");
x.t("curve","examples");
x.t("curve","inputs");
x.t("non-sorted","vector");
x.t("roll","date");
x.t("payload","example");
x.t("payload","payload");
x.t("payload","yield");
x.t("payload","elektron");
x.t("type","required");
x.t("type","container");
x.t("type","extra");
x.t("type","crv_type");
x.t("type","information");
x.t("response","message");
x.t("crv_algthm","used");
x.t("vector","contents");
x.t("vector","fieldlist");
x.t("vector","types");
x.t("vector","typical");
x.t("vector","bandwidth");
x.t("calculation","outputs");
x.t("time","curve\u2019s");
x.t("down","input");
x.t("rate","yct_fwrate");
x.t("rate","yct_zrate");
x.t("rate","value");
x.t("rate","data");
x.t("rate","sprd_rate");
x.t("swap_rate_val","roll");
x.t("yct_fwrate","discount");
x.t("primitive","type");
x.t("cash_mdate","basis");
x.t("yct_disfac","table");
x.t("contents","field");
x.t("contents","summarydata");
x.t("contents","contain");
x.t("inter_mthd","extrapolation");
x.t("new","fields");
x.t("extrp_mthd","methods");
x.t("houses","fieldlist");
x.t("includes","information");
x.t("spread","rate");
x.t("spread","frequency");
x.t("spread","rates");
x.t("interpolation","inter_mthd");
x.t("list","decoded");
x.t("sprd_rdate","yield");
x.t("yieldcurve","domain");
x.t("swap_mdate","swap");
x.t("api","edition");
x.t("guide","following");
x.t("entry","type");
x.t("tenors","tenors");
x.t("tenors","vectorentry");
x.t("decoded","checking");
x.t("cash_basis","future");
x.t("name","field");
x.t("name","type");
x.t("forward","rate");
x.t("10.3","data");
x.t("ex_met_dat","provides");
x.t("dictionary","refer");
x.t("enumerated","types");
x.t("part","contains");
x.t("futr_mdate","basis");
x.t("fieldlist","container");
x.t("fieldlist","contents");
x.t("fieldlist","fieldentry");
x.t("fieldlist","contains");
x.t("methods","fields");
x.t("further","optimized");
x.t("provides","general");
x.t("summarydata","included");
x.t("summarydata","needs");
x.t("summarydata","fields");
x.t("checking","fieldentry");
x.t("zero","rate");
x.t("optimized","datadefinitions");
x.t("developers","guide");
x.t("allows","users");
x.t("respective","input");
x.t("basis","cash_basis");
x.t("basis","futr_basis");
x.t("fields","vector");
x.t("fields","include");
x.t("fields","defined");
x.t("swap","rate");
x.t("swap","rates");
x.t("meta","information");
x.t("sprd_mdate","spread");
x.t("contain","complex");
x.t("contain","primitive");
x.t("input","vector");
x.t("input","output");
x.t("input","information");
x.t("input","entries");
x.t("extra","meta");
x.t("present","first");
x.t("calculate","curve");
x.t("calculate","yield");
x.t("prices","futr_prcs");
x.t("futr_basis","swap");
x.t("frequency","sprd_freq");
x.t("refresh","part");
x.t("refresh","update");
x.t("first","refresh");
x.t("domain","data");
x.t("decoding","fieldlist");
x.t("dictionaries","information");
x.t("sprd_freq","maturity");
x.t("define","different");
x.t("define","output");
x.t("different","input");
x.t("chapter","yieldcurve");
x.t("types","example");
x.t("types","summarydata");
x.t("types","dictionaries");
x.t("types","examples");
x.t("section","5.2");
x.t("yct_zrate","forward");
x.t("datadefinitions","fieldentry");
x.t("pricing","data");
x.t("message","payload");
x.t("message","api");
x.t("broken","down");
x.t("cash_rates","input");
x.t("cash_rates","future");
x.t("typessee","ema");
x.t("yield","curve");
x.t("include","tenors");
x.t("represented","using");
x.t("swap_rates","input");
x.t("swap_rates","output");
x.t("yld_curve","output");
x.t("yld_curve","itself");
x.t("additional","curve");
x.t("additional","information");
x.t("value","swap_rate_val");
x.t("specific","vector");
x.t("specific","information");
x.t("figure","yield");
x.t("rates","cash_rates");
x.t("rates","swap_rates");
x.t("rates","sprd_rates");
x.t("elektron","message");
x.t("crv_type","algorithm");
x.t("help","describe");
x.t("output","field");
x.t("output","vector");
x.t("output","yield");
x.t("output","typically");
x.t("output","entries");
x.t("curve\u2019s","owner");
x.t("data","type");
x.t("data","response");
x.t("data","typically");
x.t("data","used");
x.t("information","complex");
x.t("information","curve");
x.t("information","vector");
x.t("information","spread");
x.t("information","ex_met_dat");
x.t("information","dictionary");
x.t("information","zero");
x.t("information","allows");
x.t("information","respective");
x.t("information","input");
x.t("information","yield");
x.t("information","specific");
x.t("information","help");
x.t("information","used");
x.t("information","settlement");
x.t("typical","summarydata");
x.t("examples","curve");
x.t("examples","meta");
x.t("future","prices");
x.t("future","pricing");
x.t("defined","examples");
x.t("cash_sdate","maturity");
x.t("sprd_rate","roll");
x.t("users","provide");
x.t("requiring","new");
x.t("date","swap_rdate");
x.t("date","cash_mdate");
x.t("date","sprd_rdate");
x.t("date","swap_mdate");
x.t("date","futr_mdate");
x.t("date","sprd_mdate");
x.t("date","cash_sdate");
x.t("date","swap_sdate");
x.t("date","futr_sdate");
x.t("algorithm","crv_algthm");
x.t("cash","rate");
x.t("cash","rates");
x.t("itself","extra");
x.t("typically","includes");
x.t("swap_sdate","maturity");
x.t("sprd_rates","input");
x.t("factor","yct_disfac");
x.t("edition","10.3");
x.t("edition","developers");
x.t("used","calculate");
x.t("vectorentry","houses");
x.t("following","table");
x.t("fieldentry","contents");
x.t("fieldentry","data");
x.t("using","non-sorted");
x.t("using","elementlist");
x.t("general","information");
x.t("calculated","yield");
x.t("without","requiring");
x.t("describe","curve");
x.t("bandwidth","further");
x.t("settlement","date");
x.t("futr_sdate","maturity");
x.t("extrapolation","extrp_mthd");
x.t("entries","name");
x.t("entries","define");
x.t("entries","broken");
x.t("elementlist","type");
x.t("update","fieldlist");
x.t("inputs","outputs");
x.t("inputs","represented");
x.t("inputs","cash");
x.t("contains","vector");
x.t("contains","spread");
x.t("contains","swap");
x.t("contains","additional");
x.t("contains","specific");
x.t("contains","future");
x.t("contains","cash");
x.t("contains","calculated");
x.t("ema","3.0.4");
}
