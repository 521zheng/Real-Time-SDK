function FileData_Pairs(x)
{
x.t("example","dacs");
x.t("possible","values");
x.t("needs","retry");
x.t("table","login");
x.t("description","value");
x.t("refer","section");
x.t("omm","provider");
x.t("omm","non-interactive");
x.t("required","mmt_login");
x.t("user","needs");
x.t("user","closed");
x.t("unspecified","assumed");
x.t("ommstate.closedrecover","datastate");
x.t("state","change");
x.t("state","information");
x.t("state","optional");
x.t("change","associated");
x.t("open","login");
x.t("open","streams");
x.t("close","existing");
x.t("retry","login");
x.t("type","specified");
x.t("payload","used");
x.t("user_token","user_cookie");
x.t("contents","elementlist");
x.t("dacs","connected");
x.t("nametype","unspecified");
x.t("nametype","user_name");
x.t("nametype","match");
x.t("nametype","optional");
x.t("status","user");
x.t("status","open");
x.t("status","message");
x.t("status","rejecting");
x.t("reject","login");
x.t("api","edition");
x.t("filter","used");
x.t("3.2","usage");
x.t("via","status");
x.t("specified","login");
x.t("streamstate","ommstate.closedrecover");
x.t("streamstate","ommstate.closed");
x.t("name","match");
x.t("name","optional");
x.t("closed","via");
x.t("closed","result");
x.t("provider","omm");
x.t("provider","applications");
x.t("component","description");
x.t("permissiondata","used");
x.t("user_name","name");
x.t("user_name","user_email_address");
x.t("indicate","login");
x.t("extendedheader","used");
x.t("stream","state");
x.t("stream","closed");
x.t("stream","cannot");
x.t("stream","login");
x.t("ommstate.notauthorized","status");
x.t("ommstate.notauthorized","seqnum");
x.t("contain","appropriate");
x.t("request","close");
x.t("request","nametype");
x.t("request","contain");
x.t("present","nametype");
x.t("mmt_login","state");
x.t("ommstate.ok","statuscode");
x.t("ads","streamstate");
x.t("domain","3.2");
x.t("serviceid","used");
x.t("cannot","established");
x.t("datastate","ommstate.ok");
x.t("datastate","ommstate.suspect");
x.t("chapter","login");
x.t("seqnum","optional");
x.t("match","type");
x.t("match","used");
x.t("section","3.2.5");
x.t("connected","ads");
x.t("identifier","used");
x.t("consumer","state");
x.t("user_cookie","present");
x.t("login","example");
x.t("login","status");
x.t("login","streamstate");
x.t("login","stream");
x.t("login","request");
x.t("login","domain");
x.t("message","omm");
x.t("message","api");
x.t("message","convey");
x.t("message","elektron");
x.t("message","used");
x.t("message","member");
x.t("domaintype","required");
x.t("existing","login");
x.t("convey","state");
x.t("value","domaintype");
x.t("usage","3.2.7");
x.t("elektron","message");
x.t("established","inform");
x.t("information","indicate");
x.t("information","associated");
x.t("optional","possible");
x.t("optional","status");
x.t("optional","name");
x.t("optional","typically");
x.t("optional","itemgroup");
x.t("result","table");
x.t("appropriate","content");
x.t("values","user_name");
x.t("specification","filter");
x.t("3.2.5","payload");
x.t("applications","login");
x.t("inform","consumer");
x.t("statuscode","ommstate.notauthorized");
x.t("user_email_address","user_token");
x.t("typically","elementlist");
x.t("3.2.7","login");
x.t("edition","3.2.7");
x.t("used","nametype");
x.t("used","reject");
x.t("used","permissiondata");
x.t("used","extendedheader");
x.t("used","serviceid");
x.t("used","chapter");
x.t("used","identifier");
x.t("used","login");
x.t("used","attrib");
x.t("corresponding","specification");
x.t("rejecting","login");
x.t("associated","user");
x.t("associated","open");
x.t("associated","login");
x.t("member","component");
x.t("itemgroup","used");
x.t("non-interactive","provider");
x.t("ommstate.closed","datastate");
x.t("assumed","nametype");
x.t("attrib","optional");
x.t("elementlist","refer");
x.t("elementlist","contents");
x.t("streams","associated");
x.t("ommstate.suspect","statuscode");
x.t("content","corresponding");
}
