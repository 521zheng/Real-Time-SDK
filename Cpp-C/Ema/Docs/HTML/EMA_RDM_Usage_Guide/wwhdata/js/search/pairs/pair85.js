function FileData_Pairs(x)
{
x.t("dictionarytype","needed");
x.t("dictionarytype","element");
x.t("unregister","request");
x.t("latest","version");
x.t("version","leave");
x.t("version","element");
x.t("version","application");
x.t("every","service");
x.t("lists","dictionaryname");
x.t("needs","unregister");
x.t("saved","dictionary");
x.t("table","includes");
x.t("ommarray","ascii");
x.t("related","dictionaries");
x.t("downloaded","saved");
x.t("downloaded","parse");
x.t("leave","first");
x.t("open","monitor");
x.t("5.8","special");
x.t("discover","dictionaries");
x.t("dictionaryname","dictionariesprovided");
x.t("response","message");
x.t("response","payload.datatype");
x.t("filterentry","table");
x.t("listed","dictionariesused");
x.t("dictionary_info","requesting");
x.t("dictionary_info","application");
x.t("needed","application");
x.t("element","payload.summarydata");
x.t("element","used");
x.t("includes","data");
x.t("includes","two");
x.t("need","parse");
x.t("api","edition");
x.t("parse","dictionariesprovided");
x.t("parse","payload.summarydata");
x.t("parse","dictionariesused");
x.t("desired","service");
x.t("name","listed");
x.t("name","request");
x.t("incur","extra");
x.t("dictionary","version");
x.t("dictionary","response");
x.t("dictionary","name");
x.t("dictionary","changed");
x.t("dictionary","domain");
x.t("dictionary","different");
x.t("dictionary","names");
x.t("previously","downloaded");
x.t("changed","chapter");
x.t("requesting","dictionary_info");
x.t("ascii","dictionary");
x.t("minimizing","amount");
x.t("contain","ommarray");
x.t("extra","bandwidth");
x.t("request","dictionarytype");
x.t("request","open");
x.t("request","dictionary");
x.t("request","dictionaries");
x.t("request","different");
x.t("request","section");
x.t("first","request");
x.t("domain","special");
x.t("dictionaries","need");
x.t("dictionaries","minimizing");
x.t("dictionaries","dictionariesprovided");
x.t("dictionaries","dynamically");
x.t("different","datamask");
x.t("chapter","dictionary");
x.t("directoryinfo","filterentry");
x.t("directory","parse");
x.t("directory","streaming");
x.t("section","2.3");
x.t("message","dictionary_info");
x.t("message","api");
x.t("message","received");
x.t("5.8.1","dictionariesprovided");
x.t("e.g","dictionary_normal");
x.t("dictionariesprovided","every");
x.t("dictionariesprovided","datamask");
x.t("dictionariesprovided","dictionariesused");
x.t("amount","data");
x.t("directory\u2019s","directoryinfo");
x.t("datamask","includes");
x.t("datamask","request");
x.t("datamask","application");
x.t("elektron","message");
x.t("data","downloaded");
x.t("data","e.g");
x.t("overhead","dictionaries");
x.t("semantics","5.8.1");
x.t("semantics","elektron");
x.t("received","response");
x.t("application","latest");
x.t("application","needs");
x.t("application","incur");
x.t("application","previously");
x.t("application","reissue");
x.t("reissue","request");
x.t("monitor","dictionary");
x.t("two","elements");
x.t("edition","5.8");
x.t("payload.summarydata","dictionary");
x.t("payload.summarydata","application");
x.t("special","semantics");
x.t("elements","related");
x.t("elements","contain");
x.t("used","name");
x.t("used","application");
x.t("service","lists");
x.t("service","directory");
x.t("streaming","request");
x.t("dictionary_normal","application");
x.t("dictionariesused","desired");
x.t("dictionariesused","directory\u2019s");
x.t("dictionariesused","elements");
x.t("dictionariesused","service");
x.t("2.3","message");
x.t("series","elementlist");
x.t("names","used");
x.t("names","names");
x.t("payload.datatype","series");
x.t("bandwidth","overhead");
x.t("elementlist","dictionarytype");
x.t("dynamically","discover");
}
