function FileData_Pairs(x)
{
x.t("example","description");
x.t("possible","size");
x.t("rwflen","uint");
x.t("-32768","32767");
x.t("3.0.4","edition");
x.t("description","name");
x.t("description","rippling");
x.t("refer","ema");
x.t("table","field");
x.t("table","section");
x.t("normal","e.g");
x.t("normal","0-65535");
x.t("fid","int");
x.t("field","rwflen");
x.t("field","table");
x.t("field","ripple");
x.t("field","marketfeed");
x.t("field","dictionary");
x.t("field","ripples");
x.t("5.5","field");
x.t("cache","encoded");
x.t("payload","field");
x.t("payload","payload");
x.t("payload","name");
x.t("type","field");
x.t("type","default");
x.t("type","enumlength");
x.t("type","enumeration");
x.t("type","int");
x.t("default","least");
x.t("needed","cache");
x.t("consists","series");
x.t("element","enumerated");
x.t("element","row");
x.t("size","type");
x.t("enumlength","uint");
x.t("stringascii","none");
x.t("short","name");
x.t("32767","field");
x.t("32767","field\u2019s");
x.t("api","edition");
x.t("entry","provides");
x.t("guide","type");
x.t("ripple","description");
x.t("marketfeed","format");
x.t("name","type");
x.t("name","stringascii");
x.t("name","acronym");
x.t("name","dde");
x.t("range","example");
x.t("acronym","fid");
x.t("acronym","field");
x.t("rwftype","uint");
x.t("dictionary","payload");
x.t("dictionary","5.5.1");
x.t("dictionary","refresh");
x.t("dictionary","domain");
x.t("dictionary","elektron");
x.t("dictionary","elemententry");
x.t("dictionary","elementlist");
x.t("enumerated","types");
x.t("ripples","fieldid");
x.t("ripples","value");
x.t("enumeration","length");
x.t("provides","information");
x.t("none","normal");
x.t("none","minimal");
x.t("field\u2019s","short");
x.t("field\u2019s","fieldid");
x.t("suggestion","enforced");
x.t("fieldid","field");
x.t("fieldid","rippleto");
x.t("developers","guide");
x.t("ascii","none");
x.t("encoded","value");
x.t("int","none");
x.t("int","datatype");
x.t("sets","field");
x.t("string","length");
x.t("implies","maximum");
x.t("fields","type");
x.t("contain","elementlist");
x.t("uint","none");
x.t("datatype","field");
x.t("dde","acronym");
x.t("display","element");
x.t("5.5.1","field");
x.t("refresh","message");
x.t("long","name");
x.t("domain","field");
x.t("length","field");
x.t("length","needed");
x.t("length","implies");
x.t("length","uint");
x.t("length","display");
x.t("maximum","possible");
x.t("maximum","string");
x.t("maximum","length");
x.t("represents","row");
x.t("chapter","dictionary");
x.t("row","figure");
x.t("row","information");
x.t("rippling","refer");
x.t("format","rwftype");
x.t("format","length");
x.t("types","table");
x.t("section","5.6.1");
x.t("verbosity","range");
x.t("rippleto","int");
x.t("message","consists");
x.t("message","api");
x.t("seriesentry","represents");
x.t("least","verbosity");
x.t("e.g","int");
x.t("e.g","permission");
x.t("e.g","integer");
x.t("e.g","prod_perm");
x.t("value","suggestion");
x.t("value","sets");
x.t("figure","field");
x.t("enforced","length");
x.t("elektron","message");
x.t("information","element");
x.t("information","dictionary");
x.t("data","type");
x.t("longname","ascii");
x.t("permission","long");
x.t("integer","data");
x.t("edition","5.5");
x.t("edition","developers");
x.t("prod_perm","field\u2019s");
x.t("5.6.1","longname");
x.t("elemententry","chapter");
x.t("contained","series");
x.t("0-65535","maximum");
x.t("0-65535","used");
x.t("used","fields");
x.t("series","entry");
x.t("series","series");
x.t("series","entries");
x.t("minimal","-32768");
x.t("minimal","e.g");
x.t("minimal","0-65535");
x.t("entries","contain");
x.t("elementlist","seriesentry");
x.t("elementlist","contained");
x.t("ema","3.0.4");
}
